Begin System Initialization
Create Virtual Memory
Write Instructions to Memory
Check Instructions after writing to memory
Instruction #0: flw f0, 32(x1)
Instruction #1: fadd.s f4, f0, f2
Instruction #2: fsw f4, 32(x1)
Instruction #3: addi x1, x1, -8
Instruction #4: bne x1, x2, -28
Instruction #5: addi x0, x0, 0
Instruction #6: addi x0, x0, 0
Instruction #7: addi x0, x0, 0
Instruction #8: addi x0, x0, 0
First Empty Address: 0x24
=========================Create CPU=========================
======================Simulation Begin======================

=====================Simulation Loop #1=====================
Branch detected in: None
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
///////Cpu Cycle Debug Statements///////
X1 value: 160
*************Current Event**************
****************************************
Clock ticks: 10
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************

=====================Simulation Loop #2=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 160
*************Current Event**************
****************************************
Clock ticks: 20
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************

=====================Simulation Loop #3=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 192
Data in rs1: 160
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 192
///////Cpu Cycle Debug Statements///////
X1 value: 160
*************Current Event**************
****************************************
Clock ticks: 30
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************

=====================Simulation Loop #4=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
//////////////Memory Stage//////////////
FP Memory Read Operation
Memory Address: 0
Loaded Data: 9.44988e-38
///////Cpu Cycle Debug Statements///////
X1 value: 160
*************Current Event**************
****************************************
Clock ticks: 40
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************

=====================Simulation Loop #5=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001001011100011
Assembly Instruction: bne x1, x2, -28
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 160
*************Current Event**************
****************************************
Clock ticks: 50
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -28
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: flw f0, 32(x1)
****************************************

=====================Simulation Loop #6=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 152
Data in rs1: 160
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 152
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 544
Data To Store: 0
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 160
*************Current Event**************
****************************************
Clock ticks: 60
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -28
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: fadd.s f4, f0, f2
****************************************

=====================Simulation Loop #7=====================
Fetch stage flushed:
Branch detected in: Decode
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
Branch check: True
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 28
Data in rs2: -28
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 160
*************Current Event**************
****************************************
Clock ticks: 70
PC at start of cycle: 0x18
PC at end of cycle: 0x1c
Fetch Stage: addi x0, x0, 0
Decode Stage: Branch/Jump Stall
Execute Stage: bne x1, x2, -28
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************

=====================Simulation Loop #8=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 0
ALU Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 9.44988e-38
Data in rs2_fp: 9.44988e-38
ALU result: 0
//////////////Memory Stage//////////////
Next Instruction: PC = ALU result
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 152
*************Current Event**************
****************************************
Clock ticks: 80
PC at start of cycle: 0x1c
PC at end of cycle: 0x0
Fetch Stage: addi x0, x0, 0
Decode Stage: addi x0, x0, 0
Execute Stage: Branch/Jump Stall
Memory Stage: bne x1, x2, -28
Write Back Stage: addi x1, x1, -8
****************************************

=====================Simulation Loop #9=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 9.44988e-38
Data in rs2_fp: 9.44988e-38
ALU result: 0
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 152
*************Current Event**************
****************************************
Clock ticks: 90
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: addi x0, x0, 0
Execute Stage: addi x0, x0, 0
Memory Stage: Branch/Jump Stall
Write Back Stage: bne x1, x2, -28
****************************************

=====================Simulation Loop #10=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 9.44988e-38
Data in rs2_fp: 9.44988e-38
ALU result: 0
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 152
*************Current Event**************
****************************************
Clock ticks: 100
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: addi x0, x0, 0
Memory Stage: addi x0, x0, 0
Write Back Stage: Branch/Jump Stall
****************************************

=====================Simulation Loop #11=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 184
Data in rs1: 152
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 9.44988e-38
ALU result: 184
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 152
*************Current Event**************
****************************************
Clock ticks: 110
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: addi x0, x0, 0
Write Back Stage: addi x0, x0, 0
****************************************

=====================Simulation Loop #12=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 9.44988e-38
Data in rs2_fp: 0
ALU result: 0
//////////////Memory Stage//////////////
FP Memory Read Operation
Memory Address: 0
Loaded Data: 9.44988e-38
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 152
*************Current Event**************
****************************************
Clock ticks: 120
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: flw f0, 32(x1)
Write Back Stage: addi x0, x0, 0
****************************************

=====================Simulation Loop #13=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001001011100011
Assembly Instruction: bne x1, x2, -28
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 152
*************Current Event**************
****************************************
Clock ticks: 130
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -28
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: flw f0, 32(x1)
****************************************

=====================Simulation Loop #14=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 144
Data in rs1: 152
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 144
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 544
Data To Store: 0
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 152
*************Current Event**************
****************************************
Clock ticks: 140
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -28
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: fadd.s f4, f0, f2
****************************************

=====================Simulation Loop #15=====================
Fetch stage flushed:
Branch detected in: Decode
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
Branch check: True
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 28
Data in rs2: -28
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 152
*************Current Event**************
****************************************
Clock ticks: 150
PC at start of cycle: 0x18
PC at end of cycle: 0x1c
Fetch Stage: addi x0, x0, 0
Decode Stage: Branch/Jump Stall
Execute Stage: bne x1, x2, -28
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************

=====================Simulation Loop #16=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 0
ALU Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 9.44988e-38
Data in rs2_fp: 9.44988e-38
ALU result: 0
//////////////Memory Stage//////////////
Next Instruction: PC = ALU result
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 144
*************Current Event**************
****************************************
Clock ticks: 160
PC at start of cycle: 0x1c
PC at end of cycle: 0x0
Fetch Stage: addi x0, x0, 0
Decode Stage: addi x0, x0, 0
Execute Stage: Branch/Jump Stall
Memory Stage: bne x1, x2, -28
Write Back Stage: addi x1, x1, -8
****************************************

=====================Simulation Loop #17=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 9.44988e-38
Data in rs2_fp: 9.44988e-38
ALU result: 0
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 144
*************Current Event**************
****************************************
Clock ticks: 170
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: addi x0, x0, 0
Execute Stage: addi x0, x0, 0
Memory Stage: Branch/Jump Stall
Write Back Stage: bne x1, x2, -28
****************************************

=====================Simulation Loop #18=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 9.44988e-38
Data in rs2_fp: 9.44988e-38
ALU result: 0
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 144
*************Current Event**************
****************************************
Clock ticks: 180
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: addi x0, x0, 0
Memory Stage: addi x0, x0, 0
Write Back Stage: Branch/Jump Stall
****************************************

=====================Simulation Loop #19=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 176
Data in rs1: 144
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 9.44988e-38
ALU result: 176
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 144
*************Current Event**************
****************************************
Clock ticks: 190
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: addi x0, x0, 0
Write Back Stage: addi x0, x0, 0
****************************************

=====================Simulation Loop #20=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 9.44988e-38
Data in rs2_fp: 0
ALU result: 0
//////////////Memory Stage//////////////
FP Memory Read Operation
Memory Address: 0
Loaded Data: 9.44988e-38
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 144
*************Current Event**************
****************************************
Clock ticks: 200
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: flw f0, 32(x1)
Write Back Stage: addi x0, x0, 0
****************************************

=====================Simulation Loop #21=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001001011100011
Assembly Instruction: bne x1, x2, -28
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 144
*************Current Event**************
****************************************
Clock ticks: 210
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -28
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: flw f0, 32(x1)
****************************************

=====================Simulation Loop #22=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 136
Data in rs1: 144
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 136
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 544
Data To Store: 0
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 144
*************Current Event**************
****************************************
Clock ticks: 220
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -28
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: fadd.s f4, f0, f2
****************************************

=====================Simulation Loop #23=====================
Fetch stage flushed:
Branch detected in: Decode
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
Branch check: True
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 28
Data in rs2: -28
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 144
*************Current Event**************
****************************************
Clock ticks: 230
PC at start of cycle: 0x18
PC at end of cycle: 0x1c
Fetch Stage: addi x0, x0, 0
Decode Stage: Branch/Jump Stall
Execute Stage: bne x1, x2, -28
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************

=====================Simulation Loop #24=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 0
ALU Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 9.44988e-38
Data in rs2_fp: 9.44988e-38
ALU result: 0
//////////////Memory Stage//////////////
Next Instruction: PC = ALU result
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 136
*************Current Event**************
****************************************
Clock ticks: 240
PC at start of cycle: 0x1c
PC at end of cycle: 0x0
Fetch Stage: addi x0, x0, 0
Decode Stage: addi x0, x0, 0
Execute Stage: Branch/Jump Stall
Memory Stage: bne x1, x2, -28
Write Back Stage: addi x1, x1, -8
****************************************

=====================Simulation Loop #25=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 9.44988e-38
Data in rs2_fp: 9.44988e-38
ALU result: 0
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 136
*************Current Event**************
****************************************
Clock ticks: 250
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: addi x0, x0, 0
Execute Stage: addi x0, x0, 0
Memory Stage: Branch/Jump Stall
Write Back Stage: bne x1, x2, -28
****************************************

=====================Simulation Loop #26=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 9.44988e-38
Data in rs2_fp: 9.44988e-38
ALU result: 0
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 136
*************Current Event**************
****************************************
Clock ticks: 260
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: addi x0, x0, 0
Memory Stage: addi x0, x0, 0
Write Back Stage: Branch/Jump Stall
****************************************

=====================Simulation Loop #27=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 168
Data in rs1: 136
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 9.44988e-38
ALU result: 168
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 136
*************Current Event**************
****************************************
Clock ticks: 270
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: addi x0, x0, 0
Write Back Stage: addi x0, x0, 0
****************************************

=====================Simulation Loop #28=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 9.44988e-38
Data in rs2_fp: 0
ALU result: 0
//////////////Memory Stage//////////////
FP Memory Read Operation
Memory Address: 0
Loaded Data: 9.44988e-38
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 136
*************Current Event**************
****************************************
Clock ticks: 280
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: flw f0, 32(x1)
Write Back Stage: addi x0, x0, 0
****************************************

=====================Simulation Loop #29=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001001011100011
Assembly Instruction: bne x1, x2, -28
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 136
*************Current Event**************
****************************************
Clock ticks: 290
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -28
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: flw f0, 32(x1)
****************************************

=====================Simulation Loop #30=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 128
Data in rs1: 136
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 128
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 544
Data To Store: 0
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 136
*************Current Event**************
****************************************
Clock ticks: 300
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -28
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: fadd.s f4, f0, f2
****************************************

=====================Simulation Loop #31=====================
Fetch stage flushed:
Branch detected in: Decode
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
Branch check: True
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 28
Data in rs2: -28
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 136
*************Current Event**************
****************************************
Clock ticks: 310
PC at start of cycle: 0x18
PC at end of cycle: 0x1c
Fetch Stage: addi x0, x0, 0
Decode Stage: Branch/Jump Stall
Execute Stage: bne x1, x2, -28
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************

=====================Simulation Loop #32=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 0
ALU Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 9.44988e-38
Data in rs2_fp: 9.44988e-38
ALU result: 0
//////////////Memory Stage//////////////
Next Instruction: PC = ALU result
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 128
*************Current Event**************
****************************************
Clock ticks: 320
PC at start of cycle: 0x1c
PC at end of cycle: 0x0
Fetch Stage: addi x0, x0, 0
Decode Stage: addi x0, x0, 0
Execute Stage: Branch/Jump Stall
Memory Stage: bne x1, x2, -28
Write Back Stage: addi x1, x1, -8
****************************************

=====================Simulation Loop #33=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 9.44988e-38
Data in rs2_fp: 9.44988e-38
ALU result: 0
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 128
*************Current Event**************
****************************************
Clock ticks: 330
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: addi x0, x0, 0
Execute Stage: addi x0, x0, 0
Memory Stage: Branch/Jump Stall
Write Back Stage: bne x1, x2, -28
****************************************

=====================Simulation Loop #34=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 9.44988e-38
Data in rs2_fp: 9.44988e-38
ALU result: 0
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 128
*************Current Event**************
****************************************
Clock ticks: 340
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: addi x0, x0, 0
Memory Stage: addi x0, x0, 0
Write Back Stage: Branch/Jump Stall
****************************************

=====================Simulation Loop #35=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 160
Data in rs1: 128
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 9.44988e-38
ALU result: 160
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 128
*************Current Event**************
****************************************
Clock ticks: 350
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: addi x0, x0, 0
Write Back Stage: addi x0, x0, 0
****************************************

=====================Simulation Loop #36=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 9.44988e-38
Data in rs2_fp: 0
ALU result: 0
//////////////Memory Stage//////////////
FP Memory Read Operation
Memory Address: 0
Loaded Data: 9.44988e-38
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 128
*************Current Event**************
****************************************
Clock ticks: 360
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: flw f0, 32(x1)
Write Back Stage: addi x0, x0, 0
****************************************

=====================Simulation Loop #37=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001001011100011
Assembly Instruction: bne x1, x2, -28
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 128
*************Current Event**************
****************************************
Clock ticks: 370
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -28
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: flw f0, 32(x1)
****************************************

=====================Simulation Loop #38=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 120
Data in rs1: 128
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 120
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 544
Data To Store: 0
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 128
*************Current Event**************
****************************************
Clock ticks: 380
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -28
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: fadd.s f4, f0, f2
****************************************

=====================Simulation Loop #39=====================
Fetch stage flushed:
Branch detected in: Decode
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
Branch check: True
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 28
Data in rs2: -28
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 128
*************Current Event**************
****************************************
Clock ticks: 390
PC at start of cycle: 0x18
PC at end of cycle: 0x1c
Fetch Stage: addi x0, x0, 0
Decode Stage: Branch/Jump Stall
Execute Stage: bne x1, x2, -28
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************

=====================Simulation Loop #40=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 0
ALU Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 9.44988e-38
Data in rs2_fp: 9.44988e-38
ALU result: 0
//////////////Memory Stage//////////////
Next Instruction: PC = ALU result
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 120
*************Current Event**************
****************************************
Clock ticks: 400
PC at start of cycle: 0x1c
PC at end of cycle: 0x0
Fetch Stage: addi x0, x0, 0
Decode Stage: addi x0, x0, 0
Execute Stage: Branch/Jump Stall
Memory Stage: bne x1, x2, -28
Write Back Stage: addi x1, x1, -8
****************************************

=====================Simulation Loop #41=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 9.44988e-38
Data in rs2_fp: 9.44988e-38
ALU result: 0
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 120
*************Current Event**************
****************************************
Clock ticks: 410
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: addi x0, x0, 0
Execute Stage: addi x0, x0, 0
Memory Stage: Branch/Jump Stall
Write Back Stage: bne x1, x2, -28
****************************************

=====================Simulation Loop #42=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 9.44988e-38
Data in rs2_fp: 9.44988e-38
ALU result: 0
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 120
*************Current Event**************
****************************************
Clock ticks: 420
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: addi x0, x0, 0
Memory Stage: addi x0, x0, 0
Write Back Stage: Branch/Jump Stall
****************************************

=====================Simulation Loop #43=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 152
Data in rs1: 120
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 9.44988e-38
ALU result: 152
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 120
*************Current Event**************
****************************************
Clock ticks: 430
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: addi x0, x0, 0
Write Back Stage: addi x0, x0, 0
****************************************

=====================Simulation Loop #44=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 9.44988e-38
Data in rs2_fp: 0
ALU result: 0
//////////////Memory Stage//////////////
FP Memory Read Operation
Memory Address: 0
Loaded Data: 9.44988e-38
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 120
*************Current Event**************
****************************************
Clock ticks: 440
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: flw f0, 32(x1)
Write Back Stage: addi x0, x0, 0
****************************************

=====================Simulation Loop #45=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001001011100011
Assembly Instruction: bne x1, x2, -28
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 120
*************Current Event**************
****************************************
Clock ticks: 450
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -28
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: flw f0, 32(x1)
****************************************

=====================Simulation Loop #46=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 112
Data in rs1: 120
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 112
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 544
Data To Store: 0
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 120
*************Current Event**************
****************************************
Clock ticks: 460
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -28
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: fadd.s f4, f0, f2
****************************************

=====================Simulation Loop #47=====================
Fetch stage flushed:
Branch detected in: Decode
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
Branch check: True
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 28
Data in rs2: -28
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 120
*************Current Event**************
****************************************
Clock ticks: 470
PC at start of cycle: 0x18
PC at end of cycle: 0x1c
Fetch Stage: addi x0, x0, 0
Decode Stage: Branch/Jump Stall
Execute Stage: bne x1, x2, -28
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************

=====================Simulation Loop #48=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 0
ALU Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 9.44988e-38
Data in rs2_fp: 9.44988e-38
ALU result: 0
//////////////Memory Stage//////////////
Next Instruction: PC = ALU result
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 112
*************Current Event**************
****************************************
Clock ticks: 480
PC at start of cycle: 0x1c
PC at end of cycle: 0x0
Fetch Stage: addi x0, x0, 0
Decode Stage: addi x0, x0, 0
Execute Stage: Branch/Jump Stall
Memory Stage: bne x1, x2, -28
Write Back Stage: addi x1, x1, -8
****************************************

=====================Simulation Loop #49=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 9.44988e-38
Data in rs2_fp: 9.44988e-38
ALU result: 0
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 112
*************Current Event**************
****************************************
Clock ticks: 490
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: addi x0, x0, 0
Execute Stage: addi x0, x0, 0
Memory Stage: Branch/Jump Stall
Write Back Stage: bne x1, x2, -28
****************************************

=====================Simulation Loop #50=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 9.44988e-38
Data in rs2_fp: 9.44988e-38
ALU result: 0
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 112
*************Current Event**************
****************************************
Clock ticks: 500
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: addi x0, x0, 0
Memory Stage: addi x0, x0, 0
Write Back Stage: Branch/Jump Stall
****************************************

=====================Simulation Loop #51=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 144
Data in rs1: 112
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 9.44988e-38
ALU result: 144
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 112
*************Current Event**************
****************************************
Clock ticks: 510
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: addi x0, x0, 0
Write Back Stage: addi x0, x0, 0
****************************************

=====================Simulation Loop #52=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 9.44988e-38
Data in rs2_fp: 0
ALU result: 0
//////////////Memory Stage//////////////
FP Memory Read Operation
Memory Address: 0
Loaded Data: 9.44988e-38
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 112
*************Current Event**************
****************************************
Clock ticks: 520
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: flw f0, 32(x1)
Write Back Stage: addi x0, x0, 0
****************************************

=====================Simulation Loop #53=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001001011100011
Assembly Instruction: bne x1, x2, -28
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 112
*************Current Event**************
****************************************
Clock ticks: 530
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -28
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: flw f0, 32(x1)
****************************************

=====================Simulation Loop #54=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 104
Data in rs1: 112
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 104
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 544
Data To Store: 0
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 112
*************Current Event**************
****************************************
Clock ticks: 540
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -28
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: fadd.s f4, f0, f2
****************************************

=====================Simulation Loop #55=====================
Fetch stage flushed:
Branch detected in: Decode
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
Branch check: True
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 28
Data in rs2: -28
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 112
*************Current Event**************
****************************************
Clock ticks: 550
PC at start of cycle: 0x18
PC at end of cycle: 0x1c
Fetch Stage: addi x0, x0, 0
Decode Stage: Branch/Jump Stall
Execute Stage: bne x1, x2, -28
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************

=====================Simulation Loop #56=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 0
ALU Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 9.44988e-38
Data in rs2_fp: 9.44988e-38
ALU result: 0
//////////////Memory Stage//////////////
Next Instruction: PC = ALU result
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 104
*************Current Event**************
****************************************
Clock ticks: 560
PC at start of cycle: 0x1c
PC at end of cycle: 0x0
Fetch Stage: addi x0, x0, 0
Decode Stage: addi x0, x0, 0
Execute Stage: Branch/Jump Stall
Memory Stage: bne x1, x2, -28
Write Back Stage: addi x1, x1, -8
****************************************

=====================Simulation Loop #57=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 9.44988e-38
Data in rs2_fp: 9.44988e-38
ALU result: 0
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 104
*************Current Event**************
****************************************
Clock ticks: 570
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: addi x0, x0, 0
Execute Stage: addi x0, x0, 0
Memory Stage: Branch/Jump Stall
Write Back Stage: bne x1, x2, -28
****************************************

=====================Simulation Loop #58=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 9.44988e-38
Data in rs2_fp: 9.44988e-38
ALU result: 0
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 104
*************Current Event**************
****************************************
Clock ticks: 580
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: addi x0, x0, 0
Memory Stage: addi x0, x0, 0
Write Back Stage: Branch/Jump Stall
****************************************

=====================Simulation Loop #59=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 136
Data in rs1: 104
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 9.44988e-38
ALU result: 136
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 104
*************Current Event**************
****************************************
Clock ticks: 590
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: addi x0, x0, 0
Write Back Stage: addi x0, x0, 0
****************************************

=====================Simulation Loop #60=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 9.44988e-38
Data in rs2_fp: 0
ALU result: 0
//////////////Memory Stage//////////////
FP Memory Read Operation
Memory Address: 0
Loaded Data: 9.44988e-38
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 104
*************Current Event**************
****************************************
Clock ticks: 600
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: flw f0, 32(x1)
Write Back Stage: addi x0, x0, 0
****************************************

=====================Simulation Loop #61=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001001011100011
Assembly Instruction: bne x1, x2, -28
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 104
*************Current Event**************
****************************************
Clock ticks: 610
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -28
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: flw f0, 32(x1)
****************************************

=====================Simulation Loop #62=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 96
Data in rs1: 104
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 96
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 544
Data To Store: 0
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 104
*************Current Event**************
****************************************
Clock ticks: 620
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -28
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: fadd.s f4, f0, f2
****************************************

=====================Simulation Loop #63=====================
Fetch stage flushed:
Branch detected in: Decode
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
Branch check: True
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 28
Data in rs2: -28
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 104
*************Current Event**************
****************************************
Clock ticks: 630
PC at start of cycle: 0x18
PC at end of cycle: 0x1c
Fetch Stage: addi x0, x0, 0
Decode Stage: Branch/Jump Stall
Execute Stage: bne x1, x2, -28
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************

=====================Simulation Loop #64=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 0
ALU Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 9.44988e-38
Data in rs2_fp: 9.44988e-38
ALU result: 0
//////////////Memory Stage//////////////
Next Instruction: PC = ALU result
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 96
*************Current Event**************
****************************************
Clock ticks: 640
PC at start of cycle: 0x1c
PC at end of cycle: 0x0
Fetch Stage: addi x0, x0, 0
Decode Stage: addi x0, x0, 0
Execute Stage: Branch/Jump Stall
Memory Stage: bne x1, x2, -28
Write Back Stage: addi x1, x1, -8
****************************************

=====================Simulation Loop #65=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 9.44988e-38
Data in rs2_fp: 9.44988e-38
ALU result: 0
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 96
*************Current Event**************
****************************************
Clock ticks: 650
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: addi x0, x0, 0
Execute Stage: addi x0, x0, 0
Memory Stage: Branch/Jump Stall
Write Back Stage: bne x1, x2, -28
****************************************

=====================Simulation Loop #66=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 9.44988e-38
Data in rs2_fp: 9.44988e-38
ALU result: 0
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 96
*************Current Event**************
****************************************
Clock ticks: 660
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: addi x0, x0, 0
Memory Stage: addi x0, x0, 0
Write Back Stage: Branch/Jump Stall
****************************************

=====================Simulation Loop #67=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 128
Data in rs1: 96
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 9.44988e-38
ALU result: 128
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 96
*************Current Event**************
****************************************
Clock ticks: 670
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: addi x0, x0, 0
Write Back Stage: addi x0, x0, 0
****************************************

=====================Simulation Loop #68=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 9.44988e-38
Data in rs2_fp: 0
ALU result: 0
//////////////Memory Stage//////////////
FP Memory Read Operation
Memory Address: 0
Loaded Data: 9.44988e-38
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 96
*************Current Event**************
****************************************
Clock ticks: 680
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: flw f0, 32(x1)
Write Back Stage: addi x0, x0, 0
****************************************

=====================Simulation Loop #69=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001001011100011
Assembly Instruction: bne x1, x2, -28
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 96
*************Current Event**************
****************************************
Clock ticks: 690
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -28
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: flw f0, 32(x1)
****************************************

=====================Simulation Loop #70=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 88
Data in rs1: 96
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 88
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 544
Data To Store: 0
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 96
*************Current Event**************
****************************************
Clock ticks: 700
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -28
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: fadd.s f4, f0, f2
****************************************

=====================Simulation Loop #71=====================
Fetch stage flushed:
Branch detected in: Decode
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
Branch check: True
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 28
Data in rs2: -28
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 96
*************Current Event**************
****************************************
Clock ticks: 710
PC at start of cycle: 0x18
PC at end of cycle: 0x1c
Fetch Stage: addi x0, x0, 0
Decode Stage: Branch/Jump Stall
Execute Stage: bne x1, x2, -28
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************

=====================Simulation Loop #72=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 0
ALU Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 9.44988e-38
Data in rs2_fp: 9.44988e-38
ALU result: 0
//////////////Memory Stage//////////////
Next Instruction: PC = ALU result
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 88
*************Current Event**************
****************************************
Clock ticks: 720
PC at start of cycle: 0x1c
PC at end of cycle: 0x0
Fetch Stage: addi x0, x0, 0
Decode Stage: addi x0, x0, 0
Execute Stage: Branch/Jump Stall
Memory Stage: bne x1, x2, -28
Write Back Stage: addi x1, x1, -8
****************************************

=====================Simulation Loop #73=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 9.44988e-38
Data in rs2_fp: 9.44988e-38
ALU result: 0
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 88
*************Current Event**************
****************************************
Clock ticks: 730
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: addi x0, x0, 0
Execute Stage: addi x0, x0, 0
Memory Stage: Branch/Jump Stall
Write Back Stage: bne x1, x2, -28
****************************************

=====================Simulation Loop #74=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 9.44988e-38
Data in rs2_fp: 9.44988e-38
ALU result: 0
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 88
*************Current Event**************
****************************************
Clock ticks: 740
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: addi x0, x0, 0
Memory Stage: addi x0, x0, 0
Write Back Stage: Branch/Jump Stall
****************************************

=====================Simulation Loop #75=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 120
Data in rs1: 88
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 9.44988e-38
ALU result: 120
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 88
*************Current Event**************
****************************************
Clock ticks: 750
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: addi x0, x0, 0
Write Back Stage: addi x0, x0, 0
****************************************

=====================Simulation Loop #76=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 9.44988e-38
Data in rs2_fp: 0
ALU result: 0
//////////////Memory Stage//////////////
FP Memory Read Operation
Memory Address: 0
Loaded Data: 9.44988e-38
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 88
*************Current Event**************
****************************************
Clock ticks: 760
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: flw f0, 32(x1)
Write Back Stage: addi x0, x0, 0
****************************************

=====================Simulation Loop #77=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001001011100011
Assembly Instruction: bne x1, x2, -28
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 88
*************Current Event**************
****************************************
Clock ticks: 770
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -28
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: flw f0, 32(x1)
****************************************

=====================Simulation Loop #78=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 80
Data in rs1: 88
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 80
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 544
Data To Store: 0
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 88
*************Current Event**************
****************************************
Clock ticks: 780
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -28
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: fadd.s f4, f0, f2
****************************************

=====================Simulation Loop #79=====================
Fetch stage flushed:
Branch detected in: Decode
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
Branch check: True
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 28
Data in rs2: -28
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 88
*************Current Event**************
****************************************
Clock ticks: 790
PC at start of cycle: 0x18
PC at end of cycle: 0x1c
Fetch Stage: addi x0, x0, 0
Decode Stage: Branch/Jump Stall
Execute Stage: bne x1, x2, -28
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************

=====================Simulation Loop #80=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 0
ALU Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 9.44988e-38
Data in rs2_fp: 9.44988e-38
ALU result: 0
//////////////Memory Stage//////////////
Next Instruction: PC = ALU result
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 80
*************Current Event**************
****************************************
Clock ticks: 800
PC at start of cycle: 0x1c
PC at end of cycle: 0x0
Fetch Stage: addi x0, x0, 0
Decode Stage: addi x0, x0, 0
Execute Stage: Branch/Jump Stall
Memory Stage: bne x1, x2, -28
Write Back Stage: addi x1, x1, -8
****************************************

=====================Simulation Loop #81=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 9.44988e-38
Data in rs2_fp: 9.44988e-38
ALU result: 0
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 80
*************Current Event**************
****************************************
Clock ticks: 810
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: addi x0, x0, 0
Execute Stage: addi x0, x0, 0
Memory Stage: Branch/Jump Stall
Write Back Stage: bne x1, x2, -28
****************************************

=====================Simulation Loop #82=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 9.44988e-38
Data in rs2_fp: 9.44988e-38
ALU result: 0
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 80
*************Current Event**************
****************************************
Clock ticks: 820
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: addi x0, x0, 0
Memory Stage: addi x0, x0, 0
Write Back Stage: Branch/Jump Stall
****************************************

=====================Simulation Loop #83=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 112
Data in rs1: 80
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 9.44988e-38
ALU result: 112
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 80
*************Current Event**************
****************************************
Clock ticks: 830
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: addi x0, x0, 0
Write Back Stage: addi x0, x0, 0
****************************************

=====================Simulation Loop #84=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 9.44988e-38
Data in rs2_fp: 0
ALU result: 0
//////////////Memory Stage//////////////
FP Memory Read Operation
Memory Address: 0
Loaded Data: 9.44988e-38
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 80
*************Current Event**************
****************************************
Clock ticks: 840
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: flw f0, 32(x1)
Write Back Stage: addi x0, x0, 0
****************************************

=====================Simulation Loop #85=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001001011100011
Assembly Instruction: bne x1, x2, -28
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 80
*************Current Event**************
****************************************
Clock ticks: 850
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -28
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: flw f0, 32(x1)
****************************************

=====================Simulation Loop #86=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 72
Data in rs1: 80
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 72
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 544
Data To Store: 0
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 80
*************Current Event**************
****************************************
Clock ticks: 860
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -28
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: fadd.s f4, f0, f2
****************************************

=====================Simulation Loop #87=====================
Fetch stage flushed:
Branch detected in: Decode
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
Branch check: True
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 28
Data in rs2: -28
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 80
*************Current Event**************
****************************************
Clock ticks: 870
PC at start of cycle: 0x18
PC at end of cycle: 0x1c
Fetch Stage: addi x0, x0, 0
Decode Stage: Branch/Jump Stall
Execute Stage: bne x1, x2, -28
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************

=====================Simulation Loop #88=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 0
ALU Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 9.44988e-38
Data in rs2_fp: 9.44988e-38
ALU result: 0
//////////////Memory Stage//////////////
Next Instruction: PC = ALU result
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 72
*************Current Event**************
****************************************
Clock ticks: 880
PC at start of cycle: 0x1c
PC at end of cycle: 0x0
Fetch Stage: addi x0, x0, 0
Decode Stage: addi x0, x0, 0
Execute Stage: Branch/Jump Stall
Memory Stage: bne x1, x2, -28
Write Back Stage: addi x1, x1, -8
****************************************

=====================Simulation Loop #89=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 9.44988e-38
Data in rs2_fp: 9.44988e-38
ALU result: 0
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 72
*************Current Event**************
****************************************
Clock ticks: 890
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: addi x0, x0, 0
Execute Stage: addi x0, x0, 0
Memory Stage: Branch/Jump Stall
Write Back Stage: bne x1, x2, -28
****************************************

=====================Simulation Loop #90=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 9.44988e-38
Data in rs2_fp: 9.44988e-38
ALU result: 0
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 72
*************Current Event**************
****************************************
Clock ticks: 900
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: addi x0, x0, 0
Memory Stage: addi x0, x0, 0
Write Back Stage: Branch/Jump Stall
****************************************

=====================Simulation Loop #91=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 104
Data in rs1: 72
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 9.44988e-38
ALU result: 104
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 72
*************Current Event**************
****************************************
Clock ticks: 910
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: addi x0, x0, 0
Write Back Stage: addi x0, x0, 0
****************************************

=====================Simulation Loop #92=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 9.44988e-38
Data in rs2_fp: 0
ALU result: 0
//////////////Memory Stage//////////////
FP Memory Read Operation
Memory Address: 0
Loaded Data: 9.44988e-38
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 72
*************Current Event**************
****************************************
Clock ticks: 920
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: flw f0, 32(x1)
Write Back Stage: addi x0, x0, 0
****************************************

=====================Simulation Loop #93=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001001011100011
Assembly Instruction: bne x1, x2, -28
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 72
*************Current Event**************
****************************************
Clock ticks: 930
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -28
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: flw f0, 32(x1)
****************************************

=====================Simulation Loop #94=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 64
Data in rs1: 72
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 64
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 544
Data To Store: 0
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 72
*************Current Event**************
****************************************
Clock ticks: 940
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -28
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: fadd.s f4, f0, f2
****************************************

=====================Simulation Loop #95=====================
Fetch stage flushed:
Branch detected in: Decode
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
Branch check: True
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 28
Data in rs2: -28
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 72
*************Current Event**************
****************************************
Clock ticks: 950
PC at start of cycle: 0x18
PC at end of cycle: 0x1c
Fetch Stage: addi x0, x0, 0
Decode Stage: Branch/Jump Stall
Execute Stage: bne x1, x2, -28
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************

=====================Simulation Loop #96=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 0
ALU Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 9.44988e-38
Data in rs2_fp: 9.44988e-38
ALU result: 0
//////////////Memory Stage//////////////
Next Instruction: PC = ALU result
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 64
*************Current Event**************
****************************************
Clock ticks: 960
PC at start of cycle: 0x1c
PC at end of cycle: 0x0
Fetch Stage: addi x0, x0, 0
Decode Stage: addi x0, x0, 0
Execute Stage: Branch/Jump Stall
Memory Stage: bne x1, x2, -28
Write Back Stage: addi x1, x1, -8
****************************************

=====================Simulation Loop #97=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 9.44988e-38
Data in rs2_fp: 9.44988e-38
ALU result: 0
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 64
*************Current Event**************
****************************************
Clock ticks: 970
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: addi x0, x0, 0
Execute Stage: addi x0, x0, 0
Memory Stage: Branch/Jump Stall
Write Back Stage: bne x1, x2, -28
****************************************

=====================Simulation Loop #98=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 9.44988e-38
Data in rs2_fp: 9.44988e-38
ALU result: 0
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 64
*************Current Event**************
****************************************
Clock ticks: 980
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: addi x0, x0, 0
Memory Stage: addi x0, x0, 0
Write Back Stage: Branch/Jump Stall
****************************************

=====================Simulation Loop #99=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 96
Data in rs1: 64
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 9.44988e-38
ALU result: 96
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 64
*************Current Event**************
****************************************
Clock ticks: 990
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: addi x0, x0, 0
Write Back Stage: addi x0, x0, 0
****************************************

=====================Simulation Loop #100=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 9.44988e-38
Data in rs2_fp: 0
ALU result: 0
//////////////Memory Stage//////////////
FP Memory Read Operation
Memory Address: 0
Loaded Data: 9.44988e-38
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 64
*************Current Event**************
****************************************
Clock ticks: 1000
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: flw f0, 32(x1)
Write Back Stage: addi x0, x0, 0
****************************************

=====================Simulation Loop #101=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001001011100011
Assembly Instruction: bne x1, x2, -28
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 64
*************Current Event**************
****************************************
Clock ticks: 1010
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -28
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: flw f0, 32(x1)
****************************************

=====================Simulation Loop #102=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 56
Data in rs1: 64
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 56
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 544
Data To Store: 0
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 64
*************Current Event**************
****************************************
Clock ticks: 1020
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -28
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: fadd.s f4, f0, f2
****************************************

=====================Simulation Loop #103=====================
Fetch stage flushed:
Branch detected in: Decode
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
Branch check: True
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 28
Data in rs2: -28
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 64
*************Current Event**************
****************************************
Clock ticks: 1030
PC at start of cycle: 0x18
PC at end of cycle: 0x1c
Fetch Stage: addi x0, x0, 0
Decode Stage: Branch/Jump Stall
Execute Stage: bne x1, x2, -28
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************

=====================Simulation Loop #104=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 0
ALU Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 9.44988e-38
Data in rs2_fp: 9.44988e-38
ALU result: 0
//////////////Memory Stage//////////////
Next Instruction: PC = ALU result
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 56
*************Current Event**************
****************************************
Clock ticks: 1040
PC at start of cycle: 0x1c
PC at end of cycle: 0x0
Fetch Stage: addi x0, x0, 0
Decode Stage: addi x0, x0, 0
Execute Stage: Branch/Jump Stall
Memory Stage: bne x1, x2, -28
Write Back Stage: addi x1, x1, -8
****************************************

=====================Simulation Loop #105=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 9.44988e-38
Data in rs2_fp: 9.44988e-38
ALU result: 0
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 56
*************Current Event**************
****************************************
Clock ticks: 1050
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: addi x0, x0, 0
Execute Stage: addi x0, x0, 0
Memory Stage: Branch/Jump Stall
Write Back Stage: bne x1, x2, -28
****************************************

=====================Simulation Loop #106=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 9.44988e-38
Data in rs2_fp: 9.44988e-38
ALU result: 0
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 56
*************Current Event**************
****************************************
Clock ticks: 1060
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: addi x0, x0, 0
Memory Stage: addi x0, x0, 0
Write Back Stage: Branch/Jump Stall
****************************************

=====================Simulation Loop #107=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 88
Data in rs1: 56
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 9.44988e-38
ALU result: 88
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 56
*************Current Event**************
****************************************
Clock ticks: 1070
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: addi x0, x0, 0
Write Back Stage: addi x0, x0, 0
****************************************

=====================Simulation Loop #108=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 9.44988e-38
Data in rs2_fp: 0
ALU result: 0
//////////////Memory Stage//////////////
FP Memory Read Operation
Memory Address: 0
Loaded Data: 9.44988e-38
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 56
*************Current Event**************
****************************************
Clock ticks: 1080
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: flw f0, 32(x1)
Write Back Stage: addi x0, x0, 0
****************************************

=====================Simulation Loop #109=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001001011100011
Assembly Instruction: bne x1, x2, -28
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 56
*************Current Event**************
****************************************
Clock ticks: 1090
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -28
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: flw f0, 32(x1)
****************************************

=====================Simulation Loop #110=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 48
Data in rs1: 56
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 48
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 544
Data To Store: 0
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 56
*************Current Event**************
****************************************
Clock ticks: 1100
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -28
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: fadd.s f4, f0, f2
****************************************

=====================Simulation Loop #111=====================
Fetch stage flushed:
Branch detected in: Decode
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
Branch check: True
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 28
Data in rs2: -28
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 56
*************Current Event**************
****************************************
Clock ticks: 1110
PC at start of cycle: 0x18
PC at end of cycle: 0x1c
Fetch Stage: addi x0, x0, 0
Decode Stage: Branch/Jump Stall
Execute Stage: bne x1, x2, -28
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************

=====================Simulation Loop #112=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 0
ALU Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 9.44988e-38
Data in rs2_fp: 9.44988e-38
ALU result: 0
//////////////Memory Stage//////////////
Next Instruction: PC = ALU result
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 48
*************Current Event**************
****************************************
Clock ticks: 1120
PC at start of cycle: 0x1c
PC at end of cycle: 0x0
Fetch Stage: addi x0, x0, 0
Decode Stage: addi x0, x0, 0
Execute Stage: Branch/Jump Stall
Memory Stage: bne x1, x2, -28
Write Back Stage: addi x1, x1, -8
****************************************

=====================Simulation Loop #113=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 9.44988e-38
Data in rs2_fp: 9.44988e-38
ALU result: 0
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 48
*************Current Event**************
****************************************
Clock ticks: 1130
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: addi x0, x0, 0
Execute Stage: addi x0, x0, 0
Memory Stage: Branch/Jump Stall
Write Back Stage: bne x1, x2, -28
****************************************

=====================Simulation Loop #114=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 9.44988e-38
Data in rs2_fp: 9.44988e-38
ALU result: 0
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 48
*************Current Event**************
****************************************
Clock ticks: 1140
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: addi x0, x0, 0
Memory Stage: addi x0, x0, 0
Write Back Stage: Branch/Jump Stall
****************************************

=====================Simulation Loop #115=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 80
Data in rs1: 48
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 9.44988e-38
ALU result: 80
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 48
*************Current Event**************
****************************************
Clock ticks: 1150
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: addi x0, x0, 0
Write Back Stage: addi x0, x0, 0
****************************************

=====================Simulation Loop #116=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 9.44988e-38
Data in rs2_fp: 0
ALU result: 0
//////////////Memory Stage//////////////
FP Memory Read Operation
Memory Address: 0
Loaded Data: 9.44988e-38
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 48
*************Current Event**************
****************************************
Clock ticks: 1160
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: flw f0, 32(x1)
Write Back Stage: addi x0, x0, 0
****************************************

=====================Simulation Loop #117=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001001011100011
Assembly Instruction: bne x1, x2, -28
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 48
*************Current Event**************
****************************************
Clock ticks: 1170
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -28
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: flw f0, 32(x1)
****************************************

=====================Simulation Loop #118=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 40
Data in rs1: 48
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 40
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 544
Data To Store: 0
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 48
*************Current Event**************
****************************************
Clock ticks: 1180
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -28
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: fadd.s f4, f0, f2
****************************************

=====================Simulation Loop #119=====================
Fetch stage flushed:
Branch detected in: Decode
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
Branch check: True
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 28
Data in rs2: -28
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 48
*************Current Event**************
****************************************
Clock ticks: 1190
PC at start of cycle: 0x18
PC at end of cycle: 0x1c
Fetch Stage: addi x0, x0, 0
Decode Stage: Branch/Jump Stall
Execute Stage: bne x1, x2, -28
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************

=====================Simulation Loop #120=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 0
ALU Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 9.44988e-38
Data in rs2_fp: 9.44988e-38
ALU result: 0
//////////////Memory Stage//////////////
Next Instruction: PC = ALU result
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 40
*************Current Event**************
****************************************
Clock ticks: 1200
PC at start of cycle: 0x1c
PC at end of cycle: 0x0
Fetch Stage: addi x0, x0, 0
Decode Stage: addi x0, x0, 0
Execute Stage: Branch/Jump Stall
Memory Stage: bne x1, x2, -28
Write Back Stage: addi x1, x1, -8
****************************************

=====================Simulation Loop #121=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 9.44988e-38
Data in rs2_fp: 9.44988e-38
ALU result: 0
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 40
*************Current Event**************
****************************************
Clock ticks: 1210
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: addi x0, x0, 0
Execute Stage: addi x0, x0, 0
Memory Stage: Branch/Jump Stall
Write Back Stage: bne x1, x2, -28
****************************************

=====================Simulation Loop #122=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 9.44988e-38
Data in rs2_fp: 9.44988e-38
ALU result: 0
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 40
*************Current Event**************
****************************************
Clock ticks: 1220
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: addi x0, x0, 0
Memory Stage: addi x0, x0, 0
Write Back Stage: Branch/Jump Stall
****************************************

=====================Simulation Loop #123=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 72
Data in rs1: 40
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 9.44988e-38
ALU result: 72
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 40
*************Current Event**************
****************************************
Clock ticks: 1230
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: addi x0, x0, 0
Write Back Stage: addi x0, x0, 0
****************************************

=====================Simulation Loop #124=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 9.44988e-38
Data in rs2_fp: 0
ALU result: 0
//////////////Memory Stage//////////////
FP Memory Read Operation
Memory Address: 0
Loaded Data: 9.44988e-38
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 40
*************Current Event**************
****************************************
Clock ticks: 1240
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: flw f0, 32(x1)
Write Back Stage: addi x0, x0, 0
****************************************

=====================Simulation Loop #125=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001001011100011
Assembly Instruction: bne x1, x2, -28
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 40
*************Current Event**************
****************************************
Clock ticks: 1250
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -28
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: flw f0, 32(x1)
****************************************

=====================Simulation Loop #126=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 40
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 544
Data To Store: 0
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 40
*************Current Event**************
****************************************
Clock ticks: 1260
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -28
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: fadd.s f4, f0, f2
****************************************

=====================Simulation Loop #127=====================
Fetch stage flushed:
Branch detected in: Decode
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
Branch check: True
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 28
Data in rs2: -28
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 40
*************Current Event**************
****************************************
Clock ticks: 1270
PC at start of cycle: 0x18
PC at end of cycle: 0x1c
Fetch Stage: addi x0, x0, 0
Decode Stage: Branch/Jump Stall
Execute Stage: bne x1, x2, -28
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************

=====================Simulation Loop #128=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 0
ALU Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 9.44988e-38
Data in rs2_fp: 9.44988e-38
ALU result: 0
//////////////Memory Stage//////////////
Next Instruction: PC = ALU result
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 32
*************Current Event**************
****************************************
Clock ticks: 1280
PC at start of cycle: 0x1c
PC at end of cycle: 0x0
Fetch Stage: addi x0, x0, 0
Decode Stage: addi x0, x0, 0
Execute Stage: Branch/Jump Stall
Memory Stage: bne x1, x2, -28
Write Back Stage: addi x1, x1, -8
****************************************

=====================Simulation Loop #129=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 9.44988e-38
Data in rs2_fp: 9.44988e-38
ALU result: 0
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 32
*************Current Event**************
****************************************
Clock ticks: 1290
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: addi x0, x0, 0
Execute Stage: addi x0, x0, 0
Memory Stage: Branch/Jump Stall
Write Back Stage: bne x1, x2, -28
****************************************

=====================Simulation Loop #130=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 9.44988e-38
Data in rs2_fp: 9.44988e-38
ALU result: 0
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 32
*************Current Event**************
****************************************
Clock ticks: 1300
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: addi x0, x0, 0
Memory Stage: addi x0, x0, 0
Write Back Stage: Branch/Jump Stall
****************************************

=====================Simulation Loop #131=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 64
Data in rs1: 32
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 9.44988e-38
ALU result: 64
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 32
*************Current Event**************
****************************************
Clock ticks: 1310
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: addi x0, x0, 0
Write Back Stage: addi x0, x0, 0
****************************************

=====================Simulation Loop #132=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 9.44988e-38
Data in rs2_fp: 0
ALU result: 0
//////////////Memory Stage//////////////
FP Memory Read Operation
Memory Address: 0
Loaded Data: 9.44988e-38
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 32
*************Current Event**************
****************************************
Clock ticks: 1320
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: flw f0, 32(x1)
Write Back Stage: addi x0, x0, 0
****************************************

=====================Simulation Loop #133=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001001011100011
Assembly Instruction: bne x1, x2, -28
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 32
*************Current Event**************
****************************************
Clock ticks: 1330
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -28
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: flw f0, 32(x1)
****************************************

=====================Simulation Loop #134=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 24
Data in rs1: 32
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 24
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 544
Data To Store: 0
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 32
*************Current Event**************
****************************************
Clock ticks: 1340
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -28
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: fadd.s f4, f0, f2
****************************************

=====================Simulation Loop #135=====================
Fetch stage flushed:
Branch detected in: Decode
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
Branch check: True
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 28
Data in rs2: -28
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 32
*************Current Event**************
****************************************
Clock ticks: 1350
PC at start of cycle: 0x18
PC at end of cycle: 0x1c
Fetch Stage: addi x0, x0, 0
Decode Stage: Branch/Jump Stall
Execute Stage: bne x1, x2, -28
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************

=====================Simulation Loop #136=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 0
ALU Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 9.44988e-38
Data in rs2_fp: 9.44988e-38
ALU result: 0
//////////////Memory Stage//////////////
Next Instruction: PC = ALU result
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 24
*************Current Event**************
****************************************
Clock ticks: 1360
PC at start of cycle: 0x1c
PC at end of cycle: 0x0
Fetch Stage: addi x0, x0, 0
Decode Stage: addi x0, x0, 0
Execute Stage: Branch/Jump Stall
Memory Stage: bne x1, x2, -28
Write Back Stage: addi x1, x1, -8
****************************************

=====================Simulation Loop #137=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 9.44988e-38
Data in rs2_fp: 9.44988e-38
ALU result: 0
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 24
*************Current Event**************
****************************************
Clock ticks: 1370
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: addi x0, x0, 0
Execute Stage: addi x0, x0, 0
Memory Stage: Branch/Jump Stall
Write Back Stage: bne x1, x2, -28
****************************************

=====================Simulation Loop #138=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 9.44988e-38
Data in rs2_fp: 9.44988e-38
ALU result: 0
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 24
*************Current Event**************
****************************************
Clock ticks: 1380
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: addi x0, x0, 0
Memory Stage: addi x0, x0, 0
Write Back Stage: Branch/Jump Stall
****************************************

=====================Simulation Loop #139=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 56
Data in rs1: 24
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 9.44988e-38
ALU result: 56
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 24
*************Current Event**************
****************************************
Clock ticks: 1390
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: addi x0, x0, 0
Write Back Stage: addi x0, x0, 0
****************************************

=====================Simulation Loop #140=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 9.44988e-38
Data in rs2_fp: 0
ALU result: 0
//////////////Memory Stage//////////////
FP Memory Read Operation
Memory Address: 0
Loaded Data: 9.44988e-38
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 24
*************Current Event**************
****************************************
Clock ticks: 1400
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: flw f0, 32(x1)
Write Back Stage: addi x0, x0, 0
****************************************

=====================Simulation Loop #141=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001001011100011
Assembly Instruction: bne x1, x2, -28
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 24
*************Current Event**************
****************************************
Clock ticks: 1410
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -28
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: flw f0, 32(x1)
****************************************

=====================Simulation Loop #142=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 16
Data in rs1: 24
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 16
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 544
Data To Store: 0
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 24
*************Current Event**************
****************************************
Clock ticks: 1420
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -28
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: fadd.s f4, f0, f2
****************************************

=====================Simulation Loop #143=====================
Fetch stage flushed:
Branch detected in: Decode
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
Branch check: True
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 28
Data in rs2: -28
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 24
*************Current Event**************
****************************************
Clock ticks: 1430
PC at start of cycle: 0x18
PC at end of cycle: 0x1c
Fetch Stage: addi x0, x0, 0
Decode Stage: Branch/Jump Stall
Execute Stage: bne x1, x2, -28
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************

=====================Simulation Loop #144=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 0
ALU Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 9.44988e-38
Data in rs2_fp: 9.44988e-38
ALU result: 0
//////////////Memory Stage//////////////
Next Instruction: PC = ALU result
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 16
*************Current Event**************
****************************************
Clock ticks: 1440
PC at start of cycle: 0x1c
PC at end of cycle: 0x0
Fetch Stage: addi x0, x0, 0
Decode Stage: addi x0, x0, 0
Execute Stage: Branch/Jump Stall
Memory Stage: bne x1, x2, -28
Write Back Stage: addi x1, x1, -8
****************************************

=====================Simulation Loop #145=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 9.44988e-38
Data in rs2_fp: 9.44988e-38
ALU result: 0
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 16
*************Current Event**************
****************************************
Clock ticks: 1450
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: addi x0, x0, 0
Execute Stage: addi x0, x0, 0
Memory Stage: Branch/Jump Stall
Write Back Stage: bne x1, x2, -28
****************************************

=====================Simulation Loop #146=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 9.44988e-38
Data in rs2_fp: 9.44988e-38
ALU result: 0
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 16
*************Current Event**************
****************************************
Clock ticks: 1460
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: addi x0, x0, 0
Memory Stage: addi x0, x0, 0
Write Back Stage: Branch/Jump Stall
****************************************

=====================Simulation Loop #147=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 48
Data in rs1: 16
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 9.44988e-38
ALU result: 48
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 16
*************Current Event**************
****************************************
Clock ticks: 1470
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: addi x0, x0, 0
Write Back Stage: addi x0, x0, 0
****************************************

=====================Simulation Loop #148=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 9.44988e-38
Data in rs2_fp: 0
ALU result: 0
//////////////Memory Stage//////////////
FP Memory Read Operation
Memory Address: 0
Loaded Data: 9.44988e-38
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 16
*************Current Event**************
****************************************
Clock ticks: 1480
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: flw f0, 32(x1)
Write Back Stage: addi x0, x0, 0
****************************************

=====================Simulation Loop #149=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001001011100011
Assembly Instruction: bne x1, x2, -28
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 16
*************Current Event**************
****************************************
Clock ticks: 1490
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -28
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: flw f0, 32(x1)
****************************************

=====================Simulation Loop #150=====================
New Instruction Fetched
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 8
Data in rs1: 16
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 8
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 544
Data To Store: 0
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 16
*************Current Event**************
****************************************
Clock ticks: 1500
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -28
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: fadd.s f4, f0, f2
****************************************

=======================Simulation Ended=======================
=====Reason for Termination: Maximum loop counter reached=====
*********Executed Instructions**********
Instruction #0:	flw f0, 32(x1)
Instruction #1:	fadd.s f4, f0, f2
Instruction #2:	fsw f4, 32(x1)
Instruction #3:	addi x1, x1, -8
Instruction #4:	bne x1, x2, -28
Instruction #5:	Branch/Jump Stall
Instruction #6:	addi x0, x0, 0
Instruction #7:	addi x0, x0, 0
Instruction #8:	flw f0, 32(x1)
Instruction #9:	fadd.s f4, f0, f2
Instruction #10:	fsw f4, 32(x1)
Instruction #11:	addi x1, x1, -8
Instruction #12:	bne x1, x2, -28
Instruction #13:	Branch/Jump Stall
Instruction #14:	addi x0, x0, 0
Instruction #15:	addi x0, x0, 0
Instruction #16:	flw f0, 32(x1)
Instruction #17:	fadd.s f4, f0, f2
Instruction #18:	fsw f4, 32(x1)
Instruction #19:	addi x1, x1, -8
Instruction #20:	bne x1, x2, -28
Instruction #21:	Branch/Jump Stall
Instruction #22:	addi x0, x0, 0
Instruction #23:	addi x0, x0, 0
Instruction #24:	flw f0, 32(x1)
Instruction #25:	fadd.s f4, f0, f2
Instruction #26:	fsw f4, 32(x1)
Instruction #27:	addi x1, x1, -8
Instruction #28:	bne x1, x2, -28
Instruction #29:	Branch/Jump Stall
Instruction #30:	addi x0, x0, 0
Instruction #31:	addi x0, x0, 0
Instruction #32:	flw f0, 32(x1)
Instruction #33:	fadd.s f4, f0, f2
Instruction #34:	fsw f4, 32(x1)
Instruction #35:	addi x1, x1, -8
Instruction #36:	bne x1, x2, -28
Instruction #37:	Branch/Jump Stall
Instruction #38:	addi x0, x0, 0
Instruction #39:	addi x0, x0, 0
Instruction #40:	flw f0, 32(x1)
Instruction #41:	fadd.s f4, f0, f2
Instruction #42:	fsw f4, 32(x1)
Instruction #43:	addi x1, x1, -8
Instruction #44:	bne x1, x2, -28
Instruction #45:	Branch/Jump Stall
Instruction #46:	addi x0, x0, 0
Instruction #47:	addi x0, x0, 0
Instruction #48:	flw f0, 32(x1)
Instruction #49:	fadd.s f4, f0, f2
Instruction #50:	fsw f4, 32(x1)
Instruction #51:	addi x1, x1, -8
Instruction #52:	bne x1, x2, -28
Instruction #53:	Branch/Jump Stall
Instruction #54:	addi x0, x0, 0
Instruction #55:	addi x0, x0, 0
Instruction #56:	flw f0, 32(x1)
Instruction #57:	fadd.s f4, f0, f2
Instruction #58:	fsw f4, 32(x1)
Instruction #59:	addi x1, x1, -8
Instruction #60:	bne x1, x2, -28
Instruction #61:	Branch/Jump Stall
Instruction #62:	addi x0, x0, 0
Instruction #63:	addi x0, x0, 0
Instruction #64:	flw f0, 32(x1)
Instruction #65:	fadd.s f4, f0, f2
Instruction #66:	fsw f4, 32(x1)
Instruction #67:	addi x1, x1, -8
Instruction #68:	bne x1, x2, -28
Instruction #69:	Branch/Jump Stall
Instruction #70:	addi x0, x0, 0
Instruction #71:	addi x0, x0, 0
Instruction #72:	flw f0, 32(x1)
Instruction #73:	fadd.s f4, f0, f2
Instruction #74:	fsw f4, 32(x1)
Instruction #75:	addi x1, x1, -8
Instruction #76:	bne x1, x2, -28
Instruction #77:	Branch/Jump Stall
Instruction #78:	addi x0, x0, 0
Instruction #79:	addi x0, x0, 0
Instruction #80:	flw f0, 32(x1)
Instruction #81:	fadd.s f4, f0, f2
Instruction #82:	fsw f4, 32(x1)
Instruction #83:	addi x1, x1, -8
Instruction #84:	bne x1, x2, -28
Instruction #85:	Branch/Jump Stall
Instruction #86:	addi x0, x0, 0
Instruction #87:	addi x0, x0, 0
Instruction #88:	flw f0, 32(x1)
Instruction #89:	fadd.s f4, f0, f2
Instruction #90:	fsw f4, 32(x1)
Instruction #91:	addi x1, x1, -8
Instruction #92:	bne x1, x2, -28
Instruction #93:	Branch/Jump Stall
Instruction #94:	addi x0, x0, 0
Instruction #95:	addi x0, x0, 0
Instruction #96:	flw f0, 32(x1)
Instruction #97:	fadd.s f4, f0, f2
Instruction #98:	fsw f4, 32(x1)
Instruction #99:	addi x1, x1, -8
Instruction #100:	bne x1, x2, -28
Instruction #101:	Branch/Jump Stall
Instruction #102:	addi x0, x0, 0
Instruction #103:	addi x0, x0, 0
Instruction #104:	flw f0, 32(x1)
Instruction #105:	fadd.s f4, f0, f2
Instruction #106:	fsw f4, 32(x1)
Instruction #107:	addi x1, x1, -8
Instruction #108:	bne x1, x2, -28
Instruction #109:	Branch/Jump Stall
Instruction #110:	addi x0, x0, 0
Instruction #111:	addi x0, x0, 0
Instruction #112:	flw f0, 32(x1)
Instruction #113:	fadd.s f4, f0, f2
Instruction #114:	fsw f4, 32(x1)
Instruction #115:	addi x1, x1, -8
Instruction #116:	bne x1, x2, -28
Instruction #117:	Branch/Jump Stall
Instruction #118:	addi x0, x0, 0
Instruction #119:	addi x0, x0, 0
Instruction #120:	flw f0, 32(x1)
Instruction #121:	fadd.s f4, f0, f2
Instruction #122:	fsw f4, 32(x1)
Instruction #123:	addi x1, x1, -8
Instruction #124:	bne x1, x2, -28
Instruction #125:	Branch/Jump Stall
Instruction #126:	addi x0, x0, 0
Instruction #127:	addi x0, x0, 0
Instruction #128:	flw f0, 32(x1)
Instruction #129:	fadd.s f4, f0, f2
Instruction #130:	fsw f4, 32(x1)
Instruction #131:	addi x1, x1, -8
Instruction #132:	bne x1, x2, -28
Instruction #133:	Branch/Jump Stall
Instruction #134:	addi x0, x0, 0
Instruction #135:	addi x0, x0, 0
Instruction #136:	flw f0, 32(x1)
Instruction #137:	fadd.s f4, f0, f2
Instruction #138:	fsw f4, 32(x1)
Instruction #139:	addi x1, x1, -8
Instruction #140:	bne x1, x2, -28
Instruction #141:	Branch/Jump Stall
Instruction #142:	addi x0, x0, 0
Instruction #143:	addi x0, x0, 0
Instruction #144:	flw f0, 32(x1)
