Begin System Initialization
Create Virtual Memory
Write CPU 1's Instructions to Memory
Check Instructions after writing to memory
Instruction #0: flw f0, 32(x1)
Instruction #1: fadd.s f4, f0, f2
Instruction #2: fsw f4, 32(x1)
Instruction #3: addi x1, x1, -8
Instruction #4: bne x1, x2, -20
Instruction #5: addi x0, x0, 0
Instruction #6: addi x0, x0, 0
Instruction #7: addi x0, x0, 0
Instruction #8: addi x0, x0, 0
Write CPU 2's Instructions to Memory
Check Instructions after writing to memory
Instruction #64: flw f0, 32(x1)
Instruction #65: fadd.s f4, f0, f2
Instruction #66: fsw f4, 32(x1)
Instruction #67: addi x1, x1, -8
Instruction #68: bne x1, x2, -20
Instruction #69: addi x0, x0, 0
Instruction #70: addi x0, x0, 0
Instruction #71: addi x0, x0, 0
Instruction #72: addi x0, x0, 0
Fill ranges 0x400-0xBFF with random values
========================Create MemBus=======================
=========================Create CPU=========================
======================Simulation Begin======================

=====================Simulation Loop #1=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
///////Cpu Cycle Debug Statements///////
X1 value: 400
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
///////Cpu Cycle Debug Statements///////
X1 value: 360

=====================Simulation Loop #2=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 400
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 360

=====================Simulation Loop #3=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 432
Data in rs1: 400
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 432
///////Cpu Cycle Debug Statements///////
X1 value: 400
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 392
Data in rs1: 360
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 392
///////Cpu Cycle Debug Statements///////
X1 value: 360

=====================Simulation Loop #4=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
FP Memory Read Operation
///////Cpu Cycle Debug Statements///////
X1 value: 400
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
FP Memory Read Operation
///////Cpu Cycle Debug Statements///////
X1 value: 360
Memory Bus Access:
CPU 1 reads from address: 0x200: 0b00000000000000000000000000000000

=====================Simulation Loop #5=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 400
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 360
Memory Bus Access:
CPU 2 reads from address: 0x300: 0b00000000000000000000000000000000

=====================Simulation Loop #6=====================
Start Cycle for CPU:1
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 400
Start Cycle for CPU:2
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 360

=====================Simulation Loop #7=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 400
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 4.57538e-41
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 360

=====================Simulation Loop #8=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 400
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 360

=====================Simulation Loop #9=====================
Start Cycle for CPU:1
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 400
Start Cycle for CPU:2
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 360

=====================Simulation Loop #10=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001011011100011
Assembly Instruction: bne x1, x2, -20
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
///////Cpu Cycle Debug Statements///////
X1 value: 400
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001011011100011
Assembly Instruction: bne x1, x2, -20
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
///////Cpu Cycle Debug Statements///////
X1 value: 360

=====================Simulation Loop #11=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 392
Data in rs1: 400
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 392
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 544
Data To Store: 0
///////Cpu Cycle Debug Statements///////
X1 value: 400
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 352
Data in rs1: 360
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 352
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 800
Data To Store: 0
///////Cpu Cycle Debug Statements///////
X1 value: 360
Memory Bus Access:
CPU 1 writes to address 220: 00000000000000000000000000000000

=====================Simulation Loop #12=====================
Start Cycle for CPU:1
Fetch stage flushed:
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 392
Data in rs1: 400
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 392
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 400
Start Cycle for CPU:2
Fetch stage flushed:
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 352
Data in rs1: 360
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 352
//////////////Memory Stage//////////////
Memory Access still Pending
///////Cpu Cycle Debug Statements///////
X1 value: 360
Memory Bus Access:
CPU 2 writes to address 320: 00000000000000000000000000000000

=====================Simulation Loop #13=====================
Start Cycle for CPU:1
Fetch stage flushed:
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 400
Start Cycle for CPU:2
Fetch stage flushed:
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 360

=====================Simulation Loop #14=====================
Start Cycle for CPU:1
Fetch stage flushed:
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 392
Start Cycle for CPU:2
Fetch stage flushed:
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 352

=====================Simulation Loop #15=====================
Start Cycle for CPU:1
Fetch stage flushed:
Control Hazard detected in: Execute
/////////////Execute Stage/////////////
Branch check: True
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 20
Data in rs2: -20
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 392
Start Cycle for CPU:2
Fetch stage flushed:
Control Hazard detected in: Execute
/////////////Execute Stage/////////////
Branch check: True
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 20
Data in rs2: -20
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 352

=====================Simulation Loop #16=====================
Start Cycle for CPU:1
Control Hazard detected in: Memory
//////////////Memory Stage//////////////
Next Instruction: PC = ALU result
///////Cpu Cycle Debug Statements///////
X1 value: 392
Start Cycle for CPU:2
Control Hazard detected in: Memory
//////////////Memory Stage//////////////
Next Instruction: PC = ALU result
///////Cpu Cycle Debug Statements///////
X1 value: 352

=====================Simulation Loop #17=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 392
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 352

=====================Simulation Loop #18=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 392
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 352

=====================Simulation Loop #19=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 424
Data in rs1: 392
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 424
///////Cpu Cycle Debug Statements///////
X1 value: 392
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 384
Data in rs1: 352
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 4.57538e-41
ALU result: 384
///////Cpu Cycle Debug Statements///////
X1 value: 352

=====================Simulation Loop #20=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
FP Memory Read Operation
///////Cpu Cycle Debug Statements///////
X1 value: 392
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
FP Memory Read Operation
///////Cpu Cycle Debug Statements///////
X1 value: 352
Memory Bus Access:
CPU 1 reads from address: 0x200: 0b00000000000000000000000000000000

=====================Simulation Loop #21=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 392
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 352
Memory Bus Access:
CPU 2 reads from address: 0x300: 0b00000000000000000000000000000000

=====================Simulation Loop #22=====================
Start Cycle for CPU:1
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 392
Start Cycle for CPU:2
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 352

=====================Simulation Loop #23=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 392
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 352

=====================Simulation Loop #24=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 392
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 352

=====================Simulation Loop #25=====================
Start Cycle for CPU:1
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 392
Start Cycle for CPU:2
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 352

=====================Simulation Loop #26=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001011011100011
Assembly Instruction: bne x1, x2, -20
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
///////Cpu Cycle Debug Statements///////
X1 value: 392
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001011011100011
Assembly Instruction: bne x1, x2, -20
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
///////Cpu Cycle Debug Statements///////
X1 value: 352

=====================Simulation Loop #27=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 384
Data in rs1: 392
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 384
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 544
Data To Store: 0
///////Cpu Cycle Debug Statements///////
X1 value: 392
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 344
Data in rs1: 352
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 344
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 800
Data To Store: 0
///////Cpu Cycle Debug Statements///////
X1 value: 352
Memory Bus Access:
CPU 1 writes to address 220: 00000000000000000000000000000000

=====================Simulation Loop #28=====================
Start Cycle for CPU:1
Fetch stage flushed:
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 384
Data in rs1: 392
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 384
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 392
Start Cycle for CPU:2
Fetch stage flushed:
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 344
Data in rs1: 352
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 344
//////////////Memory Stage//////////////
Memory Access still Pending
///////Cpu Cycle Debug Statements///////
X1 value: 352
Memory Bus Access:
CPU 2 writes to address 320: 00000000000000000000000000000000

=====================Simulation Loop #29=====================
Start Cycle for CPU:1
Fetch stage flushed:
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 392
Start Cycle for CPU:2
Fetch stage flushed:
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 352

=====================Simulation Loop #30=====================
Start Cycle for CPU:1
Fetch stage flushed:
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 384
Start Cycle for CPU:2
Fetch stage flushed:
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 344

=====================Simulation Loop #31=====================
Start Cycle for CPU:1
Fetch stage flushed:
Control Hazard detected in: Execute
/////////////Execute Stage/////////////
Branch check: True
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 20
Data in rs2: -20
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 384
Start Cycle for CPU:2
Fetch stage flushed:
Control Hazard detected in: Execute
/////////////Execute Stage/////////////
Branch check: True
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 20
Data in rs2: -20
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 344

=====================Simulation Loop #32=====================
Start Cycle for CPU:1
Control Hazard detected in: Memory
//////////////Memory Stage//////////////
Next Instruction: PC = ALU result
///////Cpu Cycle Debug Statements///////
X1 value: 384
Start Cycle for CPU:2
Control Hazard detected in: Memory
//////////////Memory Stage//////////////
Next Instruction: PC = ALU result
///////Cpu Cycle Debug Statements///////
X1 value: 344

=====================Simulation Loop #33=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 384
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 344

=====================Simulation Loop #34=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 384
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 344

=====================Simulation Loop #35=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 416
Data in rs1: 384
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 416
///////Cpu Cycle Debug Statements///////
X1 value: 384
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 376
Data in rs1: 344
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 376
///////Cpu Cycle Debug Statements///////
X1 value: 344

=====================Simulation Loop #36=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
FP Memory Read Operation
///////Cpu Cycle Debug Statements///////
X1 value: 384
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
FP Memory Read Operation
///////Cpu Cycle Debug Statements///////
X1 value: 344
Memory Bus Access:
CPU 1 reads from address: 0x200: 0b00000000000000000000000000000000

=====================Simulation Loop #37=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 384
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 344
Memory Bus Access:
CPU 2 reads from address: 0x300: 0b00000000000000000000000000000000

=====================Simulation Loop #38=====================
Start Cycle for CPU:1
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 384
Start Cycle for CPU:2
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 344

=====================Simulation Loop #39=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 384
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 344

=====================Simulation Loop #40=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 384
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 344

=====================Simulation Loop #41=====================
Start Cycle for CPU:1
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 384
Start Cycle for CPU:2
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 344

=====================Simulation Loop #42=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001011011100011
Assembly Instruction: bne x1, x2, -20
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
///////Cpu Cycle Debug Statements///////
X1 value: 384
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001011011100011
Assembly Instruction: bne x1, x2, -20
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
///////Cpu Cycle Debug Statements///////
X1 value: 344

=====================Simulation Loop #43=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 376
Data in rs1: 384
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 376
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 544
Data To Store: 0
///////Cpu Cycle Debug Statements///////
X1 value: 384
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 336
Data in rs1: 344
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 336
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 800
Data To Store: 0
///////Cpu Cycle Debug Statements///////
X1 value: 344
Memory Bus Access:
CPU 1 writes to address 220: 00000000000000000000000000000000

=====================Simulation Loop #44=====================
Start Cycle for CPU:1
Fetch stage flushed:
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 376
Data in rs1: 384
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 376
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 384
Start Cycle for CPU:2
Fetch stage flushed:
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 336
Data in rs1: 344
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 336
//////////////Memory Stage//////////////
Memory Access still Pending
///////Cpu Cycle Debug Statements///////
X1 value: 344
Memory Bus Access:
CPU 2 writes to address 320: 00000000000000000000000000000000

=====================Simulation Loop #45=====================
Start Cycle for CPU:1
Fetch stage flushed:
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 384
Start Cycle for CPU:2
Fetch stage flushed:
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 344

=====================Simulation Loop #46=====================
Start Cycle for CPU:1
Fetch stage flushed:
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 376
Start Cycle for CPU:2
Fetch stage flushed:
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 336

=====================Simulation Loop #47=====================
Start Cycle for CPU:1
Fetch stage flushed:
Control Hazard detected in: Execute
/////////////Execute Stage/////////////
Branch check: True
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 20
Data in rs2: -20
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 376
Start Cycle for CPU:2
Fetch stage flushed:
Control Hazard detected in: Execute
/////////////Execute Stage/////////////
Branch check: True
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 20
Data in rs2: -20
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 336

=====================Simulation Loop #48=====================
Start Cycle for CPU:1
Control Hazard detected in: Memory
//////////////Memory Stage//////////////
Next Instruction: PC = ALU result
///////Cpu Cycle Debug Statements///////
X1 value: 376
Start Cycle for CPU:2
Control Hazard detected in: Memory
//////////////Memory Stage//////////////
Next Instruction: PC = ALU result
///////Cpu Cycle Debug Statements///////
X1 value: 336

=====================Simulation Loop #49=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 376
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 336

=====================Simulation Loop #50=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 376
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 336

=====================Simulation Loop #51=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 408
Data in rs1: 376
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 408
///////Cpu Cycle Debug Statements///////
X1 value: 376
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 368
Data in rs1: 336
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 368
///////Cpu Cycle Debug Statements///////
X1 value: 336

=====================Simulation Loop #52=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
FP Memory Read Operation
///////Cpu Cycle Debug Statements///////
X1 value: 376
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
FP Memory Read Operation
///////Cpu Cycle Debug Statements///////
X1 value: 336
Memory Bus Access:
CPU 1 reads from address: 0x200: 0b00000000000000000000000000000000

=====================Simulation Loop #53=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 376
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 336
Memory Bus Access:
CPU 2 reads from address: 0x300: 0b00000000000000000000000000000000

=====================Simulation Loop #54=====================
Start Cycle for CPU:1
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 376
Start Cycle for CPU:2
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 336

=====================Simulation Loop #55=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 376
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 336

=====================Simulation Loop #56=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 376
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 336

=====================Simulation Loop #57=====================
Start Cycle for CPU:1
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 376
Start Cycle for CPU:2
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 336

=====================Simulation Loop #58=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001011011100011
Assembly Instruction: bne x1, x2, -20
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
///////Cpu Cycle Debug Statements///////
X1 value: 376
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001011011100011
Assembly Instruction: bne x1, x2, -20
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
///////Cpu Cycle Debug Statements///////
X1 value: 336

=====================Simulation Loop #59=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 368
Data in rs1: 376
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 368
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 544
Data To Store: 0
///////Cpu Cycle Debug Statements///////
X1 value: 376
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 328
Data in rs1: 336
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 328
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 800
Data To Store: 0
///////Cpu Cycle Debug Statements///////
X1 value: 336
Memory Bus Access:
CPU 1 writes to address 220: 00000000000000000000000000000000

=====================Simulation Loop #60=====================
Start Cycle for CPU:1
Fetch stage flushed:
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 368
Data in rs1: 376
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 368
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 376
Start Cycle for CPU:2
Fetch stage flushed:
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 328
Data in rs1: 336
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 328
//////////////Memory Stage//////////////
Memory Access still Pending
///////Cpu Cycle Debug Statements///////
X1 value: 336
Memory Bus Access:
CPU 2 writes to address 320: 00000000000000000000000000000000

=====================Simulation Loop #61=====================
Start Cycle for CPU:1
Fetch stage flushed:
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 376
Start Cycle for CPU:2
Fetch stage flushed:
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 336

=====================Simulation Loop #62=====================
Start Cycle for CPU:1
Fetch stage flushed:
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 368
Start Cycle for CPU:2
Fetch stage flushed:
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 328

=====================Simulation Loop #63=====================
Start Cycle for CPU:1
Fetch stage flushed:
Control Hazard detected in: Execute
/////////////Execute Stage/////////////
Branch check: True
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 20
Data in rs2: -20
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 368
Start Cycle for CPU:2
Fetch stage flushed:
Control Hazard detected in: Execute
/////////////Execute Stage/////////////
Branch check: True
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 20
Data in rs2: -20
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 328

=====================Simulation Loop #64=====================
Start Cycle for CPU:1
Control Hazard detected in: Memory
//////////////Memory Stage//////////////
Next Instruction: PC = ALU result
///////Cpu Cycle Debug Statements///////
X1 value: 368
Start Cycle for CPU:2
Control Hazard detected in: Memory
//////////////Memory Stage//////////////
Next Instruction: PC = ALU result
///////Cpu Cycle Debug Statements///////
X1 value: 328

=====================Simulation Loop #65=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 368
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 328

=====================Simulation Loop #66=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 368
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 328

=====================Simulation Loop #67=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 400
Data in rs1: 368
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 400
///////Cpu Cycle Debug Statements///////
X1 value: 368
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 360
Data in rs1: 328
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 360
///////Cpu Cycle Debug Statements///////
X1 value: 328

=====================Simulation Loop #68=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
FP Memory Read Operation
///////Cpu Cycle Debug Statements///////
X1 value: 368
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
FP Memory Read Operation
///////Cpu Cycle Debug Statements///////
X1 value: 328
Memory Bus Access:
CPU 1 reads from address: 0x200: 0b00000000000000000000000000000000

=====================Simulation Loop #69=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 368
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 328
Memory Bus Access:
CPU 2 reads from address: 0x300: 0b00000000000000000000000000000000

=====================Simulation Loop #70=====================
Start Cycle for CPU:1
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 368
Start Cycle for CPU:2
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 328

=====================Simulation Loop #71=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 368
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 328

=====================Simulation Loop #72=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 368
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 328

=====================Simulation Loop #73=====================
Start Cycle for CPU:1
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 368
Start Cycle for CPU:2
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 328

=====================Simulation Loop #74=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001011011100011
Assembly Instruction: bne x1, x2, -20
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
///////Cpu Cycle Debug Statements///////
X1 value: 368
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001011011100011
Assembly Instruction: bne x1, x2, -20
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
///////Cpu Cycle Debug Statements///////
X1 value: 328

=====================Simulation Loop #75=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 360
Data in rs1: 368
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 360
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 544
Data To Store: 0
///////Cpu Cycle Debug Statements///////
X1 value: 368
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 320
Data in rs1: 328
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 320
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 800
Data To Store: 0
///////Cpu Cycle Debug Statements///////
X1 value: 328
Memory Bus Access:
CPU 1 writes to address 220: 00000000000000000000000000000000

=====================Simulation Loop #76=====================
Start Cycle for CPU:1
Fetch stage flushed:
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 360
Data in rs1: 368
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 360
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 368
Start Cycle for CPU:2
Fetch stage flushed:
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 320
Data in rs1: 328
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 320
//////////////Memory Stage//////////////
Memory Access still Pending
///////Cpu Cycle Debug Statements///////
X1 value: 328
Memory Bus Access:
CPU 2 writes to address 320: 00000000000000000000000000000000

=====================Simulation Loop #77=====================
Start Cycle for CPU:1
Fetch stage flushed:
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 368
Start Cycle for CPU:2
Fetch stage flushed:
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 328

=====================Simulation Loop #78=====================
Start Cycle for CPU:1
Fetch stage flushed:
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 360
Start Cycle for CPU:2
Fetch stage flushed:
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 320

=====================Simulation Loop #79=====================
Start Cycle for CPU:1
Fetch stage flushed:
Control Hazard detected in: Execute
/////////////Execute Stage/////////////
Branch check: True
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 20
Data in rs2: -20
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 360
Start Cycle for CPU:2
Fetch stage flushed:
Control Hazard detected in: Execute
/////////////Execute Stage/////////////
Branch check: True
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 20
Data in rs2: -20
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 320

=====================Simulation Loop #80=====================
Start Cycle for CPU:1
Control Hazard detected in: Memory
//////////////Memory Stage//////////////
Next Instruction: PC = ALU result
///////Cpu Cycle Debug Statements///////
X1 value: 360
Start Cycle for CPU:2
Control Hazard detected in: Memory
//////////////Memory Stage//////////////
Next Instruction: PC = ALU result
///////Cpu Cycle Debug Statements///////
X1 value: 320

=====================Simulation Loop #81=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 360
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 320

=====================Simulation Loop #82=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 360
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 320

=====================Simulation Loop #83=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 392
Data in rs1: 360
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 392
///////Cpu Cycle Debug Statements///////
X1 value: 360
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 352
Data in rs1: 320
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 352
///////Cpu Cycle Debug Statements///////
X1 value: 320

=====================Simulation Loop #84=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
FP Memory Read Operation
///////Cpu Cycle Debug Statements///////
X1 value: 360
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
FP Memory Read Operation
///////Cpu Cycle Debug Statements///////
X1 value: 320
Memory Bus Access:
CPU 1 reads from address: 0x200: 0b00000000000000000000000000000000

=====================Simulation Loop #85=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 360
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 320
Memory Bus Access:
CPU 2 reads from address: 0x300: 0b00000000000000000000000000000000

=====================Simulation Loop #86=====================
Start Cycle for CPU:1
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 360
Start Cycle for CPU:2
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 320

=====================Simulation Loop #87=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 360
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 320

=====================Simulation Loop #88=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 360
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 320

=====================Simulation Loop #89=====================
Start Cycle for CPU:1
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 360
Start Cycle for CPU:2
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 320

=====================Simulation Loop #90=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001011011100011
Assembly Instruction: bne x1, x2, -20
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
///////Cpu Cycle Debug Statements///////
X1 value: 360
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001011011100011
Assembly Instruction: bne x1, x2, -20
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
///////Cpu Cycle Debug Statements///////
X1 value: 320

=====================Simulation Loop #91=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 352
Data in rs1: 360
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 352
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 544
Data To Store: 0
///////Cpu Cycle Debug Statements///////
X1 value: 360
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 312
Data in rs1: 320
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 312
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 800
Data To Store: 0
///////Cpu Cycle Debug Statements///////
X1 value: 320
Memory Bus Access:
CPU 1 writes to address 220: 00000000000000000000000000000000

=====================Simulation Loop #92=====================
Start Cycle for CPU:1
Fetch stage flushed:
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 352
Data in rs1: 360
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 352
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 360
Start Cycle for CPU:2
Fetch stage flushed:
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 312
Data in rs1: 320
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 312
//////////////Memory Stage//////////////
Memory Access still Pending
///////Cpu Cycle Debug Statements///////
X1 value: 320
Memory Bus Access:
CPU 2 writes to address 320: 00000000000000000000000000000000

=====================Simulation Loop #93=====================
Start Cycle for CPU:1
Fetch stage flushed:
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 360
Start Cycle for CPU:2
Fetch stage flushed:
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 320

=====================Simulation Loop #94=====================
Start Cycle for CPU:1
Fetch stage flushed:
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 352
Start Cycle for CPU:2
Fetch stage flushed:
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 312

=====================Simulation Loop #95=====================
Start Cycle for CPU:1
Fetch stage flushed:
Control Hazard detected in: Execute
/////////////Execute Stage/////////////
Branch check: True
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 20
Data in rs2: -20
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 352
Start Cycle for CPU:2
Fetch stage flushed:
Control Hazard detected in: Execute
/////////////Execute Stage/////////////
Branch check: True
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 20
Data in rs2: -20
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 312

=====================Simulation Loop #96=====================
Start Cycle for CPU:1
Control Hazard detected in: Memory
//////////////Memory Stage//////////////
Next Instruction: PC = ALU result
///////Cpu Cycle Debug Statements///////
X1 value: 352
Start Cycle for CPU:2
Control Hazard detected in: Memory
//////////////Memory Stage//////////////
Next Instruction: PC = ALU result
///////Cpu Cycle Debug Statements///////
X1 value: 312

=====================Simulation Loop #97=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 352
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 312

=====================Simulation Loop #98=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 352
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 312

=====================Simulation Loop #99=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 384
Data in rs1: 352
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 384
///////Cpu Cycle Debug Statements///////
X1 value: 352
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 344
Data in rs1: 312
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 344
///////Cpu Cycle Debug Statements///////
X1 value: 312

=====================Simulation Loop #100=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
FP Memory Read Operation
///////Cpu Cycle Debug Statements///////
X1 value: 352
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
FP Memory Read Operation
///////Cpu Cycle Debug Statements///////
X1 value: 312
Memory Bus Access:
CPU 1 reads from address: 0x200: 0b00000000000000000000000000000000

=====================Simulation Loop #101=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 352
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 312
Memory Bus Access:
CPU 2 reads from address: 0x300: 0b00000000000000000000000000000000

=====================Simulation Loop #102=====================
Start Cycle for CPU:1
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 352
Start Cycle for CPU:2
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 312

=====================Simulation Loop #103=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 352
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 312

=====================Simulation Loop #104=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 352
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 312

=====================Simulation Loop #105=====================
Start Cycle for CPU:1
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 352
Start Cycle for CPU:2
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 312

=====================Simulation Loop #106=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001011011100011
Assembly Instruction: bne x1, x2, -20
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
///////Cpu Cycle Debug Statements///////
X1 value: 352
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001011011100011
Assembly Instruction: bne x1, x2, -20
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
///////Cpu Cycle Debug Statements///////
X1 value: 312

=====================Simulation Loop #107=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 344
Data in rs1: 352
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 344
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 544
Data To Store: 0
///////Cpu Cycle Debug Statements///////
X1 value: 352
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 304
Data in rs1: 312
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 304
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 800
Data To Store: 0
///////Cpu Cycle Debug Statements///////
X1 value: 312
Memory Bus Access:
CPU 1 writes to address 220: 00000000000000000000000000000000

=====================Simulation Loop #108=====================
Start Cycle for CPU:1
Fetch stage flushed:
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 344
Data in rs1: 352
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 344
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 352
Start Cycle for CPU:2
Fetch stage flushed:
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 304
Data in rs1: 312
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 304
//////////////Memory Stage//////////////
Memory Access still Pending
///////Cpu Cycle Debug Statements///////
X1 value: 312
Memory Bus Access:
CPU 2 writes to address 320: 00000000000000000000000000000000

=====================Simulation Loop #109=====================
Start Cycle for CPU:1
Fetch stage flushed:
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 352
Start Cycle for CPU:2
Fetch stage flushed:
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 312

=====================Simulation Loop #110=====================
Start Cycle for CPU:1
Fetch stage flushed:
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 344
Start Cycle for CPU:2
Fetch stage flushed:
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 304

=====================Simulation Loop #111=====================
Start Cycle for CPU:1
Fetch stage flushed:
Control Hazard detected in: Execute
/////////////Execute Stage/////////////
Branch check: True
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 20
Data in rs2: -20
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 344
Start Cycle for CPU:2
Fetch stage flushed:
Control Hazard detected in: Execute
/////////////Execute Stage/////////////
Branch check: True
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 20
Data in rs2: -20
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 304

=====================Simulation Loop #112=====================
Start Cycle for CPU:1
Control Hazard detected in: Memory
//////////////Memory Stage//////////////
Next Instruction: PC = ALU result
///////Cpu Cycle Debug Statements///////
X1 value: 344
Start Cycle for CPU:2
Control Hazard detected in: Memory
//////////////Memory Stage//////////////
Next Instruction: PC = ALU result
///////Cpu Cycle Debug Statements///////
X1 value: 304

=====================Simulation Loop #113=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 344
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 304

=====================Simulation Loop #114=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 344
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 304

=====================Simulation Loop #115=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 376
Data in rs1: 344
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 376
///////Cpu Cycle Debug Statements///////
X1 value: 344
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 336
Data in rs1: 304
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 336
///////Cpu Cycle Debug Statements///////
X1 value: 304

=====================Simulation Loop #116=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
FP Memory Read Operation
///////Cpu Cycle Debug Statements///////
X1 value: 344
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
FP Memory Read Operation
///////Cpu Cycle Debug Statements///////
X1 value: 304
Memory Bus Access:
CPU 1 reads from address: 0x200: 0b00000000000000000000000000000000

=====================Simulation Loop #117=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 344
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 304
Memory Bus Access:
CPU 2 reads from address: 0x300: 0b00000000000000000000000000000000

=====================Simulation Loop #118=====================
Start Cycle for CPU:1
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 344
Start Cycle for CPU:2
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 304

=====================Simulation Loop #119=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 344
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 304

=====================Simulation Loop #120=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 344
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 304

=====================Simulation Loop #121=====================
Start Cycle for CPU:1
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 344
Start Cycle for CPU:2
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 304

=====================Simulation Loop #122=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001011011100011
Assembly Instruction: bne x1, x2, -20
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
///////Cpu Cycle Debug Statements///////
X1 value: 344
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001011011100011
Assembly Instruction: bne x1, x2, -20
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
///////Cpu Cycle Debug Statements///////
X1 value: 304

=====================Simulation Loop #123=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 336
Data in rs1: 344
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 336
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 544
Data To Store: 0
///////Cpu Cycle Debug Statements///////
X1 value: 344
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 296
Data in rs1: 304
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 296
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 800
Data To Store: 0
///////Cpu Cycle Debug Statements///////
X1 value: 304
Memory Bus Access:
CPU 1 writes to address 220: 00000000000000000000000000000000

=====================Simulation Loop #124=====================
Start Cycle for CPU:1
Fetch stage flushed:
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 336
Data in rs1: 344
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 336
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 344
Start Cycle for CPU:2
Fetch stage flushed:
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 296
Data in rs1: 304
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 296
//////////////Memory Stage//////////////
Memory Access still Pending
///////Cpu Cycle Debug Statements///////
X1 value: 304
Memory Bus Access:
CPU 2 writes to address 320: 00000000000000000000000000000000

=====================Simulation Loop #125=====================
Start Cycle for CPU:1
Fetch stage flushed:
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 344
Start Cycle for CPU:2
Fetch stage flushed:
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 304

=====================Simulation Loop #126=====================
Start Cycle for CPU:1
Fetch stage flushed:
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 336
Start Cycle for CPU:2
Fetch stage flushed:
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 296

=====================Simulation Loop #127=====================
Start Cycle for CPU:1
Fetch stage flushed:
Control Hazard detected in: Execute
/////////////Execute Stage/////////////
Branch check: True
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 20
Data in rs2: -20
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 336
Start Cycle for CPU:2
Fetch stage flushed:
Control Hazard detected in: Execute
/////////////Execute Stage/////////////
Branch check: True
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 20
Data in rs2: -20
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 296

=====================Simulation Loop #128=====================
Start Cycle for CPU:1
Control Hazard detected in: Memory
//////////////Memory Stage//////////////
Next Instruction: PC = ALU result
///////Cpu Cycle Debug Statements///////
X1 value: 336
Start Cycle for CPU:2
Control Hazard detected in: Memory
//////////////Memory Stage//////////////
Next Instruction: PC = ALU result
///////Cpu Cycle Debug Statements///////
X1 value: 296

=====================Simulation Loop #129=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 336
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 296

=====================Simulation Loop #130=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 336
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 296

=====================Simulation Loop #131=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 368
Data in rs1: 336
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 368
///////Cpu Cycle Debug Statements///////
X1 value: 336
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 328
Data in rs1: 296
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 328
///////Cpu Cycle Debug Statements///////
X1 value: 296

=====================Simulation Loop #132=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
FP Memory Read Operation
///////Cpu Cycle Debug Statements///////
X1 value: 336
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
FP Memory Read Operation
///////Cpu Cycle Debug Statements///////
X1 value: 296
Memory Bus Access:
CPU 1 reads from address: 0x200: 0b00000000000000000000000000000000

=====================Simulation Loop #133=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 336
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 296
Memory Bus Access:
CPU 2 reads from address: 0x300: 0b00000000000000000000000000000000

=====================Simulation Loop #134=====================
Start Cycle for CPU:1
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 336
Start Cycle for CPU:2
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 296

=====================Simulation Loop #135=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 336
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 296

=====================Simulation Loop #136=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 336
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 296

=====================Simulation Loop #137=====================
Start Cycle for CPU:1
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 336
Start Cycle for CPU:2
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 296

=====================Simulation Loop #138=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001011011100011
Assembly Instruction: bne x1, x2, -20
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
///////Cpu Cycle Debug Statements///////
X1 value: 336
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001011011100011
Assembly Instruction: bne x1, x2, -20
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
///////Cpu Cycle Debug Statements///////
X1 value: 296

=====================Simulation Loop #139=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 328
Data in rs1: 336
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 328
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 544
Data To Store: 0
///////Cpu Cycle Debug Statements///////
X1 value: 336
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 288
Data in rs1: 296
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 288
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 800
Data To Store: 0
///////Cpu Cycle Debug Statements///////
X1 value: 296
Memory Bus Access:
CPU 1 writes to address 220: 00000000000000000000000000000000

=====================Simulation Loop #140=====================
Start Cycle for CPU:1
Fetch stage flushed:
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 328
Data in rs1: 336
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 328
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 336
Start Cycle for CPU:2
Fetch stage flushed:
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 288
Data in rs1: 296
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 288
//////////////Memory Stage//////////////
Memory Access still Pending
///////Cpu Cycle Debug Statements///////
X1 value: 296
Memory Bus Access:
CPU 2 writes to address 320: 00000000000000000000000000000000

=====================Simulation Loop #141=====================
Start Cycle for CPU:1
Fetch stage flushed:
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 336
Start Cycle for CPU:2
Fetch stage flushed:
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 296

=====================Simulation Loop #142=====================
Start Cycle for CPU:1
Fetch stage flushed:
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 328
Start Cycle for CPU:2
Fetch stage flushed:
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 288

=====================Simulation Loop #143=====================
Start Cycle for CPU:1
Fetch stage flushed:
Control Hazard detected in: Execute
/////////////Execute Stage/////////////
Branch check: True
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 20
Data in rs2: -20
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 328
Start Cycle for CPU:2
Fetch stage flushed:
Control Hazard detected in: Execute
/////////////Execute Stage/////////////
Branch check: True
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 20
Data in rs2: -20
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 288

=====================Simulation Loop #144=====================
Start Cycle for CPU:1
Control Hazard detected in: Memory
//////////////Memory Stage//////////////
Next Instruction: PC = ALU result
///////Cpu Cycle Debug Statements///////
X1 value: 328
Start Cycle for CPU:2
Control Hazard detected in: Memory
//////////////Memory Stage//////////////
Next Instruction: PC = ALU result
///////Cpu Cycle Debug Statements///////
X1 value: 288

=====================Simulation Loop #145=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 328
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 288

=====================Simulation Loop #146=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 328
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 288

=====================Simulation Loop #147=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 360
Data in rs1: 328
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 360
///////Cpu Cycle Debug Statements///////
X1 value: 328
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 320
Data in rs1: 288
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 320
///////Cpu Cycle Debug Statements///////
X1 value: 288

=====================Simulation Loop #148=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
FP Memory Read Operation
///////Cpu Cycle Debug Statements///////
X1 value: 328
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
FP Memory Read Operation
///////Cpu Cycle Debug Statements///////
X1 value: 288
Memory Bus Access:
CPU 1 reads from address: 0x200: 0b00000000000000000000000000000000

=====================Simulation Loop #149=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 328
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 288
Memory Bus Access:
CPU 2 reads from address: 0x300: 0b00000000000000000000000000000000

=====================Simulation Loop #150=====================
Start Cycle for CPU:1
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 328
Start Cycle for CPU:2
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 288

=====================Simulation Loop #151=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 328
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 288

=====================Simulation Loop #152=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 328
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 288

=====================Simulation Loop #153=====================
Start Cycle for CPU:1
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 328
Start Cycle for CPU:2
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 288

=====================Simulation Loop #154=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001011011100011
Assembly Instruction: bne x1, x2, -20
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
///////Cpu Cycle Debug Statements///////
X1 value: 328
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001011011100011
Assembly Instruction: bne x1, x2, -20
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
///////Cpu Cycle Debug Statements///////
X1 value: 288

=====================Simulation Loop #155=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 320
Data in rs1: 328
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 320
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 544
Data To Store: 0
///////Cpu Cycle Debug Statements///////
X1 value: 328
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 280
Data in rs1: 288
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 280
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 800
Data To Store: 0
///////Cpu Cycle Debug Statements///////
X1 value: 288
Memory Bus Access:
CPU 1 writes to address 220: 00000000000000000000000000000000

=====================Simulation Loop #156=====================
Start Cycle for CPU:1
Fetch stage flushed:
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 320
Data in rs1: 328
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 320
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 328
Start Cycle for CPU:2
Fetch stage flushed:
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 280
Data in rs1: 288
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 280
//////////////Memory Stage//////////////
Memory Access still Pending
///////Cpu Cycle Debug Statements///////
X1 value: 288
Memory Bus Access:
CPU 2 writes to address 320: 00000000000000000000000000000000

=====================Simulation Loop #157=====================
Start Cycle for CPU:1
Fetch stage flushed:
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 328
Start Cycle for CPU:2
Fetch stage flushed:
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 288

=====================Simulation Loop #158=====================
Start Cycle for CPU:1
Fetch stage flushed:
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 320
Start Cycle for CPU:2
Fetch stage flushed:
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 280

=====================Simulation Loop #159=====================
Start Cycle for CPU:1
Fetch stage flushed:
Control Hazard detected in: Execute
/////////////Execute Stage/////////////
Branch check: True
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 20
Data in rs2: -20
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 320
Start Cycle for CPU:2
Fetch stage flushed:
Control Hazard detected in: Execute
/////////////Execute Stage/////////////
Branch check: True
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 20
Data in rs2: -20
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 280

=====================Simulation Loop #160=====================
Start Cycle for CPU:1
Control Hazard detected in: Memory
//////////////Memory Stage//////////////
Next Instruction: PC = ALU result
///////Cpu Cycle Debug Statements///////
X1 value: 320
Start Cycle for CPU:2
Control Hazard detected in: Memory
//////////////Memory Stage//////////////
Next Instruction: PC = ALU result
///////Cpu Cycle Debug Statements///////
X1 value: 280

=====================Simulation Loop #161=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 320
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 280

=====================Simulation Loop #162=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 320
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 280

=====================Simulation Loop #163=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 352
Data in rs1: 320
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 352
///////Cpu Cycle Debug Statements///////
X1 value: 320
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 312
Data in rs1: 280
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 312
///////Cpu Cycle Debug Statements///////
X1 value: 280

=====================Simulation Loop #164=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
FP Memory Read Operation
///////Cpu Cycle Debug Statements///////
X1 value: 320
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
FP Memory Read Operation
///////Cpu Cycle Debug Statements///////
X1 value: 280
Memory Bus Access:
CPU 1 reads from address: 0x200: 0b00000000000000000000000000000000

=====================Simulation Loop #165=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 320
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 280
Memory Bus Access:
CPU 2 reads from address: 0x300: 0b00000000000000000000000000000000

=====================Simulation Loop #166=====================
Start Cycle for CPU:1
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 320
Start Cycle for CPU:2
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 280

=====================Simulation Loop #167=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 320
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 280

=====================Simulation Loop #168=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 320
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 280

=====================Simulation Loop #169=====================
Start Cycle for CPU:1
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 320
Start Cycle for CPU:2
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 280

=====================Simulation Loop #170=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001011011100011
Assembly Instruction: bne x1, x2, -20
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
///////Cpu Cycle Debug Statements///////
X1 value: 320
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001011011100011
Assembly Instruction: bne x1, x2, -20
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
///////Cpu Cycle Debug Statements///////
X1 value: 280

=====================Simulation Loop #171=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 312
Data in rs1: 320
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 312
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 544
Data To Store: 0
///////Cpu Cycle Debug Statements///////
X1 value: 320
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 272
Data in rs1: 280
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 272
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 800
Data To Store: 0
///////Cpu Cycle Debug Statements///////
X1 value: 280
Memory Bus Access:
CPU 1 writes to address 220: 00000000000000000000000000000000

=====================Simulation Loop #172=====================
Start Cycle for CPU:1
Fetch stage flushed:
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 312
Data in rs1: 320
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 312
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 320
Start Cycle for CPU:2
Fetch stage flushed:
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 272
Data in rs1: 280
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 272
//////////////Memory Stage//////////////
Memory Access still Pending
///////Cpu Cycle Debug Statements///////
X1 value: 280
Memory Bus Access:
CPU 2 writes to address 320: 00000000000000000000000000000000

=====================Simulation Loop #173=====================
Start Cycle for CPU:1
Fetch stage flushed:
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 320
Start Cycle for CPU:2
Fetch stage flushed:
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 280

=====================Simulation Loop #174=====================
Start Cycle for CPU:1
Fetch stage flushed:
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 312
Start Cycle for CPU:2
Fetch stage flushed:
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 272

=====================Simulation Loop #175=====================
Start Cycle for CPU:1
Fetch stage flushed:
Control Hazard detected in: Execute
/////////////Execute Stage/////////////
Branch check: True
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 20
Data in rs2: -20
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 312
Start Cycle for CPU:2
Fetch stage flushed:
Control Hazard detected in: Execute
/////////////Execute Stage/////////////
Branch check: True
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 20
Data in rs2: -20
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 272

=====================Simulation Loop #176=====================
Start Cycle for CPU:1
Control Hazard detected in: Memory
//////////////Memory Stage//////////////
Next Instruction: PC = ALU result
///////Cpu Cycle Debug Statements///////
X1 value: 312
Start Cycle for CPU:2
Control Hazard detected in: Memory
//////////////Memory Stage//////////////
Next Instruction: PC = ALU result
///////Cpu Cycle Debug Statements///////
X1 value: 272

=====================Simulation Loop #177=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 312
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 272

=====================Simulation Loop #178=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 312
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 272

=====================Simulation Loop #179=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 344
Data in rs1: 312
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 344
///////Cpu Cycle Debug Statements///////
X1 value: 312
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 304
Data in rs1: 272
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 304
///////Cpu Cycle Debug Statements///////
X1 value: 272

=====================Simulation Loop #180=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
FP Memory Read Operation
///////Cpu Cycle Debug Statements///////
X1 value: 312
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
FP Memory Read Operation
///////Cpu Cycle Debug Statements///////
X1 value: 272
Memory Bus Access:
CPU 1 reads from address: 0x200: 0b00000000000000000000000000000000

=====================Simulation Loop #181=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 312
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 272
Memory Bus Access:
CPU 2 reads from address: 0x300: 0b00000000000000000000000000000000

=====================Simulation Loop #182=====================
Start Cycle for CPU:1
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 312
Start Cycle for CPU:2
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 272

=====================Simulation Loop #183=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 312
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 272

=====================Simulation Loop #184=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 312
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 272

=====================Simulation Loop #185=====================
Start Cycle for CPU:1
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 312
Start Cycle for CPU:2
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 272

=====================Simulation Loop #186=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001011011100011
Assembly Instruction: bne x1, x2, -20
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
///////Cpu Cycle Debug Statements///////
X1 value: 312
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001011011100011
Assembly Instruction: bne x1, x2, -20
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
///////Cpu Cycle Debug Statements///////
X1 value: 272

=====================Simulation Loop #187=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 304
Data in rs1: 312
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 304
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 544
Data To Store: 0
///////Cpu Cycle Debug Statements///////
X1 value: 312
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 264
Data in rs1: 272
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 264
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 800
Data To Store: 0
///////Cpu Cycle Debug Statements///////
X1 value: 272
Memory Bus Access:
CPU 1 writes to address 220: 00000000000000000000000000000000

=====================Simulation Loop #188=====================
Start Cycle for CPU:1
Fetch stage flushed:
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 304
Data in rs1: 312
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 304
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 312
Start Cycle for CPU:2
Fetch stage flushed:
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 264
Data in rs1: 272
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 264
//////////////Memory Stage//////////////
Memory Access still Pending
///////Cpu Cycle Debug Statements///////
X1 value: 272
Memory Bus Access:
CPU 2 writes to address 320: 00000000000000000000000000000000

=====================Simulation Loop #189=====================
Start Cycle for CPU:1
Fetch stage flushed:
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 312
Start Cycle for CPU:2
Fetch stage flushed:
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 272

=====================Simulation Loop #190=====================
Start Cycle for CPU:1
Fetch stage flushed:
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 304
Start Cycle for CPU:2
Fetch stage flushed:
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 264

=====================Simulation Loop #191=====================
Start Cycle for CPU:1
Fetch stage flushed:
Control Hazard detected in: Execute
/////////////Execute Stage/////////////
Branch check: True
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 20
Data in rs2: -20
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 304
Start Cycle for CPU:2
Fetch stage flushed:
Control Hazard detected in: Execute
/////////////Execute Stage/////////////
Branch check: True
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 20
Data in rs2: -20
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 264

=====================Simulation Loop #192=====================
Start Cycle for CPU:1
Control Hazard detected in: Memory
//////////////Memory Stage//////////////
Next Instruction: PC = ALU result
///////Cpu Cycle Debug Statements///////
X1 value: 304
Start Cycle for CPU:2
Control Hazard detected in: Memory
//////////////Memory Stage//////////////
Next Instruction: PC = ALU result
///////Cpu Cycle Debug Statements///////
X1 value: 264

=====================Simulation Loop #193=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 304
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 264

=====================Simulation Loop #194=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 304
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 264

=====================Simulation Loop #195=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 336
Data in rs1: 304
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 336
///////Cpu Cycle Debug Statements///////
X1 value: 304
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 296
Data in rs1: 264
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 296
///////Cpu Cycle Debug Statements///////
X1 value: 264

=====================Simulation Loop #196=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
FP Memory Read Operation
///////Cpu Cycle Debug Statements///////
X1 value: 304
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
FP Memory Read Operation
///////Cpu Cycle Debug Statements///////
X1 value: 264
Memory Bus Access:
CPU 1 reads from address: 0x200: 0b00000000000000000000000000000000

=====================Simulation Loop #197=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 304
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 264
Memory Bus Access:
CPU 2 reads from address: 0x300: 0b00000000000000000000000000000000

=====================Simulation Loop #198=====================
Start Cycle for CPU:1
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 304
Start Cycle for CPU:2
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 264

=====================Simulation Loop #199=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 304
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 264

=====================Simulation Loop #200=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 304
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 264

=====================Simulation Loop #201=====================
Start Cycle for CPU:1
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 304
Start Cycle for CPU:2
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 264

=====================Simulation Loop #202=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001011011100011
Assembly Instruction: bne x1, x2, -20
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
///////Cpu Cycle Debug Statements///////
X1 value: 304
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001011011100011
Assembly Instruction: bne x1, x2, -20
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
///////Cpu Cycle Debug Statements///////
X1 value: 264

=====================Simulation Loop #203=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 296
Data in rs1: 304
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 296
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 544
Data To Store: 0
///////Cpu Cycle Debug Statements///////
X1 value: 304
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 256
Data in rs1: 264
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 256
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 800
Data To Store: 0
///////Cpu Cycle Debug Statements///////
X1 value: 264
Memory Bus Access:
CPU 1 writes to address 220: 00000000000000000000000000000000

=====================Simulation Loop #204=====================
Start Cycle for CPU:1
Fetch stage flushed:
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 296
Data in rs1: 304
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 296
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 304
Start Cycle for CPU:2
Fetch stage flushed:
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 256
Data in rs1: 264
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 256
//////////////Memory Stage//////////////
Memory Access still Pending
///////Cpu Cycle Debug Statements///////
X1 value: 264
Memory Bus Access:
CPU 2 writes to address 320: 00000000000000000000000000000000

=====================Simulation Loop #205=====================
Start Cycle for CPU:1
Fetch stage flushed:
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 304
Start Cycle for CPU:2
Fetch stage flushed:
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 264

=====================Simulation Loop #206=====================
Start Cycle for CPU:1
Fetch stage flushed:
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 296
Start Cycle for CPU:2
Fetch stage flushed:
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 256

=====================Simulation Loop #207=====================
Start Cycle for CPU:1
Fetch stage flushed:
Control Hazard detected in: Execute
/////////////Execute Stage/////////////
Branch check: True
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 20
Data in rs2: -20
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 296
Start Cycle for CPU:2
Fetch stage flushed:
Control Hazard detected in: Execute
/////////////Execute Stage/////////////
Branch check: True
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 20
Data in rs2: -20
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 256

=====================Simulation Loop #208=====================
Start Cycle for CPU:1
Control Hazard detected in: Memory
//////////////Memory Stage//////////////
Next Instruction: PC = ALU result
///////Cpu Cycle Debug Statements///////
X1 value: 296
Start Cycle for CPU:2
Control Hazard detected in: Memory
//////////////Memory Stage//////////////
Next Instruction: PC = ALU result
///////Cpu Cycle Debug Statements///////
X1 value: 256

=====================Simulation Loop #209=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 296
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 256

=====================Simulation Loop #210=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 296
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 256

=====================Simulation Loop #211=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 328
Data in rs1: 296
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 328
///////Cpu Cycle Debug Statements///////
X1 value: 296
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 288
Data in rs1: 256
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 288
///////Cpu Cycle Debug Statements///////
X1 value: 256

=====================Simulation Loop #212=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
FP Memory Read Operation
///////Cpu Cycle Debug Statements///////
X1 value: 296
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
FP Memory Read Operation
///////Cpu Cycle Debug Statements///////
X1 value: 256
Memory Bus Access:
CPU 1 reads from address: 0x200: 0b00000000000000000000000000000000

=====================Simulation Loop #213=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 296
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 256
Memory Bus Access:
CPU 2 reads from address: 0x300: 0b00000000000000000000000000000000

=====================Simulation Loop #214=====================
Start Cycle for CPU:1
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 296
Start Cycle for CPU:2
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 256

=====================Simulation Loop #215=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 296
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 256

=====================Simulation Loop #216=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 296
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 256

=====================Simulation Loop #217=====================
Start Cycle for CPU:1
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 296
Start Cycle for CPU:2
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 256

=====================Simulation Loop #218=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001011011100011
Assembly Instruction: bne x1, x2, -20
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
///////Cpu Cycle Debug Statements///////
X1 value: 296
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001011011100011
Assembly Instruction: bne x1, x2, -20
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
///////Cpu Cycle Debug Statements///////
X1 value: 256

=====================Simulation Loop #219=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 288
Data in rs1: 296
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 288
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 544
Data To Store: 0
///////Cpu Cycle Debug Statements///////
X1 value: 296
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 248
Data in rs1: 256
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 248
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 800
Data To Store: 0
///////Cpu Cycle Debug Statements///////
X1 value: 256
Memory Bus Access:
CPU 1 writes to address 220: 00000000000000000000000000000000

=====================Simulation Loop #220=====================
Start Cycle for CPU:1
Fetch stage flushed:
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 288
Data in rs1: 296
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 288
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 296
Start Cycle for CPU:2
Fetch stage flushed:
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 248
Data in rs1: 256
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 248
//////////////Memory Stage//////////////
Memory Access still Pending
///////Cpu Cycle Debug Statements///////
X1 value: 256
Memory Bus Access:
CPU 2 writes to address 320: 00000000000000000000000000000000

=====================Simulation Loop #221=====================
Start Cycle for CPU:1
Fetch stage flushed:
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 296
Start Cycle for CPU:2
Fetch stage flushed:
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 256

=====================Simulation Loop #222=====================
Start Cycle for CPU:1
Fetch stage flushed:
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 288
Start Cycle for CPU:2
Fetch stage flushed:
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 248

=====================Simulation Loop #223=====================
Start Cycle for CPU:1
Fetch stage flushed:
Control Hazard detected in: Execute
/////////////Execute Stage/////////////
Branch check: True
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 20
Data in rs2: -20
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 288
Start Cycle for CPU:2
Fetch stage flushed:
Control Hazard detected in: Execute
/////////////Execute Stage/////////////
Branch check: True
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 20
Data in rs2: -20
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 248

=====================Simulation Loop #224=====================
Start Cycle for CPU:1
Control Hazard detected in: Memory
//////////////Memory Stage//////////////
Next Instruction: PC = ALU result
///////Cpu Cycle Debug Statements///////
X1 value: 288
Start Cycle for CPU:2
Control Hazard detected in: Memory
//////////////Memory Stage//////////////
Next Instruction: PC = ALU result
///////Cpu Cycle Debug Statements///////
X1 value: 248

=====================Simulation Loop #225=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 288
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 248

=====================Simulation Loop #226=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 288
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 248

=====================Simulation Loop #227=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 320
Data in rs1: 288
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 320
///////Cpu Cycle Debug Statements///////
X1 value: 288
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 280
Data in rs1: 248
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 280
///////Cpu Cycle Debug Statements///////
X1 value: 248

=====================Simulation Loop #228=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
FP Memory Read Operation
///////Cpu Cycle Debug Statements///////
X1 value: 288
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
FP Memory Read Operation
///////Cpu Cycle Debug Statements///////
X1 value: 248
Memory Bus Access:
CPU 1 reads from address: 0x200: 0b00000000000000000000000000000000

=====================Simulation Loop #229=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 288
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 248
Memory Bus Access:
CPU 2 reads from address: 0x300: 0b00000000000000000000000000000000

=====================Simulation Loop #230=====================
Start Cycle for CPU:1
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 288
Start Cycle for CPU:2
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 248

=====================Simulation Loop #231=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 288
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 248

=====================Simulation Loop #232=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 288
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 248

=====================Simulation Loop #233=====================
Start Cycle for CPU:1
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 288
Start Cycle for CPU:2
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 248

=====================Simulation Loop #234=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001011011100011
Assembly Instruction: bne x1, x2, -20
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
///////Cpu Cycle Debug Statements///////
X1 value: 288
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001011011100011
Assembly Instruction: bne x1, x2, -20
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
///////Cpu Cycle Debug Statements///////
X1 value: 248

=====================Simulation Loop #235=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 280
Data in rs1: 288
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 280
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 544
Data To Store: 0
///////Cpu Cycle Debug Statements///////
X1 value: 288
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 240
Data in rs1: 248
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 240
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 800
Data To Store: 0
///////Cpu Cycle Debug Statements///////
X1 value: 248
Memory Bus Access:
CPU 1 writes to address 220: 00000000000000000000000000000000

=====================Simulation Loop #236=====================
Start Cycle for CPU:1
Fetch stage flushed:
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 280
Data in rs1: 288
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 280
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 288
Start Cycle for CPU:2
Fetch stage flushed:
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 240
Data in rs1: 248
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 240
//////////////Memory Stage//////////////
Memory Access still Pending
///////Cpu Cycle Debug Statements///////
X1 value: 248
Memory Bus Access:
CPU 2 writes to address 320: 00000000000000000000000000000000

=====================Simulation Loop #237=====================
Start Cycle for CPU:1
Fetch stage flushed:
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 288
Start Cycle for CPU:2
Fetch stage flushed:
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 248

=====================Simulation Loop #238=====================
Start Cycle for CPU:1
Fetch stage flushed:
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 280
Start Cycle for CPU:2
Fetch stage flushed:
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 240

=====================Simulation Loop #239=====================
Start Cycle for CPU:1
Fetch stage flushed:
Control Hazard detected in: Execute
/////////////Execute Stage/////////////
Branch check: True
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 20
Data in rs2: -20
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 280
Start Cycle for CPU:2
Fetch stage flushed:
Control Hazard detected in: Execute
/////////////Execute Stage/////////////
Branch check: True
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 20
Data in rs2: -20
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 240

=====================Simulation Loop #240=====================
Start Cycle for CPU:1
Control Hazard detected in: Memory
//////////////Memory Stage//////////////
Next Instruction: PC = ALU result
///////Cpu Cycle Debug Statements///////
X1 value: 280
Start Cycle for CPU:2
Control Hazard detected in: Memory
//////////////Memory Stage//////////////
Next Instruction: PC = ALU result
///////Cpu Cycle Debug Statements///////
X1 value: 240

=====================Simulation Loop #241=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 280
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 240

=====================Simulation Loop #242=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 280
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 240

=====================Simulation Loop #243=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 312
Data in rs1: 280
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 312
///////Cpu Cycle Debug Statements///////
X1 value: 280
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 272
Data in rs1: 240
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 272
///////Cpu Cycle Debug Statements///////
X1 value: 240

=====================Simulation Loop #244=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
FP Memory Read Operation
///////Cpu Cycle Debug Statements///////
X1 value: 280
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
FP Memory Read Operation
///////Cpu Cycle Debug Statements///////
X1 value: 240
Memory Bus Access:
CPU 1 reads from address: 0x200: 0b00000000000000000000000000000000

=====================Simulation Loop #245=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 280
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 240
Memory Bus Access:
CPU 2 reads from address: 0x300: 0b00000000000000000000000000000000

=====================Simulation Loop #246=====================
Start Cycle for CPU:1
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 280
Start Cycle for CPU:2
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 240

=====================Simulation Loop #247=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 280
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 240

=====================Simulation Loop #248=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 280
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 240

=====================Simulation Loop #249=====================
Start Cycle for CPU:1
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 280
Start Cycle for CPU:2
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 240

=====================Simulation Loop #250=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001011011100011
Assembly Instruction: bne x1, x2, -20
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
///////Cpu Cycle Debug Statements///////
X1 value: 280
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001011011100011
Assembly Instruction: bne x1, x2, -20
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
///////Cpu Cycle Debug Statements///////
X1 value: 240

=====================Simulation Loop #251=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 272
Data in rs1: 280
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 272
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 544
Data To Store: 0
///////Cpu Cycle Debug Statements///////
X1 value: 280
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 232
Data in rs1: 240
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 232
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 800
Data To Store: 0
///////Cpu Cycle Debug Statements///////
X1 value: 240
Memory Bus Access:
CPU 1 writes to address 220: 00000000000000000000000000000000

=====================Simulation Loop #252=====================
Start Cycle for CPU:1
Fetch stage flushed:
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 272
Data in rs1: 280
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 272
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 280
Start Cycle for CPU:2
Fetch stage flushed:
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 232
Data in rs1: 240
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 232
//////////////Memory Stage//////////////
Memory Access still Pending
///////Cpu Cycle Debug Statements///////
X1 value: 240
Memory Bus Access:
CPU 2 writes to address 320: 00000000000000000000000000000000

=====================Simulation Loop #253=====================
Start Cycle for CPU:1
Fetch stage flushed:
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 280
Start Cycle for CPU:2
Fetch stage flushed:
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 240

=====================Simulation Loop #254=====================
Start Cycle for CPU:1
Fetch stage flushed:
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 272
Start Cycle for CPU:2
Fetch stage flushed:
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 232

=====================Simulation Loop #255=====================
Start Cycle for CPU:1
Fetch stage flushed:
Control Hazard detected in: Execute
/////////////Execute Stage/////////////
Branch check: True
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 20
Data in rs2: -20
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 272
Start Cycle for CPU:2
Fetch stage flushed:
Control Hazard detected in: Execute
/////////////Execute Stage/////////////
Branch check: True
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 20
Data in rs2: -20
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 232

=====================Simulation Loop #256=====================
Start Cycle for CPU:1
Control Hazard detected in: Memory
//////////////Memory Stage//////////////
Next Instruction: PC = ALU result
///////Cpu Cycle Debug Statements///////
X1 value: 272
Start Cycle for CPU:2
Control Hazard detected in: Memory
//////////////Memory Stage//////////////
Next Instruction: PC = ALU result
///////Cpu Cycle Debug Statements///////
X1 value: 232

=====================Simulation Loop #257=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 272
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 232

=====================Simulation Loop #258=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 272
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 232

=====================Simulation Loop #259=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 304
Data in rs1: 272
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 304
///////Cpu Cycle Debug Statements///////
X1 value: 272
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 264
Data in rs1: 232
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 264
///////Cpu Cycle Debug Statements///////
X1 value: 232

=====================Simulation Loop #260=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
FP Memory Read Operation
///////Cpu Cycle Debug Statements///////
X1 value: 272
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
FP Memory Read Operation
///////Cpu Cycle Debug Statements///////
X1 value: 232
Memory Bus Access:
CPU 1 reads from address: 0x200: 0b00000000000000000000000000000000

=====================Simulation Loop #261=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 272
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 232
Memory Bus Access:
CPU 2 reads from address: 0x300: 0b00000000000000000000000000000000

=====================Simulation Loop #262=====================
Start Cycle for CPU:1
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 272
Start Cycle for CPU:2
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 232

=====================Simulation Loop #263=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 272
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 232

=====================Simulation Loop #264=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 272
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 232

=====================Simulation Loop #265=====================
Start Cycle for CPU:1
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 272
Start Cycle for CPU:2
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 232

=====================Simulation Loop #266=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001011011100011
Assembly Instruction: bne x1, x2, -20
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
///////Cpu Cycle Debug Statements///////
X1 value: 272
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001011011100011
Assembly Instruction: bne x1, x2, -20
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
///////Cpu Cycle Debug Statements///////
X1 value: 232

=====================Simulation Loop #267=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 264
Data in rs1: 272
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 264
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 544
Data To Store: 0
///////Cpu Cycle Debug Statements///////
X1 value: 272
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 224
Data in rs1: 232
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 224
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 800
Data To Store: 0
///////Cpu Cycle Debug Statements///////
X1 value: 232
Memory Bus Access:
CPU 1 writes to address 220: 00000000000000000000000000000000

=====================Simulation Loop #268=====================
Start Cycle for CPU:1
Fetch stage flushed:
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 264
Data in rs1: 272
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 264
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 272
Start Cycle for CPU:2
Fetch stage flushed:
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 224
Data in rs1: 232
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 224
//////////////Memory Stage//////////////
Memory Access still Pending
///////Cpu Cycle Debug Statements///////
X1 value: 232
Memory Bus Access:
CPU 2 writes to address 320: 00000000000000000000000000000000

=====================Simulation Loop #269=====================
Start Cycle for CPU:1
Fetch stage flushed:
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 272
Start Cycle for CPU:2
Fetch stage flushed:
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 232

=====================Simulation Loop #270=====================
Start Cycle for CPU:1
Fetch stage flushed:
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 264
Start Cycle for CPU:2
Fetch stage flushed:
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 224

=====================Simulation Loop #271=====================
Start Cycle for CPU:1
Fetch stage flushed:
Control Hazard detected in: Execute
/////////////Execute Stage/////////////
Branch check: True
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 20
Data in rs2: -20
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 264
Start Cycle for CPU:2
Fetch stage flushed:
Control Hazard detected in: Execute
/////////////Execute Stage/////////////
Branch check: True
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 20
Data in rs2: -20
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 224

=====================Simulation Loop #272=====================
Start Cycle for CPU:1
Control Hazard detected in: Memory
//////////////Memory Stage//////////////
Next Instruction: PC = ALU result
///////Cpu Cycle Debug Statements///////
X1 value: 264
Start Cycle for CPU:2
Control Hazard detected in: Memory
//////////////Memory Stage//////////////
Next Instruction: PC = ALU result
///////Cpu Cycle Debug Statements///////
X1 value: 224

=====================Simulation Loop #273=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 264
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 224

=====================Simulation Loop #274=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 264
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 224

=====================Simulation Loop #275=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 296
Data in rs1: 264
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 296
///////Cpu Cycle Debug Statements///////
X1 value: 264
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 256
Data in rs1: 224
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 256
///////Cpu Cycle Debug Statements///////
X1 value: 224

=====================Simulation Loop #276=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
FP Memory Read Operation
///////Cpu Cycle Debug Statements///////
X1 value: 264
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
FP Memory Read Operation
///////Cpu Cycle Debug Statements///////
X1 value: 224
Memory Bus Access:
CPU 1 reads from address: 0x200: 0b00000000000000000000000000000000

=====================Simulation Loop #277=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 264
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 224
Memory Bus Access:
CPU 2 reads from address: 0x300: 0b00000000000000000000000000000000

=====================Simulation Loop #278=====================
Start Cycle for CPU:1
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 264
Start Cycle for CPU:2
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 224

=====================Simulation Loop #279=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 264
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 224

=====================Simulation Loop #280=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 264
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 224

=====================Simulation Loop #281=====================
Start Cycle for CPU:1
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 264
Start Cycle for CPU:2
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 224

=====================Simulation Loop #282=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001011011100011
Assembly Instruction: bne x1, x2, -20
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
///////Cpu Cycle Debug Statements///////
X1 value: 264
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001011011100011
Assembly Instruction: bne x1, x2, -20
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
///////Cpu Cycle Debug Statements///////
X1 value: 224

=====================Simulation Loop #283=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 256
Data in rs1: 264
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 256
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 544
Data To Store: 0
///////Cpu Cycle Debug Statements///////
X1 value: 264
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 216
Data in rs1: 224
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 216
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 800
Data To Store: 0
///////Cpu Cycle Debug Statements///////
X1 value: 224
Memory Bus Access:
CPU 1 writes to address 220: 00000000000000000000000000000000

=====================Simulation Loop #284=====================
Start Cycle for CPU:1
Fetch stage flushed:
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 256
Data in rs1: 264
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 256
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 264
Start Cycle for CPU:2
Fetch stage flushed:
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 216
Data in rs1: 224
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 216
//////////////Memory Stage//////////////
Memory Access still Pending
///////Cpu Cycle Debug Statements///////
X1 value: 224
Memory Bus Access:
CPU 2 writes to address 320: 00000000000000000000000000000000

=====================Simulation Loop #285=====================
Start Cycle for CPU:1
Fetch stage flushed:
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 264
Start Cycle for CPU:2
Fetch stage flushed:
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 224

=====================Simulation Loop #286=====================
Start Cycle for CPU:1
Fetch stage flushed:
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 256
Start Cycle for CPU:2
Fetch stage flushed:
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 216

=====================Simulation Loop #287=====================
Start Cycle for CPU:1
Fetch stage flushed:
Control Hazard detected in: Execute
/////////////Execute Stage/////////////
Branch check: True
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 20
Data in rs2: -20
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 256
Start Cycle for CPU:2
Fetch stage flushed:
Control Hazard detected in: Execute
/////////////Execute Stage/////////////
Branch check: True
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 20
Data in rs2: -20
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 216

=====================Simulation Loop #288=====================
Start Cycle for CPU:1
Control Hazard detected in: Memory
//////////////Memory Stage//////////////
Next Instruction: PC = ALU result
///////Cpu Cycle Debug Statements///////
X1 value: 256
Start Cycle for CPU:2
Control Hazard detected in: Memory
//////////////Memory Stage//////////////
Next Instruction: PC = ALU result
///////Cpu Cycle Debug Statements///////
X1 value: 216

=====================Simulation Loop #289=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 256
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 216

=====================Simulation Loop #290=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 256
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 216

=====================Simulation Loop #291=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 288
Data in rs1: 256
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 288
///////Cpu Cycle Debug Statements///////
X1 value: 256
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 248
Data in rs1: 216
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 248
///////Cpu Cycle Debug Statements///////
X1 value: 216

=====================Simulation Loop #292=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
FP Memory Read Operation
///////Cpu Cycle Debug Statements///////
X1 value: 256
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
FP Memory Read Operation
///////Cpu Cycle Debug Statements///////
X1 value: 216
Memory Bus Access:
CPU 1 reads from address: 0x200: 0b00000000000000000000000000000000

=====================Simulation Loop #293=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 256
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 216
Memory Bus Access:
CPU 2 reads from address: 0x300: 0b00000000000000000000000000000000

=====================Simulation Loop #294=====================
Start Cycle for CPU:1
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 256
Start Cycle for CPU:2
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 216

=====================Simulation Loop #295=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 256
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 216

=====================Simulation Loop #296=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 256
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 216

=====================Simulation Loop #297=====================
Start Cycle for CPU:1
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 256
Start Cycle for CPU:2
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 216

=====================Simulation Loop #298=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001011011100011
Assembly Instruction: bne x1, x2, -20
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
///////Cpu Cycle Debug Statements///////
X1 value: 256
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001011011100011
Assembly Instruction: bne x1, x2, -20
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
///////Cpu Cycle Debug Statements///////
X1 value: 216

=====================Simulation Loop #299=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 248
Data in rs1: 256
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 248
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 544
Data To Store: 0
///////Cpu Cycle Debug Statements///////
X1 value: 256
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 208
Data in rs1: 216
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 208
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 800
Data To Store: 0
///////Cpu Cycle Debug Statements///////
X1 value: 216
Memory Bus Access:
CPU 1 writes to address 220: 00000000000000000000000000000000

=====================Simulation Loop #300=====================
Start Cycle for CPU:1
Fetch stage flushed:
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 248
Data in rs1: 256
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 248
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 256
Start Cycle for CPU:2
Fetch stage flushed:
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 208
Data in rs1: 216
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 208
//////////////Memory Stage//////////////
Memory Access still Pending
///////Cpu Cycle Debug Statements///////
X1 value: 216
Memory Bus Access:
CPU 2 writes to address 320: 00000000000000000000000000000000

=====================Simulation Loop #301=====================
Start Cycle for CPU:1
Fetch stage flushed:
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 256
Start Cycle for CPU:2
Fetch stage flushed:
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 216

=====================Simulation Loop #302=====================
Start Cycle for CPU:1
Fetch stage flushed:
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 248
Start Cycle for CPU:2
Fetch stage flushed:
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 208

=====================Simulation Loop #303=====================
Start Cycle for CPU:1
Fetch stage flushed:
Control Hazard detected in: Execute
/////////////Execute Stage/////////////
Branch check: True
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 20
Data in rs2: -20
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 248
Start Cycle for CPU:2
Fetch stage flushed:
Control Hazard detected in: Execute
/////////////Execute Stage/////////////
Branch check: True
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 20
Data in rs2: -20
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 208

=====================Simulation Loop #304=====================
Start Cycle for CPU:1
Control Hazard detected in: Memory
//////////////Memory Stage//////////////
Next Instruction: PC = ALU result
///////Cpu Cycle Debug Statements///////
X1 value: 248
Start Cycle for CPU:2
Control Hazard detected in: Memory
//////////////Memory Stage//////////////
Next Instruction: PC = ALU result
///////Cpu Cycle Debug Statements///////
X1 value: 208

=====================Simulation Loop #305=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 248
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 208

=====================Simulation Loop #306=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 248
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 208

=====================Simulation Loop #307=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 280
Data in rs1: 248
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 280
///////Cpu Cycle Debug Statements///////
X1 value: 248
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 240
Data in rs1: 208
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 240
///////Cpu Cycle Debug Statements///////
X1 value: 208

=====================Simulation Loop #308=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
FP Memory Read Operation
///////Cpu Cycle Debug Statements///////
X1 value: 248
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
FP Memory Read Operation
///////Cpu Cycle Debug Statements///////
X1 value: 208
Memory Bus Access:
CPU 1 reads from address: 0x200: 0b00000000000000000000000000000000

=====================Simulation Loop #309=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 248
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 208
Memory Bus Access:
CPU 2 reads from address: 0x300: 0b00000000000000000000000000000000

=====================Simulation Loop #310=====================
Start Cycle for CPU:1
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 248
Start Cycle for CPU:2
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 208

=====================Simulation Loop #311=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 248
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 208

=====================Simulation Loop #312=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 248
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 208

=====================Simulation Loop #313=====================
Start Cycle for CPU:1
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 248
Start Cycle for CPU:2
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 208

=====================Simulation Loop #314=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001011011100011
Assembly Instruction: bne x1, x2, -20
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
///////Cpu Cycle Debug Statements///////
X1 value: 248
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001011011100011
Assembly Instruction: bne x1, x2, -20
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
///////Cpu Cycle Debug Statements///////
X1 value: 208

=====================Simulation Loop #315=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 240
Data in rs1: 248
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 240
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 544
Data To Store: 0
///////Cpu Cycle Debug Statements///////
X1 value: 248
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 200
Data in rs1: 208
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 200
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 800
Data To Store: 0
///////Cpu Cycle Debug Statements///////
X1 value: 208
Memory Bus Access:
CPU 1 writes to address 220: 00000000000000000000000000000000

=====================Simulation Loop #316=====================
Start Cycle for CPU:1
Fetch stage flushed:
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 240
Data in rs1: 248
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 240
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 248
Start Cycle for CPU:2
Fetch stage flushed:
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 200
Data in rs1: 208
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 200
//////////////Memory Stage//////////////
Memory Access still Pending
///////Cpu Cycle Debug Statements///////
X1 value: 208
Memory Bus Access:
CPU 2 writes to address 320: 00000000000000000000000000000000

=====================Simulation Loop #317=====================
Start Cycle for CPU:1
Fetch stage flushed:
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 248
Start Cycle for CPU:2
Fetch stage flushed:
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 208

=====================Simulation Loop #318=====================
Start Cycle for CPU:1
Fetch stage flushed:
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 240
Start Cycle for CPU:2
Fetch stage flushed:
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 200

=====================Simulation Loop #319=====================
Start Cycle for CPU:1
Fetch stage flushed:
Control Hazard detected in: Execute
/////////////Execute Stage/////////////
Branch check: True
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 20
Data in rs2: -20
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 240
Start Cycle for CPU:2
Fetch stage flushed:
Control Hazard detected in: Execute
/////////////Execute Stage/////////////
Branch check: True
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 20
Data in rs2: -20
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 200

=====================Simulation Loop #320=====================
Start Cycle for CPU:1
Control Hazard detected in: Memory
//////////////Memory Stage//////////////
Next Instruction: PC = ALU result
///////Cpu Cycle Debug Statements///////
X1 value: 240
Start Cycle for CPU:2
Control Hazard detected in: Memory
//////////////Memory Stage//////////////
Next Instruction: PC = ALU result
///////Cpu Cycle Debug Statements///////
X1 value: 200

=====================Simulation Loop #321=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 240
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 200

=====================Simulation Loop #322=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 240
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 200

=====================Simulation Loop #323=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 272
Data in rs1: 240
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 272
///////Cpu Cycle Debug Statements///////
X1 value: 240
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 232
Data in rs1: 200
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 232
///////Cpu Cycle Debug Statements///////
X1 value: 200

=====================Simulation Loop #324=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
FP Memory Read Operation
///////Cpu Cycle Debug Statements///////
X1 value: 240
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
FP Memory Read Operation
///////Cpu Cycle Debug Statements///////
X1 value: 200
Memory Bus Access:
CPU 1 reads from address: 0x200: 0b00000000000000000000000000000000

=====================Simulation Loop #325=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 240
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 200
Memory Bus Access:
CPU 2 reads from address: 0x300: 0b00000000000000000000000000000000

=====================Simulation Loop #326=====================
Start Cycle for CPU:1
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 240
Start Cycle for CPU:2
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 200

=====================Simulation Loop #327=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 240
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 200

=====================Simulation Loop #328=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 240
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 200

=====================Simulation Loop #329=====================
Start Cycle for CPU:1
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 240
Start Cycle for CPU:2
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 200

=====================Simulation Loop #330=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001011011100011
Assembly Instruction: bne x1, x2, -20
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
///////Cpu Cycle Debug Statements///////
X1 value: 240
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001011011100011
Assembly Instruction: bne x1, x2, -20
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
///////Cpu Cycle Debug Statements///////
X1 value: 200

=====================Simulation Loop #331=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 232
Data in rs1: 240
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 232
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 544
Data To Store: 0
///////Cpu Cycle Debug Statements///////
X1 value: 240
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 192
Data in rs1: 200
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 192
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 800
Data To Store: 0
///////Cpu Cycle Debug Statements///////
X1 value: 200
Memory Bus Access:
CPU 1 writes to address 220: 00000000000000000000000000000000

=====================Simulation Loop #332=====================
Start Cycle for CPU:1
Fetch stage flushed:
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 232
Data in rs1: 240
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 232
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 240
Start Cycle for CPU:2
Fetch stage flushed:
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 192
Data in rs1: 200
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 192
//////////////Memory Stage//////////////
Memory Access still Pending
///////Cpu Cycle Debug Statements///////
X1 value: 200
Memory Bus Access:
CPU 2 writes to address 320: 00000000000000000000000000000000

=====================Simulation Loop #333=====================
Start Cycle for CPU:1
Fetch stage flushed:
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 240
Start Cycle for CPU:2
Fetch stage flushed:
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 200

=====================Simulation Loop #334=====================
Start Cycle for CPU:1
Fetch stage flushed:
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 232
Start Cycle for CPU:2
Fetch stage flushed:
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 192

=====================Simulation Loop #335=====================
Start Cycle for CPU:1
Fetch stage flushed:
Control Hazard detected in: Execute
/////////////Execute Stage/////////////
Branch check: True
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 20
Data in rs2: -20
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 232
Start Cycle for CPU:2
Fetch stage flushed:
Control Hazard detected in: Execute
/////////////Execute Stage/////////////
Branch check: True
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 20
Data in rs2: -20
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 192

=====================Simulation Loop #336=====================
Start Cycle for CPU:1
Control Hazard detected in: Memory
//////////////Memory Stage//////////////
Next Instruction: PC = ALU result
///////Cpu Cycle Debug Statements///////
X1 value: 232
Start Cycle for CPU:2
Control Hazard detected in: Memory
//////////////Memory Stage//////////////
Next Instruction: PC = ALU result
///////Cpu Cycle Debug Statements///////
X1 value: 192

=====================Simulation Loop #337=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 232
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 192

=====================Simulation Loop #338=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 232
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 192

=====================Simulation Loop #339=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 264
Data in rs1: 232
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 264
///////Cpu Cycle Debug Statements///////
X1 value: 232
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 224
Data in rs1: 192
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 224
///////Cpu Cycle Debug Statements///////
X1 value: 192

=====================Simulation Loop #340=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
FP Memory Read Operation
///////Cpu Cycle Debug Statements///////
X1 value: 232
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
FP Memory Read Operation
///////Cpu Cycle Debug Statements///////
X1 value: 192
Memory Bus Access:
CPU 1 reads from address: 0x200: 0b00000000000000000000000000000000

=====================Simulation Loop #341=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 232
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 192
Memory Bus Access:
CPU 2 reads from address: 0x300: 0b00000000000000000000000000000000

=====================Simulation Loop #342=====================
Start Cycle for CPU:1
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 232
Start Cycle for CPU:2
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 192

=====================Simulation Loop #343=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 232
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 192

=====================Simulation Loop #344=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 232
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 192

=====================Simulation Loop #345=====================
Start Cycle for CPU:1
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 232
Start Cycle for CPU:2
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 192

=====================Simulation Loop #346=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001011011100011
Assembly Instruction: bne x1, x2, -20
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
///////Cpu Cycle Debug Statements///////
X1 value: 232
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001011011100011
Assembly Instruction: bne x1, x2, -20
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
///////Cpu Cycle Debug Statements///////
X1 value: 192

=====================Simulation Loop #347=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 224
Data in rs1: 232
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 224
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 544
Data To Store: 0
///////Cpu Cycle Debug Statements///////
X1 value: 232
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 184
Data in rs1: 192
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 184
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 800
Data To Store: 0
///////Cpu Cycle Debug Statements///////
X1 value: 192
Memory Bus Access:
CPU 1 writes to address 220: 00000000000000000000000000000000

=====================Simulation Loop #348=====================
Start Cycle for CPU:1
Fetch stage flushed:
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 224
Data in rs1: 232
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 224
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 232
Start Cycle for CPU:2
Fetch stage flushed:
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 184
Data in rs1: 192
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 184
//////////////Memory Stage//////////////
Memory Access still Pending
///////Cpu Cycle Debug Statements///////
X1 value: 192
Memory Bus Access:
CPU 2 writes to address 320: 00000000000000000000000000000000

=====================Simulation Loop #349=====================
Start Cycle for CPU:1
Fetch stage flushed:
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 232
Start Cycle for CPU:2
Fetch stage flushed:
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 192

=====================Simulation Loop #350=====================
Start Cycle for CPU:1
Fetch stage flushed:
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 224
Start Cycle for CPU:2
Fetch stage flushed:
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 184

=====================Simulation Loop #351=====================
Start Cycle for CPU:1
Fetch stage flushed:
Control Hazard detected in: Execute
/////////////Execute Stage/////////////
Branch check: True
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 20
Data in rs2: -20
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 224
Start Cycle for CPU:2
Fetch stage flushed:
Control Hazard detected in: Execute
/////////////Execute Stage/////////////
Branch check: True
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 20
Data in rs2: -20
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 184

=====================Simulation Loop #352=====================
Start Cycle for CPU:1
Control Hazard detected in: Memory
//////////////Memory Stage//////////////
Next Instruction: PC = ALU result
///////Cpu Cycle Debug Statements///////
X1 value: 224
Start Cycle for CPU:2
Control Hazard detected in: Memory
//////////////Memory Stage//////////////
Next Instruction: PC = ALU result
///////Cpu Cycle Debug Statements///////
X1 value: 184

=====================Simulation Loop #353=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 224
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 184

=====================Simulation Loop #354=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 224
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 184

=====================Simulation Loop #355=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 256
Data in rs1: 224
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 256
///////Cpu Cycle Debug Statements///////
X1 value: 224
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 216
Data in rs1: 184
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 216
///////Cpu Cycle Debug Statements///////
X1 value: 184

=====================Simulation Loop #356=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
FP Memory Read Operation
///////Cpu Cycle Debug Statements///////
X1 value: 224
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
FP Memory Read Operation
///////Cpu Cycle Debug Statements///////
X1 value: 184
Memory Bus Access:
CPU 1 reads from address: 0x200: 0b00000000000000000000000000000000

=====================Simulation Loop #357=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 224
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 184
Memory Bus Access:
CPU 2 reads from address: 0x300: 0b00000000000000000000000000000000

=====================Simulation Loop #358=====================
Start Cycle for CPU:1
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 224
Start Cycle for CPU:2
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 184

=====================Simulation Loop #359=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 224
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 184

=====================Simulation Loop #360=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 224
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 184

=====================Simulation Loop #361=====================
Start Cycle for CPU:1
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 224
Start Cycle for CPU:2
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 184

=====================Simulation Loop #362=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001011011100011
Assembly Instruction: bne x1, x2, -20
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
///////Cpu Cycle Debug Statements///////
X1 value: 224
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001011011100011
Assembly Instruction: bne x1, x2, -20
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
///////Cpu Cycle Debug Statements///////
X1 value: 184

=====================Simulation Loop #363=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 216
Data in rs1: 224
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 216
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 544
Data To Store: 0
///////Cpu Cycle Debug Statements///////
X1 value: 224
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 176
Data in rs1: 184
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 176
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 800
Data To Store: 0
///////Cpu Cycle Debug Statements///////
X1 value: 184
Memory Bus Access:
CPU 1 writes to address 220: 00000000000000000000000000000000

=====================Simulation Loop #364=====================
Start Cycle for CPU:1
Fetch stage flushed:
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 216
Data in rs1: 224
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 216
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 224
Start Cycle for CPU:2
Fetch stage flushed:
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 176
Data in rs1: 184
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 176
//////////////Memory Stage//////////////
Memory Access still Pending
///////Cpu Cycle Debug Statements///////
X1 value: 184
Memory Bus Access:
CPU 2 writes to address 320: 00000000000000000000000000000000

=====================Simulation Loop #365=====================
Start Cycle for CPU:1
Fetch stage flushed:
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 224
Start Cycle for CPU:2
Fetch stage flushed:
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 184

=====================Simulation Loop #366=====================
Start Cycle for CPU:1
Fetch stage flushed:
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 216
Start Cycle for CPU:2
Fetch stage flushed:
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 176

=====================Simulation Loop #367=====================
Start Cycle for CPU:1
Fetch stage flushed:
Control Hazard detected in: Execute
/////////////Execute Stage/////////////
Branch check: True
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 20
Data in rs2: -20
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 216
Start Cycle for CPU:2
Fetch stage flushed:
Control Hazard detected in: Execute
/////////////Execute Stage/////////////
Branch check: True
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 20
Data in rs2: -20
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 176

=====================Simulation Loop #368=====================
Start Cycle for CPU:1
Control Hazard detected in: Memory
//////////////Memory Stage//////////////
Next Instruction: PC = ALU result
///////Cpu Cycle Debug Statements///////
X1 value: 216
Start Cycle for CPU:2
Control Hazard detected in: Memory
//////////////Memory Stage//////////////
Next Instruction: PC = ALU result
///////Cpu Cycle Debug Statements///////
X1 value: 176

=====================Simulation Loop #369=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 216
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 176

=====================Simulation Loop #370=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 216
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 176

=====================Simulation Loop #371=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 248
Data in rs1: 216
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 248
///////Cpu Cycle Debug Statements///////
X1 value: 216
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 208
Data in rs1: 176
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 208
///////Cpu Cycle Debug Statements///////
X1 value: 176

=====================Simulation Loop #372=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
FP Memory Read Operation
///////Cpu Cycle Debug Statements///////
X1 value: 216
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
FP Memory Read Operation
///////Cpu Cycle Debug Statements///////
X1 value: 176
Memory Bus Access:
CPU 1 reads from address: 0x200: 0b00000000000000000000000000000000

=====================Simulation Loop #373=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 216
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 176
Memory Bus Access:
CPU 2 reads from address: 0x300: 0b00000000000000000000000000000000

=====================Simulation Loop #374=====================
Start Cycle for CPU:1
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 216
Start Cycle for CPU:2
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 176

=====================Simulation Loop #375=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 216
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 176

=====================Simulation Loop #376=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 216
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 176

=====================Simulation Loop #377=====================
Start Cycle for CPU:1
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 216
Start Cycle for CPU:2
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 176

=====================Simulation Loop #378=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001011011100011
Assembly Instruction: bne x1, x2, -20
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
///////Cpu Cycle Debug Statements///////
X1 value: 216
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001011011100011
Assembly Instruction: bne x1, x2, -20
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
///////Cpu Cycle Debug Statements///////
X1 value: 176

=====================Simulation Loop #379=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 208
Data in rs1: 216
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 208
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 544
Data To Store: 0
///////Cpu Cycle Debug Statements///////
X1 value: 216
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 168
Data in rs1: 176
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 168
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 800
Data To Store: 0
///////Cpu Cycle Debug Statements///////
X1 value: 176
Memory Bus Access:
CPU 1 writes to address 220: 00000000000000000000000000000000

=====================Simulation Loop #380=====================
Start Cycle for CPU:1
Fetch stage flushed:
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 208
Data in rs1: 216
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 208
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 216
Start Cycle for CPU:2
Fetch stage flushed:
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 168
Data in rs1: 176
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 168
//////////////Memory Stage//////////////
Memory Access still Pending
///////Cpu Cycle Debug Statements///////
X1 value: 176
Memory Bus Access:
CPU 2 writes to address 320: 00000000000000000000000000000000

=====================Simulation Loop #381=====================
Start Cycle for CPU:1
Fetch stage flushed:
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 216
Start Cycle for CPU:2
Fetch stage flushed:
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 176

=====================Simulation Loop #382=====================
Start Cycle for CPU:1
Fetch stage flushed:
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 208
Start Cycle for CPU:2
Fetch stage flushed:
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 168

=====================Simulation Loop #383=====================
Start Cycle for CPU:1
Fetch stage flushed:
Control Hazard detected in: Execute
/////////////Execute Stage/////////////
Branch check: True
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 20
Data in rs2: -20
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 208
Start Cycle for CPU:2
Fetch stage flushed:
Control Hazard detected in: Execute
/////////////Execute Stage/////////////
Branch check: True
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 20
Data in rs2: -20
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 168

=====================Simulation Loop #384=====================
Start Cycle for CPU:1
Control Hazard detected in: Memory
//////////////Memory Stage//////////////
Next Instruction: PC = ALU result
///////Cpu Cycle Debug Statements///////
X1 value: 208
Start Cycle for CPU:2
Control Hazard detected in: Memory
//////////////Memory Stage//////////////
Next Instruction: PC = ALU result
///////Cpu Cycle Debug Statements///////
X1 value: 168

=====================Simulation Loop #385=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 208
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 168

=====================Simulation Loop #386=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 208
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 168

=====================Simulation Loop #387=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 240
Data in rs1: 208
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 240
///////Cpu Cycle Debug Statements///////
X1 value: 208
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 200
Data in rs1: 168
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 200
///////Cpu Cycle Debug Statements///////
X1 value: 168

=====================Simulation Loop #388=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
FP Memory Read Operation
///////Cpu Cycle Debug Statements///////
X1 value: 208
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
FP Memory Read Operation
///////Cpu Cycle Debug Statements///////
X1 value: 168
Memory Bus Access:
CPU 1 reads from address: 0x200: 0b00000000000000000000000000000000

=====================Simulation Loop #389=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 208
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 168
Memory Bus Access:
CPU 2 reads from address: 0x300: 0b00000000000000000000000000000000

=====================Simulation Loop #390=====================
Start Cycle for CPU:1
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 208
Start Cycle for CPU:2
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 168

=====================Simulation Loop #391=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 208
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 168

=====================Simulation Loop #392=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 208
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 168

=====================Simulation Loop #393=====================
Start Cycle for CPU:1
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 208
Start Cycle for CPU:2
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 168

=====================Simulation Loop #394=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001011011100011
Assembly Instruction: bne x1, x2, -20
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
///////Cpu Cycle Debug Statements///////
X1 value: 208
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001011011100011
Assembly Instruction: bne x1, x2, -20
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
///////Cpu Cycle Debug Statements///////
X1 value: 168

=====================Simulation Loop #395=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 200
Data in rs1: 208
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 200
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 544
Data To Store: 0
///////Cpu Cycle Debug Statements///////
X1 value: 208
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 160
Data in rs1: 168
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 160
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 800
Data To Store: 0
///////Cpu Cycle Debug Statements///////
X1 value: 168
Memory Bus Access:
CPU 1 writes to address 220: 00000000000000000000000000000000

=====================Simulation Loop #396=====================
Start Cycle for CPU:1
Fetch stage flushed:
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 200
Data in rs1: 208
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 200
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 208
Start Cycle for CPU:2
Fetch stage flushed:
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 160
Data in rs1: 168
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 160
//////////////Memory Stage//////////////
Memory Access still Pending
///////Cpu Cycle Debug Statements///////
X1 value: 168
Memory Bus Access:
CPU 2 writes to address 320: 00000000000000000000000000000000

=====================Simulation Loop #397=====================
Start Cycle for CPU:1
Fetch stage flushed:
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 208
Start Cycle for CPU:2
Fetch stage flushed:
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 168

=====================Simulation Loop #398=====================
Start Cycle for CPU:1
Fetch stage flushed:
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 200
Start Cycle for CPU:2
Fetch stage flushed:
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 160

=====================Simulation Loop #399=====================
Start Cycle for CPU:1
Fetch stage flushed:
Control Hazard detected in: Execute
/////////////Execute Stage/////////////
Branch check: True
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 20
Data in rs2: -20
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 200
Start Cycle for CPU:2
Fetch stage flushed:
Control Hazard detected in: Execute
/////////////Execute Stage/////////////
Branch check: True
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 20
Data in rs2: -20
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 160

=====================Simulation Loop #400=====================
Start Cycle for CPU:1
Control Hazard detected in: Memory
//////////////Memory Stage//////////////
Next Instruction: PC = ALU result
///////Cpu Cycle Debug Statements///////
X1 value: 200
Start Cycle for CPU:2
Control Hazard detected in: Memory
//////////////Memory Stage//////////////
Next Instruction: PC = ALU result
///////Cpu Cycle Debug Statements///////
X1 value: 160

=====================Simulation Loop #401=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 200
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 160

=====================Simulation Loop #402=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 200
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 160

=====================Simulation Loop #403=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 232
Data in rs1: 200
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 232
///////Cpu Cycle Debug Statements///////
X1 value: 200
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 192
Data in rs1: 160
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 192
///////Cpu Cycle Debug Statements///////
X1 value: 160

=====================Simulation Loop #404=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
FP Memory Read Operation
///////Cpu Cycle Debug Statements///////
X1 value: 200
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
FP Memory Read Operation
///////Cpu Cycle Debug Statements///////
X1 value: 160
Memory Bus Access:
CPU 1 reads from address: 0x200: 0b00000000000000000000000000000000

=====================Simulation Loop #405=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 200
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 160
Memory Bus Access:
CPU 2 reads from address: 0x300: 0b00000000000000000000000000000000

=====================Simulation Loop #406=====================
Start Cycle for CPU:1
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 200
Start Cycle for CPU:2
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 160

=====================Simulation Loop #407=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 200
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 160

=====================Simulation Loop #408=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 200
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 160

=====================Simulation Loop #409=====================
Start Cycle for CPU:1
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 200
Start Cycle for CPU:2
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 160

=====================Simulation Loop #410=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001011011100011
Assembly Instruction: bne x1, x2, -20
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
///////Cpu Cycle Debug Statements///////
X1 value: 200
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001011011100011
Assembly Instruction: bne x1, x2, -20
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
///////Cpu Cycle Debug Statements///////
X1 value: 160

=====================Simulation Loop #411=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 192
Data in rs1: 200
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 192
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 544
Data To Store: 0
///////Cpu Cycle Debug Statements///////
X1 value: 200
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 152
Data in rs1: 160
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 152
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 800
Data To Store: 0
///////Cpu Cycle Debug Statements///////
X1 value: 160
Memory Bus Access:
CPU 1 writes to address 220: 00000000000000000000000000000000

=====================Simulation Loop #412=====================
Start Cycle for CPU:1
Fetch stage flushed:
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 192
Data in rs1: 200
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 192
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 200
Start Cycle for CPU:2
Fetch stage flushed:
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 152
Data in rs1: 160
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 152
//////////////Memory Stage//////////////
Memory Access still Pending
///////Cpu Cycle Debug Statements///////
X1 value: 160
Memory Bus Access:
CPU 2 writes to address 320: 00000000000000000000000000000000

=====================Simulation Loop #413=====================
Start Cycle for CPU:1
Fetch stage flushed:
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 200
Start Cycle for CPU:2
Fetch stage flushed:
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 160

=====================Simulation Loop #414=====================
Start Cycle for CPU:1
Fetch stage flushed:
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 192
Start Cycle for CPU:2
Fetch stage flushed:
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 152

=====================Simulation Loop #415=====================
Start Cycle for CPU:1
Fetch stage flushed:
Control Hazard detected in: Execute
/////////////Execute Stage/////////////
Branch check: True
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 20
Data in rs2: -20
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 192
Start Cycle for CPU:2
Fetch stage flushed:
Control Hazard detected in: Execute
/////////////Execute Stage/////////////
Branch check: True
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 20
Data in rs2: -20
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 152

=====================Simulation Loop #416=====================
Start Cycle for CPU:1
Control Hazard detected in: Memory
//////////////Memory Stage//////////////
Next Instruction: PC = ALU result
///////Cpu Cycle Debug Statements///////
X1 value: 192
Start Cycle for CPU:2
Control Hazard detected in: Memory
//////////////Memory Stage//////////////
Next Instruction: PC = ALU result
///////Cpu Cycle Debug Statements///////
X1 value: 152

=====================Simulation Loop #417=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 192
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 152

=====================Simulation Loop #418=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 192
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 152

=====================Simulation Loop #419=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 224
Data in rs1: 192
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 224
///////Cpu Cycle Debug Statements///////
X1 value: 192
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 184
Data in rs1: 152
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 184
///////Cpu Cycle Debug Statements///////
X1 value: 152

=====================Simulation Loop #420=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
FP Memory Read Operation
///////Cpu Cycle Debug Statements///////
X1 value: 192
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
FP Memory Read Operation
///////Cpu Cycle Debug Statements///////
X1 value: 152
Memory Bus Access:
CPU 1 reads from address: 0x200: 0b00000000000000000000000000000000

=====================Simulation Loop #421=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 192
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 152
Memory Bus Access:
CPU 2 reads from address: 0x300: 0b00000000000000000000000000000000

=====================Simulation Loop #422=====================
Start Cycle for CPU:1
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 192
Start Cycle for CPU:2
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 152

=====================Simulation Loop #423=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 192
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 152

=====================Simulation Loop #424=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 192
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 152

=====================Simulation Loop #425=====================
Start Cycle for CPU:1
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 192
Start Cycle for CPU:2
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 152

=====================Simulation Loop #426=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001011011100011
Assembly Instruction: bne x1, x2, -20
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
///////Cpu Cycle Debug Statements///////
X1 value: 192
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001011011100011
Assembly Instruction: bne x1, x2, -20
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
///////Cpu Cycle Debug Statements///////
X1 value: 152

=====================Simulation Loop #427=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 184
Data in rs1: 192
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 184
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 544
Data To Store: 0
///////Cpu Cycle Debug Statements///////
X1 value: 192
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 144
Data in rs1: 152
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 144
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 800
Data To Store: 0
///////Cpu Cycle Debug Statements///////
X1 value: 152
Memory Bus Access:
CPU 1 writes to address 220: 00000000000000000000000000000000

=====================Simulation Loop #428=====================
Start Cycle for CPU:1
Fetch stage flushed:
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 184
Data in rs1: 192
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 184
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 192
Start Cycle for CPU:2
Fetch stage flushed:
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 144
Data in rs1: 152
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 144
//////////////Memory Stage//////////////
Memory Access still Pending
///////Cpu Cycle Debug Statements///////
X1 value: 152
Memory Bus Access:
CPU 2 writes to address 320: 00000000000000000000000000000000

=====================Simulation Loop #429=====================
Start Cycle for CPU:1
Fetch stage flushed:
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 192
Start Cycle for CPU:2
Fetch stage flushed:
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 152

=====================Simulation Loop #430=====================
Start Cycle for CPU:1
Fetch stage flushed:
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 184
Start Cycle for CPU:2
Fetch stage flushed:
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 144

=====================Simulation Loop #431=====================
Start Cycle for CPU:1
Fetch stage flushed:
Control Hazard detected in: Execute
/////////////Execute Stage/////////////
Branch check: True
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 20
Data in rs2: -20
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 184
Start Cycle for CPU:2
Fetch stage flushed:
Control Hazard detected in: Execute
/////////////Execute Stage/////////////
Branch check: True
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 20
Data in rs2: -20
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 144

=====================Simulation Loop #432=====================
Start Cycle for CPU:1
Control Hazard detected in: Memory
//////////////Memory Stage//////////////
Next Instruction: PC = ALU result
///////Cpu Cycle Debug Statements///////
X1 value: 184
Start Cycle for CPU:2
Control Hazard detected in: Memory
//////////////Memory Stage//////////////
Next Instruction: PC = ALU result
///////Cpu Cycle Debug Statements///////
X1 value: 144

=====================Simulation Loop #433=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 184
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 144

=====================Simulation Loop #434=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 184
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 144

=====================Simulation Loop #435=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 216
Data in rs1: 184
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 216
///////Cpu Cycle Debug Statements///////
X1 value: 184
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 176
Data in rs1: 144
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 176
///////Cpu Cycle Debug Statements///////
X1 value: 144

=====================Simulation Loop #436=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
FP Memory Read Operation
///////Cpu Cycle Debug Statements///////
X1 value: 184
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
FP Memory Read Operation
///////Cpu Cycle Debug Statements///////
X1 value: 144
Memory Bus Access:
CPU 1 reads from address: 0x200: 0b00000000000000000000000000000000

=====================Simulation Loop #437=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 184
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 144
Memory Bus Access:
CPU 2 reads from address: 0x300: 0b00000000000000000000000000000000

=====================Simulation Loop #438=====================
Start Cycle for CPU:1
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 184
Start Cycle for CPU:2
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 144

=====================Simulation Loop #439=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 184
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 144

=====================Simulation Loop #440=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 184
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 144

=====================Simulation Loop #441=====================
Start Cycle for CPU:1
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 184
Start Cycle for CPU:2
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 144

=====================Simulation Loop #442=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001011011100011
Assembly Instruction: bne x1, x2, -20
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
///////Cpu Cycle Debug Statements///////
X1 value: 184
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001011011100011
Assembly Instruction: bne x1, x2, -20
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
///////Cpu Cycle Debug Statements///////
X1 value: 144

=====================Simulation Loop #443=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 176
Data in rs1: 184
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 176
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 544
Data To Store: 0
///////Cpu Cycle Debug Statements///////
X1 value: 184
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 136
Data in rs1: 144
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 136
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 800
Data To Store: 0
///////Cpu Cycle Debug Statements///////
X1 value: 144
Memory Bus Access:
CPU 1 writes to address 220: 00000000000000000000000000000000

=====================Simulation Loop #444=====================
Start Cycle for CPU:1
Fetch stage flushed:
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 176
Data in rs1: 184
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 176
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 184
Start Cycle for CPU:2
Fetch stage flushed:
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 136
Data in rs1: 144
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 136
//////////////Memory Stage//////////////
Memory Access still Pending
///////Cpu Cycle Debug Statements///////
X1 value: 144
Memory Bus Access:
CPU 2 writes to address 320: 00000000000000000000000000000000

=====================Simulation Loop #445=====================
Start Cycle for CPU:1
Fetch stage flushed:
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 184
Start Cycle for CPU:2
Fetch stage flushed:
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 144

=====================Simulation Loop #446=====================
Start Cycle for CPU:1
Fetch stage flushed:
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 176
Start Cycle for CPU:2
Fetch stage flushed:
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 136

=====================Simulation Loop #447=====================
Start Cycle for CPU:1
Fetch stage flushed:
Control Hazard detected in: Execute
/////////////Execute Stage/////////////
Branch check: True
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 20
Data in rs2: -20
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 176
Start Cycle for CPU:2
Fetch stage flushed:
Control Hazard detected in: Execute
/////////////Execute Stage/////////////
Branch check: True
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 20
Data in rs2: -20
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 136

=====================Simulation Loop #448=====================
Start Cycle for CPU:1
Control Hazard detected in: Memory
//////////////Memory Stage//////////////
Next Instruction: PC = ALU result
///////Cpu Cycle Debug Statements///////
X1 value: 176
Start Cycle for CPU:2
Control Hazard detected in: Memory
//////////////Memory Stage//////////////
Next Instruction: PC = ALU result
///////Cpu Cycle Debug Statements///////
X1 value: 136

=====================Simulation Loop #449=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 176
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 136

=====================Simulation Loop #450=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 176
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 136

=====================Simulation Loop #451=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 208
Data in rs1: 176
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 208
///////Cpu Cycle Debug Statements///////
X1 value: 176
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 168
Data in rs1: 136
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 168
///////Cpu Cycle Debug Statements///////
X1 value: 136

=====================Simulation Loop #452=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
FP Memory Read Operation
///////Cpu Cycle Debug Statements///////
X1 value: 176
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
FP Memory Read Operation
///////Cpu Cycle Debug Statements///////
X1 value: 136
Memory Bus Access:
CPU 1 reads from address: 0x200: 0b00000000000000000000000000000000

=====================Simulation Loop #453=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 176
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 136
Memory Bus Access:
CPU 2 reads from address: 0x300: 0b00000000000000000000000000000000

=====================Simulation Loop #454=====================
Start Cycle for CPU:1
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 176
Start Cycle for CPU:2
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 136

=====================Simulation Loop #455=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 176
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 136

=====================Simulation Loop #456=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 176
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 136

=====================Simulation Loop #457=====================
Start Cycle for CPU:1
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 176
Start Cycle for CPU:2
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 136

=====================Simulation Loop #458=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001011011100011
Assembly Instruction: bne x1, x2, -20
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
///////Cpu Cycle Debug Statements///////
X1 value: 176
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001011011100011
Assembly Instruction: bne x1, x2, -20
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
///////Cpu Cycle Debug Statements///////
X1 value: 136

=====================Simulation Loop #459=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 168
Data in rs1: 176
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 168
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 544
Data To Store: 0
///////Cpu Cycle Debug Statements///////
X1 value: 176
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 128
Data in rs1: 136
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 128
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 800
Data To Store: 0
///////Cpu Cycle Debug Statements///////
X1 value: 136
Memory Bus Access:
CPU 1 writes to address 220: 00000000000000000000000000000000

=====================Simulation Loop #460=====================
Start Cycle for CPU:1
Fetch stage flushed:
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 168
Data in rs1: 176
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 168
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 176
Start Cycle for CPU:2
Fetch stage flushed:
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 128
Data in rs1: 136
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 128
//////////////Memory Stage//////////////
Memory Access still Pending
///////Cpu Cycle Debug Statements///////
X1 value: 136
Memory Bus Access:
CPU 2 writes to address 320: 00000000000000000000000000000000

=====================Simulation Loop #461=====================
Start Cycle for CPU:1
Fetch stage flushed:
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 176
Start Cycle for CPU:2
Fetch stage flushed:
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 136

=====================Simulation Loop #462=====================
Start Cycle for CPU:1
Fetch stage flushed:
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 168
Start Cycle for CPU:2
Fetch stage flushed:
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 128

=====================Simulation Loop #463=====================
Start Cycle for CPU:1
Fetch stage flushed:
Control Hazard detected in: Execute
/////////////Execute Stage/////////////
Branch check: True
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 20
Data in rs2: -20
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 168
Start Cycle for CPU:2
Fetch stage flushed:
Control Hazard detected in: Execute
/////////////Execute Stage/////////////
Branch check: True
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 20
Data in rs2: -20
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 128

=====================Simulation Loop #464=====================
Start Cycle for CPU:1
Control Hazard detected in: Memory
//////////////Memory Stage//////////////
Next Instruction: PC = ALU result
///////Cpu Cycle Debug Statements///////
X1 value: 168
Start Cycle for CPU:2
Control Hazard detected in: Memory
//////////////Memory Stage//////////////
Next Instruction: PC = ALU result
///////Cpu Cycle Debug Statements///////
X1 value: 128

=====================Simulation Loop #465=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 168
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 128

=====================Simulation Loop #466=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 168
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 128

=====================Simulation Loop #467=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 200
Data in rs1: 168
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 200
///////Cpu Cycle Debug Statements///////
X1 value: 168
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 160
Data in rs1: 128
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 160
///////Cpu Cycle Debug Statements///////
X1 value: 128

=====================Simulation Loop #468=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
FP Memory Read Operation
///////Cpu Cycle Debug Statements///////
X1 value: 168
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
FP Memory Read Operation
///////Cpu Cycle Debug Statements///////
X1 value: 128
Memory Bus Access:
CPU 1 reads from address: 0x200: 0b00000000000000000000000000000000

=====================Simulation Loop #469=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 168
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 128
Memory Bus Access:
CPU 2 reads from address: 0x300: 0b00000000000000000000000000000000

=====================Simulation Loop #470=====================
Start Cycle for CPU:1
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 168
Start Cycle for CPU:2
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 128

=====================Simulation Loop #471=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 168
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 128

=====================Simulation Loop #472=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 168
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 128

=====================Simulation Loop #473=====================
Start Cycle for CPU:1
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 168
Start Cycle for CPU:2
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 128

=====================Simulation Loop #474=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001011011100011
Assembly Instruction: bne x1, x2, -20
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
///////Cpu Cycle Debug Statements///////
X1 value: 168
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001011011100011
Assembly Instruction: bne x1, x2, -20
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
///////Cpu Cycle Debug Statements///////
X1 value: 128

=====================Simulation Loop #475=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 160
Data in rs1: 168
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 160
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 544
Data To Store: 0
///////Cpu Cycle Debug Statements///////
X1 value: 168
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 120
Data in rs1: 128
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 120
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 800
Data To Store: 0
///////Cpu Cycle Debug Statements///////
X1 value: 128
Memory Bus Access:
CPU 1 writes to address 220: 00000000000000000000000000000000

=====================Simulation Loop #476=====================
Start Cycle for CPU:1
Fetch stage flushed:
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 160
Data in rs1: 168
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 160
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 168
Start Cycle for CPU:2
Fetch stage flushed:
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 120
Data in rs1: 128
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 120
//////////////Memory Stage//////////////
Memory Access still Pending
///////Cpu Cycle Debug Statements///////
X1 value: 128
Memory Bus Access:
CPU 2 writes to address 320: 00000000000000000000000000000000

=====================Simulation Loop #477=====================
Start Cycle for CPU:1
Fetch stage flushed:
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 168
Start Cycle for CPU:2
Fetch stage flushed:
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 128

=====================Simulation Loop #478=====================
Start Cycle for CPU:1
Fetch stage flushed:
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 160
Start Cycle for CPU:2
Fetch stage flushed:
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 120

=====================Simulation Loop #479=====================
Start Cycle for CPU:1
Fetch stage flushed:
Control Hazard detected in: Execute
/////////////Execute Stage/////////////
Branch check: True
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 20
Data in rs2: -20
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 160
Start Cycle for CPU:2
Fetch stage flushed:
Control Hazard detected in: Execute
/////////////Execute Stage/////////////
Branch check: True
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 20
Data in rs2: -20
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 120

=====================Simulation Loop #480=====================
Start Cycle for CPU:1
Control Hazard detected in: Memory
//////////////Memory Stage//////////////
Next Instruction: PC = ALU result
///////Cpu Cycle Debug Statements///////
X1 value: 160
Start Cycle for CPU:2
Control Hazard detected in: Memory
//////////////Memory Stage//////////////
Next Instruction: PC = ALU result
///////Cpu Cycle Debug Statements///////
X1 value: 120

=====================Simulation Loop #481=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 160
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 120

=====================Simulation Loop #482=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 160
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 120

=====================Simulation Loop #483=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 192
Data in rs1: 160
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 192
///////Cpu Cycle Debug Statements///////
X1 value: 160
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 152
Data in rs1: 120
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 152
///////Cpu Cycle Debug Statements///////
X1 value: 120

=====================Simulation Loop #484=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
FP Memory Read Operation
///////Cpu Cycle Debug Statements///////
X1 value: 160
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
FP Memory Read Operation
///////Cpu Cycle Debug Statements///////
X1 value: 120
Memory Bus Access:
CPU 1 reads from address: 0x200: 0b00000000000000000000000000000000

=====================Simulation Loop #485=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 160
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 120
Memory Bus Access:
CPU 2 reads from address: 0x300: 0b00000000000000000000000000000000

=====================Simulation Loop #486=====================
Start Cycle for CPU:1
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 160
Start Cycle for CPU:2
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 120

=====================Simulation Loop #487=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 160
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 120

=====================Simulation Loop #488=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 160
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 120

=====================Simulation Loop #489=====================
Start Cycle for CPU:1
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 160
Start Cycle for CPU:2
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 120

=====================Simulation Loop #490=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001011011100011
Assembly Instruction: bne x1, x2, -20
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
///////Cpu Cycle Debug Statements///////
X1 value: 160
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001011011100011
Assembly Instruction: bne x1, x2, -20
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
///////Cpu Cycle Debug Statements///////
X1 value: 120

=====================Simulation Loop #491=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 152
Data in rs1: 160
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 152
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 544
Data To Store: 0
///////Cpu Cycle Debug Statements///////
X1 value: 160
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 112
Data in rs1: 120
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 112
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 800
Data To Store: 0
///////Cpu Cycle Debug Statements///////
X1 value: 120
Memory Bus Access:
CPU 1 writes to address 220: 00000000000000000000000000000000

=====================Simulation Loop #492=====================
Start Cycle for CPU:1
Fetch stage flushed:
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 152
Data in rs1: 160
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 152
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 160
Start Cycle for CPU:2
Fetch stage flushed:
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 112
Data in rs1: 120
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 112
//////////////Memory Stage//////////////
Memory Access still Pending
///////Cpu Cycle Debug Statements///////
X1 value: 120
Memory Bus Access:
CPU 2 writes to address 320: 00000000000000000000000000000000

=====================Simulation Loop #493=====================
Start Cycle for CPU:1
Fetch stage flushed:
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 160
Start Cycle for CPU:2
Fetch stage flushed:
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 120

=====================Simulation Loop #494=====================
Start Cycle for CPU:1
Fetch stage flushed:
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 152
Start Cycle for CPU:2
Fetch stage flushed:
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 112

=====================Simulation Loop #495=====================
Start Cycle for CPU:1
Fetch stage flushed:
Control Hazard detected in: Execute
/////////////Execute Stage/////////////
Branch check: True
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 20
Data in rs2: -20
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 152
Start Cycle for CPU:2
Fetch stage flushed:
Control Hazard detected in: Execute
/////////////Execute Stage/////////////
Branch check: True
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 20
Data in rs2: -20
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 112

=====================Simulation Loop #496=====================
Start Cycle for CPU:1
Control Hazard detected in: Memory
//////////////Memory Stage//////////////
Next Instruction: PC = ALU result
///////Cpu Cycle Debug Statements///////
X1 value: 152
Start Cycle for CPU:2
Control Hazard detected in: Memory
//////////////Memory Stage//////////////
Next Instruction: PC = ALU result
///////Cpu Cycle Debug Statements///////
X1 value: 112

=====================Simulation Loop #497=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 152
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 112

=====================Simulation Loop #498=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 152
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 112

=====================Simulation Loop #499=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 184
Data in rs1: 152
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 184
///////Cpu Cycle Debug Statements///////
X1 value: 152
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 144
Data in rs1: 112
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 144
///////Cpu Cycle Debug Statements///////
X1 value: 112

=====================Simulation Loop #500=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
FP Memory Read Operation
///////Cpu Cycle Debug Statements///////
X1 value: 152
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
FP Memory Read Operation
///////Cpu Cycle Debug Statements///////
X1 value: 112
Memory Bus Access:
CPU 1 reads from address: 0x200: 0b00000000000000000000000000000000

=====================Simulation Loop #501=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 152
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 112
Memory Bus Access:
CPU 2 reads from address: 0x300: 0b00000000000000000000000000000000

=====================Simulation Loop #502=====================
Start Cycle for CPU:1
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 152
Start Cycle for CPU:2
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 112

=====================Simulation Loop #503=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 152
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 112

=====================Simulation Loop #504=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 152
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 112

=====================Simulation Loop #505=====================
Start Cycle for CPU:1
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 152
Start Cycle for CPU:2
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 112

=====================Simulation Loop #506=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001011011100011
Assembly Instruction: bne x1, x2, -20
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
///////Cpu Cycle Debug Statements///////
X1 value: 152
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001011011100011
Assembly Instruction: bne x1, x2, -20
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
///////Cpu Cycle Debug Statements///////
X1 value: 112

=====================Simulation Loop #507=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 144
Data in rs1: 152
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 144
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 544
Data To Store: 0
///////Cpu Cycle Debug Statements///////
X1 value: 152
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 104
Data in rs1: 112
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 104
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 800
Data To Store: 0
///////Cpu Cycle Debug Statements///////
X1 value: 112
Memory Bus Access:
CPU 1 writes to address 220: 00000000000000000000000000000000

=====================Simulation Loop #508=====================
Start Cycle for CPU:1
Fetch stage flushed:
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 144
Data in rs1: 152
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 144
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 152
Start Cycle for CPU:2
Fetch stage flushed:
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 104
Data in rs1: 112
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 104
//////////////Memory Stage//////////////
Memory Access still Pending
///////Cpu Cycle Debug Statements///////
X1 value: 112
Memory Bus Access:
CPU 2 writes to address 320: 00000000000000000000000000000000

=====================Simulation Loop #509=====================
Start Cycle for CPU:1
Fetch stage flushed:
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 152
Start Cycle for CPU:2
Fetch stage flushed:
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 112

=====================Simulation Loop #510=====================
Start Cycle for CPU:1
Fetch stage flushed:
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 144
Start Cycle for CPU:2
Fetch stage flushed:
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 104

=====================Simulation Loop #511=====================
Start Cycle for CPU:1
Fetch stage flushed:
Control Hazard detected in: Execute
/////////////Execute Stage/////////////
Branch check: True
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 20
Data in rs2: -20
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 144
Start Cycle for CPU:2
Fetch stage flushed:
Control Hazard detected in: Execute
/////////////Execute Stage/////////////
Branch check: True
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 20
Data in rs2: -20
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 104

=====================Simulation Loop #512=====================
Start Cycle for CPU:1
Control Hazard detected in: Memory
//////////////Memory Stage//////////////
Next Instruction: PC = ALU result
///////Cpu Cycle Debug Statements///////
X1 value: 144
Start Cycle for CPU:2
Control Hazard detected in: Memory
//////////////Memory Stage//////////////
Next Instruction: PC = ALU result
///////Cpu Cycle Debug Statements///////
X1 value: 104

=====================Simulation Loop #513=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 144
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 104

=====================Simulation Loop #514=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 144
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 104

=====================Simulation Loop #515=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 176
Data in rs1: 144
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 176
///////Cpu Cycle Debug Statements///////
X1 value: 144
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 136
Data in rs1: 104
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 136
///////Cpu Cycle Debug Statements///////
X1 value: 104

=====================Simulation Loop #516=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
FP Memory Read Operation
///////Cpu Cycle Debug Statements///////
X1 value: 144
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
FP Memory Read Operation
///////Cpu Cycle Debug Statements///////
X1 value: 104
Memory Bus Access:
CPU 1 reads from address: 0x200: 0b00000000000000000000000000000000

=====================Simulation Loop #517=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 144
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 104
Memory Bus Access:
CPU 2 reads from address: 0x300: 0b00000000000000000000000000000000

=====================Simulation Loop #518=====================
Start Cycle for CPU:1
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 144
Start Cycle for CPU:2
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 104

=====================Simulation Loop #519=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 144
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 104

=====================Simulation Loop #520=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 144
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 104

=====================Simulation Loop #521=====================
Start Cycle for CPU:1
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 144
Start Cycle for CPU:2
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 104

=====================Simulation Loop #522=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001011011100011
Assembly Instruction: bne x1, x2, -20
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
///////Cpu Cycle Debug Statements///////
X1 value: 144
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001011011100011
Assembly Instruction: bne x1, x2, -20
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
///////Cpu Cycle Debug Statements///////
X1 value: 104

=====================Simulation Loop #523=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 136
Data in rs1: 144
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 136
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 544
Data To Store: 0
///////Cpu Cycle Debug Statements///////
X1 value: 144
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 96
Data in rs1: 104
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 96
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 800
Data To Store: 0
///////Cpu Cycle Debug Statements///////
X1 value: 104
Memory Bus Access:
CPU 1 writes to address 220: 00000000000000000000000000000000

=====================Simulation Loop #524=====================
Start Cycle for CPU:1
Fetch stage flushed:
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 136
Data in rs1: 144
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 136
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 144
Start Cycle for CPU:2
Fetch stage flushed:
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 96
Data in rs1: 104
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 96
//////////////Memory Stage//////////////
Memory Access still Pending
///////Cpu Cycle Debug Statements///////
X1 value: 104
Memory Bus Access:
CPU 2 writes to address 320: 00000000000000000000000000000000

=====================Simulation Loop #525=====================
Start Cycle for CPU:1
Fetch stage flushed:
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 144
Start Cycle for CPU:2
Fetch stage flushed:
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 104

=====================Simulation Loop #526=====================
Start Cycle for CPU:1
Fetch stage flushed:
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 136
Start Cycle for CPU:2
Fetch stage flushed:
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 96

=====================Simulation Loop #527=====================
Start Cycle for CPU:1
Fetch stage flushed:
Control Hazard detected in: Execute
/////////////Execute Stage/////////////
Branch check: True
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 20
Data in rs2: -20
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 136
Start Cycle for CPU:2
Fetch stage flushed:
Control Hazard detected in: Execute
/////////////Execute Stage/////////////
Branch check: True
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 20
Data in rs2: -20
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 96

=====================Simulation Loop #528=====================
Start Cycle for CPU:1
Control Hazard detected in: Memory
//////////////Memory Stage//////////////
Next Instruction: PC = ALU result
///////Cpu Cycle Debug Statements///////
X1 value: 136
Start Cycle for CPU:2
Control Hazard detected in: Memory
//////////////Memory Stage//////////////
Next Instruction: PC = ALU result
///////Cpu Cycle Debug Statements///////
X1 value: 96

=====================Simulation Loop #529=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 136
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 96

=====================Simulation Loop #530=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 136
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 96

=====================Simulation Loop #531=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 168
Data in rs1: 136
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 168
///////Cpu Cycle Debug Statements///////
X1 value: 136
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 128
Data in rs1: 96
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 128
///////Cpu Cycle Debug Statements///////
X1 value: 96

=====================Simulation Loop #532=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
FP Memory Read Operation
///////Cpu Cycle Debug Statements///////
X1 value: 136
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
FP Memory Read Operation
///////Cpu Cycle Debug Statements///////
X1 value: 96
Memory Bus Access:
CPU 1 reads from address: 0x200: 0b00000000000000000000000000000000

=====================Simulation Loop #533=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 136
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 96
Memory Bus Access:
CPU 2 reads from address: 0x300: 0b00000000000000000000000000000000

=====================Simulation Loop #534=====================
Start Cycle for CPU:1
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 136
Start Cycle for CPU:2
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 96

=====================Simulation Loop #535=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 136
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 96

=====================Simulation Loop #536=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 136
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 96

=====================Simulation Loop #537=====================
Start Cycle for CPU:1
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 136
Start Cycle for CPU:2
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 96

=====================Simulation Loop #538=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001011011100011
Assembly Instruction: bne x1, x2, -20
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
///////Cpu Cycle Debug Statements///////
X1 value: 136
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001011011100011
Assembly Instruction: bne x1, x2, -20
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
///////Cpu Cycle Debug Statements///////
X1 value: 96

=====================Simulation Loop #539=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 128
Data in rs1: 136
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 128
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 544
Data To Store: 0
///////Cpu Cycle Debug Statements///////
X1 value: 136
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 88
Data in rs1: 96
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 88
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 800
Data To Store: 0
///////Cpu Cycle Debug Statements///////
X1 value: 96
Memory Bus Access:
CPU 1 writes to address 220: 00000000000000000000000000000000

=====================Simulation Loop #540=====================
Start Cycle for CPU:1
Fetch stage flushed:
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 128
Data in rs1: 136
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 128
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 136
Start Cycle for CPU:2
Fetch stage flushed:
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 88
Data in rs1: 96
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 88
//////////////Memory Stage//////////////
Memory Access still Pending
///////Cpu Cycle Debug Statements///////
X1 value: 96
Memory Bus Access:
CPU 2 writes to address 320: 00000000000000000000000000000000

=====================Simulation Loop #541=====================
Start Cycle for CPU:1
Fetch stage flushed:
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 136
Start Cycle for CPU:2
Fetch stage flushed:
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 96

=====================Simulation Loop #542=====================
Start Cycle for CPU:1
Fetch stage flushed:
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 128
Start Cycle for CPU:2
Fetch stage flushed:
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 88

=====================Simulation Loop #543=====================
Start Cycle for CPU:1
Fetch stage flushed:
Control Hazard detected in: Execute
/////////////Execute Stage/////////////
Branch check: True
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 20
Data in rs2: -20
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 128
Start Cycle for CPU:2
Fetch stage flushed:
Control Hazard detected in: Execute
/////////////Execute Stage/////////////
Branch check: True
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 20
Data in rs2: -20
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 88

=====================Simulation Loop #544=====================
Start Cycle for CPU:1
Control Hazard detected in: Memory
//////////////Memory Stage//////////////
Next Instruction: PC = ALU result
///////Cpu Cycle Debug Statements///////
X1 value: 128
Start Cycle for CPU:2
Control Hazard detected in: Memory
//////////////Memory Stage//////////////
Next Instruction: PC = ALU result
///////Cpu Cycle Debug Statements///////
X1 value: 88

=====================Simulation Loop #545=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 128
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 88

=====================Simulation Loop #546=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 128
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 88

=====================Simulation Loop #547=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 160
Data in rs1: 128
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 160
///////Cpu Cycle Debug Statements///////
X1 value: 128
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 120
Data in rs1: 88
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 120
///////Cpu Cycle Debug Statements///////
X1 value: 88

=====================Simulation Loop #548=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
FP Memory Read Operation
///////Cpu Cycle Debug Statements///////
X1 value: 128
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
FP Memory Read Operation
///////Cpu Cycle Debug Statements///////
X1 value: 88
Memory Bus Access:
CPU 1 reads from address: 0x200: 0b00000000000000000000000000000000

=====================Simulation Loop #549=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 128
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 88
Memory Bus Access:
CPU 2 reads from address: 0x300: 0b00000000000000000000000000000000

=====================Simulation Loop #550=====================
Start Cycle for CPU:1
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 128
Start Cycle for CPU:2
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 88

=====================Simulation Loop #551=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 128
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 88

=====================Simulation Loop #552=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 128
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 88

=====================Simulation Loop #553=====================
Start Cycle for CPU:1
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 128
Start Cycle for CPU:2
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 88

=====================Simulation Loop #554=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001011011100011
Assembly Instruction: bne x1, x2, -20
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
///////Cpu Cycle Debug Statements///////
X1 value: 128
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001011011100011
Assembly Instruction: bne x1, x2, -20
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
///////Cpu Cycle Debug Statements///////
X1 value: 88

=====================Simulation Loop #555=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 120
Data in rs1: 128
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 120
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 544
Data To Store: 0
///////Cpu Cycle Debug Statements///////
X1 value: 128
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 80
Data in rs1: 88
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 80
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 800
Data To Store: 0
///////Cpu Cycle Debug Statements///////
X1 value: 88
Memory Bus Access:
CPU 1 writes to address 220: 00000000000000000000000000000000

=====================Simulation Loop #556=====================
Start Cycle for CPU:1
Fetch stage flushed:
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 120
Data in rs1: 128
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 120
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 128
Start Cycle for CPU:2
Fetch stage flushed:
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 80
Data in rs1: 88
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 80
//////////////Memory Stage//////////////
Memory Access still Pending
///////Cpu Cycle Debug Statements///////
X1 value: 88
Memory Bus Access:
CPU 2 writes to address 320: 00000000000000000000000000000000

=====================Simulation Loop #557=====================
Start Cycle for CPU:1
Fetch stage flushed:
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 128
Start Cycle for CPU:2
Fetch stage flushed:
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 88

=====================Simulation Loop #558=====================
Start Cycle for CPU:1
Fetch stage flushed:
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 120
Start Cycle for CPU:2
Fetch stage flushed:
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 80

=====================Simulation Loop #559=====================
Start Cycle for CPU:1
Fetch stage flushed:
Control Hazard detected in: Execute
/////////////Execute Stage/////////////
Branch check: True
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 20
Data in rs2: -20
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 120
Start Cycle for CPU:2
Fetch stage flushed:
Control Hazard detected in: Execute
/////////////Execute Stage/////////////
Branch check: True
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 20
Data in rs2: -20
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 80

=====================Simulation Loop #560=====================
Start Cycle for CPU:1
Control Hazard detected in: Memory
//////////////Memory Stage//////////////
Next Instruction: PC = ALU result
///////Cpu Cycle Debug Statements///////
X1 value: 120
Start Cycle for CPU:2
Control Hazard detected in: Memory
//////////////Memory Stage//////////////
Next Instruction: PC = ALU result
///////Cpu Cycle Debug Statements///////
X1 value: 80

=====================Simulation Loop #561=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 120
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 80

=====================Simulation Loop #562=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 120
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 80

=====================Simulation Loop #563=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 152
Data in rs1: 120
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 152
///////Cpu Cycle Debug Statements///////
X1 value: 120
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 112
Data in rs1: 80
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 112
///////Cpu Cycle Debug Statements///////
X1 value: 80

=====================Simulation Loop #564=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
FP Memory Read Operation
///////Cpu Cycle Debug Statements///////
X1 value: 120
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
FP Memory Read Operation
///////Cpu Cycle Debug Statements///////
X1 value: 80
Memory Bus Access:
CPU 1 reads from address: 0x200: 0b00000000000000000000000000000000

=====================Simulation Loop #565=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 120
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 80
Memory Bus Access:
CPU 2 reads from address: 0x300: 0b00000000000000000000000000000000

=====================Simulation Loop #566=====================
Start Cycle for CPU:1
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 120
Start Cycle for CPU:2
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 80

=====================Simulation Loop #567=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 120
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 80

=====================Simulation Loop #568=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 120
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 80

=====================Simulation Loop #569=====================
Start Cycle for CPU:1
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 120
Start Cycle for CPU:2
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 80

=====================Simulation Loop #570=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001011011100011
Assembly Instruction: bne x1, x2, -20
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
///////Cpu Cycle Debug Statements///////
X1 value: 120
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001011011100011
Assembly Instruction: bne x1, x2, -20
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
///////Cpu Cycle Debug Statements///////
X1 value: 80

=====================Simulation Loop #571=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 112
Data in rs1: 120
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 112
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 544
Data To Store: 0
///////Cpu Cycle Debug Statements///////
X1 value: 120
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 72
Data in rs1: 80
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 72
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 800
Data To Store: 0
///////Cpu Cycle Debug Statements///////
X1 value: 80
Memory Bus Access:
CPU 1 writes to address 220: 00000000000000000000000000000000

=====================Simulation Loop #572=====================
Start Cycle for CPU:1
Fetch stage flushed:
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 112
Data in rs1: 120
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 112
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 120
Start Cycle for CPU:2
Fetch stage flushed:
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 72
Data in rs1: 80
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 72
//////////////Memory Stage//////////////
Memory Access still Pending
///////Cpu Cycle Debug Statements///////
X1 value: 80
Memory Bus Access:
CPU 2 writes to address 320: 00000000000000000000000000000000

=====================Simulation Loop #573=====================
Start Cycle for CPU:1
Fetch stage flushed:
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 120
Start Cycle for CPU:2
Fetch stage flushed:
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 80

=====================Simulation Loop #574=====================
Start Cycle for CPU:1
Fetch stage flushed:
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 112
Start Cycle for CPU:2
Fetch stage flushed:
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 72

=====================Simulation Loop #575=====================
Start Cycle for CPU:1
Fetch stage flushed:
Control Hazard detected in: Execute
/////////////Execute Stage/////////////
Branch check: True
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 20
Data in rs2: -20
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 112
Start Cycle for CPU:2
Fetch stage flushed:
Control Hazard detected in: Execute
/////////////Execute Stage/////////////
Branch check: True
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 20
Data in rs2: -20
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 72

=====================Simulation Loop #576=====================
Start Cycle for CPU:1
Control Hazard detected in: Memory
//////////////Memory Stage//////////////
Next Instruction: PC = ALU result
///////Cpu Cycle Debug Statements///////
X1 value: 112
Start Cycle for CPU:2
Control Hazard detected in: Memory
//////////////Memory Stage//////////////
Next Instruction: PC = ALU result
///////Cpu Cycle Debug Statements///////
X1 value: 72

=====================Simulation Loop #577=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 112
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 72

=====================Simulation Loop #578=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 112
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 72

=====================Simulation Loop #579=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 144
Data in rs1: 112
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 144
///////Cpu Cycle Debug Statements///////
X1 value: 112
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 104
Data in rs1: 72
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 104
///////Cpu Cycle Debug Statements///////
X1 value: 72

=====================Simulation Loop #580=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
FP Memory Read Operation
///////Cpu Cycle Debug Statements///////
X1 value: 112
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
FP Memory Read Operation
///////Cpu Cycle Debug Statements///////
X1 value: 72
Memory Bus Access:
CPU 1 reads from address: 0x200: 0b00000000000000000000000000000000

=====================Simulation Loop #581=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 112
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 72
Memory Bus Access:
CPU 2 reads from address: 0x300: 0b00000000000000000000000000000000

=====================Simulation Loop #582=====================
Start Cycle for CPU:1
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 112
Start Cycle for CPU:2
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 72

=====================Simulation Loop #583=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 112
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 72

=====================Simulation Loop #584=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 112
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 72

=====================Simulation Loop #585=====================
Start Cycle for CPU:1
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 112
Start Cycle for CPU:2
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 72

=====================Simulation Loop #586=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001011011100011
Assembly Instruction: bne x1, x2, -20
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
///////Cpu Cycle Debug Statements///////
X1 value: 112
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001011011100011
Assembly Instruction: bne x1, x2, -20
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
///////Cpu Cycle Debug Statements///////
X1 value: 72

=====================Simulation Loop #587=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 104
Data in rs1: 112
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 104
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 544
Data To Store: 0
///////Cpu Cycle Debug Statements///////
X1 value: 112
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 64
Data in rs1: 72
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 64
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 800
Data To Store: 0
///////Cpu Cycle Debug Statements///////
X1 value: 72
Memory Bus Access:
CPU 1 writes to address 220: 00000000000000000000000000000000

=====================Simulation Loop #588=====================
Start Cycle for CPU:1
Fetch stage flushed:
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 104
Data in rs1: 112
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 104
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 112
Start Cycle for CPU:2
Fetch stage flushed:
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 64
Data in rs1: 72
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 64
//////////////Memory Stage//////////////
Memory Access still Pending
///////Cpu Cycle Debug Statements///////
X1 value: 72
Memory Bus Access:
CPU 2 writes to address 320: 00000000000000000000000000000000

=====================Simulation Loop #589=====================
Start Cycle for CPU:1
Fetch stage flushed:
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 112
Start Cycle for CPU:2
Fetch stage flushed:
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 72

=====================Simulation Loop #590=====================
Start Cycle for CPU:1
Fetch stage flushed:
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 104
Start Cycle for CPU:2
Fetch stage flushed:
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 64

=====================Simulation Loop #591=====================
Start Cycle for CPU:1
Fetch stage flushed:
Control Hazard detected in: Execute
/////////////Execute Stage/////////////
Branch check: True
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 20
Data in rs2: -20
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 104
Start Cycle for CPU:2
Fetch stage flushed:
Control Hazard detected in: Execute
/////////////Execute Stage/////////////
Branch check: True
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 20
Data in rs2: -20
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 64

=====================Simulation Loop #592=====================
Start Cycle for CPU:1
Control Hazard detected in: Memory
//////////////Memory Stage//////////////
Next Instruction: PC = ALU result
///////Cpu Cycle Debug Statements///////
X1 value: 104
Start Cycle for CPU:2
Control Hazard detected in: Memory
//////////////Memory Stage//////////////
Next Instruction: PC = ALU result
///////Cpu Cycle Debug Statements///////
X1 value: 64

=====================Simulation Loop #593=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 104
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 64

=====================Simulation Loop #594=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 104
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 64

=====================Simulation Loop #595=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 136
Data in rs1: 104
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 136
///////Cpu Cycle Debug Statements///////
X1 value: 104
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 96
Data in rs1: 64
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 96
///////Cpu Cycle Debug Statements///////
X1 value: 64

=====================Simulation Loop #596=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
FP Memory Read Operation
///////Cpu Cycle Debug Statements///////
X1 value: 104
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
FP Memory Read Operation
///////Cpu Cycle Debug Statements///////
X1 value: 64
Memory Bus Access:
CPU 1 reads from address: 0x200: 0b00000000000000000000000000000000

=====================Simulation Loop #597=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 104
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 64
Memory Bus Access:
CPU 2 reads from address: 0x300: 0b00000000000000000000000000000000

=====================Simulation Loop #598=====================
Start Cycle for CPU:1
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 104
Start Cycle for CPU:2
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 64

=====================Simulation Loop #599=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 104
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 64

=====================Simulation Loop #600=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 104
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 64

=====================Simulation Loop #601=====================
Start Cycle for CPU:1
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 104
Start Cycle for CPU:2
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 64

=====================Simulation Loop #602=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001011011100011
Assembly Instruction: bne x1, x2, -20
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
///////Cpu Cycle Debug Statements///////
X1 value: 104
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001011011100011
Assembly Instruction: bne x1, x2, -20
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
///////Cpu Cycle Debug Statements///////
X1 value: 64

=====================Simulation Loop #603=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 96
Data in rs1: 104
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 96
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 544
Data To Store: 0
///////Cpu Cycle Debug Statements///////
X1 value: 104
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 56
Data in rs1: 64
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 56
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 800
Data To Store: 0
///////Cpu Cycle Debug Statements///////
X1 value: 64
Memory Bus Access:
CPU 1 writes to address 220: 00000000000000000000000000000000

=====================Simulation Loop #604=====================
Start Cycle for CPU:1
Fetch stage flushed:
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 96
Data in rs1: 104
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 96
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 104
Start Cycle for CPU:2
Fetch stage flushed:
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 56
Data in rs1: 64
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 56
//////////////Memory Stage//////////////
Memory Access still Pending
///////Cpu Cycle Debug Statements///////
X1 value: 64
Memory Bus Access:
CPU 2 writes to address 320: 00000000000000000000000000000000

=====================Simulation Loop #605=====================
Start Cycle for CPU:1
Fetch stage flushed:
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 104
Start Cycle for CPU:2
Fetch stage flushed:
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 64

=====================Simulation Loop #606=====================
Start Cycle for CPU:1
Fetch stage flushed:
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 96
Start Cycle for CPU:2
Fetch stage flushed:
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 56

=====================Simulation Loop #607=====================
Start Cycle for CPU:1
Fetch stage flushed:
Control Hazard detected in: Execute
/////////////Execute Stage/////////////
Branch check: True
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 20
Data in rs2: -20
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 96
Start Cycle for CPU:2
Fetch stage flushed:
Control Hazard detected in: Execute
/////////////Execute Stage/////////////
Branch check: True
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 20
Data in rs2: -20
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 56

=====================Simulation Loop #608=====================
Start Cycle for CPU:1
Control Hazard detected in: Memory
//////////////Memory Stage//////////////
Next Instruction: PC = ALU result
///////Cpu Cycle Debug Statements///////
X1 value: 96
Start Cycle for CPU:2
Control Hazard detected in: Memory
//////////////Memory Stage//////////////
Next Instruction: PC = ALU result
///////Cpu Cycle Debug Statements///////
X1 value: 56

=====================Simulation Loop #609=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 96
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 56

=====================Simulation Loop #610=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 96
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 56

=====================Simulation Loop #611=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 128
Data in rs1: 96
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 128
///////Cpu Cycle Debug Statements///////
X1 value: 96
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 88
Data in rs1: 56
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 88
///////Cpu Cycle Debug Statements///////
X1 value: 56

=====================Simulation Loop #612=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
FP Memory Read Operation
///////Cpu Cycle Debug Statements///////
X1 value: 96
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
FP Memory Read Operation
///////Cpu Cycle Debug Statements///////
X1 value: 56
Memory Bus Access:
CPU 1 reads from address: 0x200: 0b00000000000000000000000000000000

=====================Simulation Loop #613=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 96
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 56
Memory Bus Access:
CPU 2 reads from address: 0x300: 0b00000000000000000000000000000000

=====================Simulation Loop #614=====================
Start Cycle for CPU:1
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 96
Start Cycle for CPU:2
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 56

=====================Simulation Loop #615=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 96
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 56

=====================Simulation Loop #616=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 96
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 56

=====================Simulation Loop #617=====================
Start Cycle for CPU:1
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 96
Start Cycle for CPU:2
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 56

=====================Simulation Loop #618=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001011011100011
Assembly Instruction: bne x1, x2, -20
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
///////Cpu Cycle Debug Statements///////
X1 value: 96
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001011011100011
Assembly Instruction: bne x1, x2, -20
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
///////Cpu Cycle Debug Statements///////
X1 value: 56

=====================Simulation Loop #619=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 88
Data in rs1: 96
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 88
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 544
Data To Store: 0
///////Cpu Cycle Debug Statements///////
X1 value: 96
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 48
Data in rs1: 56
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 48
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 800
Data To Store: 0
///////Cpu Cycle Debug Statements///////
X1 value: 56
Memory Bus Access:
CPU 1 writes to address 220: 00000000000000000000000000000000

=====================Simulation Loop #620=====================
Start Cycle for CPU:1
Fetch stage flushed:
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 88
Data in rs1: 96
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 88
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 96
Start Cycle for CPU:2
Fetch stage flushed:
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 48
Data in rs1: 56
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 48
//////////////Memory Stage//////////////
Memory Access still Pending
///////Cpu Cycle Debug Statements///////
X1 value: 56
Memory Bus Access:
CPU 2 writes to address 320: 00000000000000000000000000000000

=====================Simulation Loop #621=====================
Start Cycle for CPU:1
Fetch stage flushed:
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 96
Start Cycle for CPU:2
Fetch stage flushed:
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 56

=====================Simulation Loop #622=====================
Start Cycle for CPU:1
Fetch stage flushed:
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 88
Start Cycle for CPU:2
Fetch stage flushed:
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 48

=====================Simulation Loop #623=====================
Start Cycle for CPU:1
Fetch stage flushed:
Control Hazard detected in: Execute
/////////////Execute Stage/////////////
Branch check: True
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 20
Data in rs2: -20
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 88
Start Cycle for CPU:2
Fetch stage flushed:
Control Hazard detected in: Execute
/////////////Execute Stage/////////////
Branch check: True
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 20
Data in rs2: -20
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 48

=====================Simulation Loop #624=====================
Start Cycle for CPU:1
Control Hazard detected in: Memory
//////////////Memory Stage//////////////
Next Instruction: PC = ALU result
///////Cpu Cycle Debug Statements///////
X1 value: 88
Start Cycle for CPU:2
Control Hazard detected in: Memory
//////////////Memory Stage//////////////
Next Instruction: PC = ALU result
///////Cpu Cycle Debug Statements///////
X1 value: 48

=====================Simulation Loop #625=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 88
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 48

=====================Simulation Loop #626=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 88
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 48

=====================Simulation Loop #627=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 120
Data in rs1: 88
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 120
///////Cpu Cycle Debug Statements///////
X1 value: 88
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 80
Data in rs1: 48
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 80
///////Cpu Cycle Debug Statements///////
X1 value: 48

=====================Simulation Loop #628=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
FP Memory Read Operation
///////Cpu Cycle Debug Statements///////
X1 value: 88
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
FP Memory Read Operation
///////Cpu Cycle Debug Statements///////
X1 value: 48
Memory Bus Access:
CPU 1 reads from address: 0x200: 0b00000000000000000000000000000000

=====================Simulation Loop #629=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 88
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 48
Memory Bus Access:
CPU 2 reads from address: 0x300: 0b00000000000000000000000000000000

=====================Simulation Loop #630=====================
Start Cycle for CPU:1
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 88
Start Cycle for CPU:2
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 48

=====================Simulation Loop #631=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 88
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 48

=====================Simulation Loop #632=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 88
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 48

=====================Simulation Loop #633=====================
Start Cycle for CPU:1
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 88
Start Cycle for CPU:2
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 48

=====================Simulation Loop #634=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001011011100011
Assembly Instruction: bne x1, x2, -20
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
///////Cpu Cycle Debug Statements///////
X1 value: 88
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001011011100011
Assembly Instruction: bne x1, x2, -20
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
///////Cpu Cycle Debug Statements///////
X1 value: 48

=====================Simulation Loop #635=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 80
Data in rs1: 88
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 80
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 544
Data To Store: 0
///////Cpu Cycle Debug Statements///////
X1 value: 88
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 40
Data in rs1: 48
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 40
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 800
Data To Store: 0
///////Cpu Cycle Debug Statements///////
X1 value: 48
Memory Bus Access:
CPU 1 writes to address 220: 00000000000000000000000000000000

=====================Simulation Loop #636=====================
Start Cycle for CPU:1
Fetch stage flushed:
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 80
Data in rs1: 88
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 80
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 88
Start Cycle for CPU:2
Fetch stage flushed:
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 40
Data in rs1: 48
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 40
//////////////Memory Stage//////////////
Memory Access still Pending
///////Cpu Cycle Debug Statements///////
X1 value: 48
Memory Bus Access:
CPU 2 writes to address 320: 00000000000000000000000000000000

=====================Simulation Loop #637=====================
Start Cycle for CPU:1
Fetch stage flushed:
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 88
Start Cycle for CPU:2
Fetch stage flushed:
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 48

=====================Simulation Loop #638=====================
Start Cycle for CPU:1
Fetch stage flushed:
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 80
Start Cycle for CPU:2
Fetch stage flushed:
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 40

=====================Simulation Loop #639=====================
Start Cycle for CPU:1
Fetch stage flushed:
Control Hazard detected in: Execute
/////////////Execute Stage/////////////
Branch check: True
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 20
Data in rs2: -20
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 80
Start Cycle for CPU:2
Fetch stage flushed:
Control Hazard detected in: Execute
/////////////Execute Stage/////////////
Branch check: True
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 20
Data in rs2: -20
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 40

=====================Simulation Loop #640=====================
Start Cycle for CPU:1
Control Hazard detected in: Memory
//////////////Memory Stage//////////////
Next Instruction: PC = ALU result
///////Cpu Cycle Debug Statements///////
X1 value: 80
Start Cycle for CPU:2
Control Hazard detected in: Memory
//////////////Memory Stage//////////////
Next Instruction: PC = ALU result
///////Cpu Cycle Debug Statements///////
X1 value: 40

=====================Simulation Loop #641=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 80
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 40

=====================Simulation Loop #642=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 80
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 40

=====================Simulation Loop #643=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 112
Data in rs1: 80
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 112
///////Cpu Cycle Debug Statements///////
X1 value: 80
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 72
Data in rs1: 40
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 72
///////Cpu Cycle Debug Statements///////
X1 value: 40

=====================Simulation Loop #644=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
FP Memory Read Operation
///////Cpu Cycle Debug Statements///////
X1 value: 80
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
FP Memory Read Operation
///////Cpu Cycle Debug Statements///////
X1 value: 40
Memory Bus Access:
CPU 1 reads from address: 0x200: 0b00000000000000000000000000000000

=====================Simulation Loop #645=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 80
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 40
Memory Bus Access:
CPU 2 reads from address: 0x300: 0b00000000000000000000000000000000

=====================Simulation Loop #646=====================
Start Cycle for CPU:1
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 80
Start Cycle for CPU:2
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 40

=====================Simulation Loop #647=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 80
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 40

=====================Simulation Loop #648=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 80
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 40

=====================Simulation Loop #649=====================
Start Cycle for CPU:1
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 80
Start Cycle for CPU:2
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 40

=====================Simulation Loop #650=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001011011100011
Assembly Instruction: bne x1, x2, -20
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
///////Cpu Cycle Debug Statements///////
X1 value: 80
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001011011100011
Assembly Instruction: bne x1, x2, -20
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
///////Cpu Cycle Debug Statements///////
X1 value: 40

=====================Simulation Loop #651=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 72
Data in rs1: 80
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 72
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 544
Data To Store: 0
///////Cpu Cycle Debug Statements///////
X1 value: 80
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 40
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 800
Data To Store: 0
///////Cpu Cycle Debug Statements///////
X1 value: 40
Memory Bus Access:
CPU 1 writes to address 220: 00000000000000000000000000000000

=====================Simulation Loop #652=====================
Start Cycle for CPU:1
Fetch stage flushed:
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 72
Data in rs1: 80
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 72
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 80
Start Cycle for CPU:2
Fetch stage flushed:
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 40
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
//////////////Memory Stage//////////////
Memory Access still Pending
///////Cpu Cycle Debug Statements///////
X1 value: 40
Memory Bus Access:
CPU 2 writes to address 320: 00000000000000000000000000000000

=====================Simulation Loop #653=====================
Start Cycle for CPU:1
Fetch stage flushed:
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 80
Start Cycle for CPU:2
Fetch stage flushed:
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 40

=====================Simulation Loop #654=====================
Start Cycle for CPU:1
Fetch stage flushed:
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 72
Start Cycle for CPU:2
Fetch stage flushed:
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 32

=====================Simulation Loop #655=====================
Start Cycle for CPU:1
Fetch stage flushed:
Control Hazard detected in: Execute
/////////////Execute Stage/////////////
Branch check: True
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 20
Data in rs2: -20
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 72
Start Cycle for CPU:2
Fetch stage flushed:
Control Hazard detected in: Execute
/////////////Execute Stage/////////////
Branch check: True
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 20
Data in rs2: -20
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 32

=====================Simulation Loop #656=====================
Start Cycle for CPU:1
Control Hazard detected in: Memory
//////////////Memory Stage//////////////
Next Instruction: PC = ALU result
///////Cpu Cycle Debug Statements///////
X1 value: 72
Start Cycle for CPU:2
Control Hazard detected in: Memory
//////////////Memory Stage//////////////
Next Instruction: PC = ALU result
///////Cpu Cycle Debug Statements///////
X1 value: 32

=====================Simulation Loop #657=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 72
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 32

=====================Simulation Loop #658=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 72
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 32

=====================Simulation Loop #659=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 104
Data in rs1: 72
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 104
///////Cpu Cycle Debug Statements///////
X1 value: 72
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 64
Data in rs1: 32
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 64
///////Cpu Cycle Debug Statements///////
X1 value: 32

=====================Simulation Loop #660=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
FP Memory Read Operation
///////Cpu Cycle Debug Statements///////
X1 value: 72
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
FP Memory Read Operation
///////Cpu Cycle Debug Statements///////
X1 value: 32
Memory Bus Access:
CPU 1 reads from address: 0x200: 0b00000000000000000000000000000000

=====================Simulation Loop #661=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 72
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 32
Memory Bus Access:
CPU 2 reads from address: 0x300: 0b00000000000000000000000000000000

=====================Simulation Loop #662=====================
Start Cycle for CPU:1
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 72
Start Cycle for CPU:2
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 32

=====================Simulation Loop #663=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 72
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 32

=====================Simulation Loop #664=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 72
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 32

=====================Simulation Loop #665=====================
Start Cycle for CPU:1
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 72
Start Cycle for CPU:2
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 32

=====================Simulation Loop #666=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001011011100011
Assembly Instruction: bne x1, x2, -20
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
///////Cpu Cycle Debug Statements///////
X1 value: 72
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001011011100011
Assembly Instruction: bne x1, x2, -20
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
///////Cpu Cycle Debug Statements///////
X1 value: 32

=====================Simulation Loop #667=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 64
Data in rs1: 72
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 64
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 544
Data To Store: 0
///////Cpu Cycle Debug Statements///////
X1 value: 72
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 24
Data in rs1: 32
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 24
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 800
Data To Store: 0
///////Cpu Cycle Debug Statements///////
X1 value: 32
Memory Bus Access:
CPU 1 writes to address 220: 00000000000000000000000000000000

=====================Simulation Loop #668=====================
Start Cycle for CPU:1
Fetch stage flushed:
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 64
Data in rs1: 72
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 64
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 72
Start Cycle for CPU:2
Fetch stage flushed:
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 24
Data in rs1: 32
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 24
//////////////Memory Stage//////////////
Memory Access still Pending
///////Cpu Cycle Debug Statements///////
X1 value: 32
Memory Bus Access:
CPU 2 writes to address 320: 00000000000000000000000000000000

=====================Simulation Loop #669=====================
Start Cycle for CPU:1
Fetch stage flushed:
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 72
Start Cycle for CPU:2
Fetch stage flushed:
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 32

=====================Simulation Loop #670=====================
Start Cycle for CPU:1
Fetch stage flushed:
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 64
Start Cycle for CPU:2
Fetch stage flushed:
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 24

=====================Simulation Loop #671=====================
Start Cycle for CPU:1
Fetch stage flushed:
Control Hazard detected in: Execute
/////////////Execute Stage/////////////
Branch check: True
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 20
Data in rs2: -20
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 64
Start Cycle for CPU:2
Fetch stage flushed:
Control Hazard detected in: Execute
/////////////Execute Stage/////////////
Branch check: True
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 20
Data in rs2: -20
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 24

=====================Simulation Loop #672=====================
Start Cycle for CPU:1
Control Hazard detected in: Memory
//////////////Memory Stage//////////////
Next Instruction: PC = ALU result
///////Cpu Cycle Debug Statements///////
X1 value: 64
Start Cycle for CPU:2
Control Hazard detected in: Memory
//////////////Memory Stage//////////////
Next Instruction: PC = ALU result
///////Cpu Cycle Debug Statements///////
X1 value: 24

=====================Simulation Loop #673=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 64
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 24

=====================Simulation Loop #674=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 64
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 24

=====================Simulation Loop #675=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 96
Data in rs1: 64
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 96
///////Cpu Cycle Debug Statements///////
X1 value: 64
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 56
Data in rs1: 24
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 56
///////Cpu Cycle Debug Statements///////
X1 value: 24

=====================Simulation Loop #676=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
FP Memory Read Operation
///////Cpu Cycle Debug Statements///////
X1 value: 64
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
FP Memory Read Operation
///////Cpu Cycle Debug Statements///////
X1 value: 24
Memory Bus Access:
CPU 1 reads from address: 0x200: 0b00000000000000000000000000000000

=====================Simulation Loop #677=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 64
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 24
Memory Bus Access:
CPU 2 reads from address: 0x300: 0b00000000000000000000000000000000

=====================Simulation Loop #678=====================
Start Cycle for CPU:1
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 64
Start Cycle for CPU:2
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 24

=====================Simulation Loop #679=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 64
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 24

=====================Simulation Loop #680=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 64
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 24

=====================Simulation Loop #681=====================
Start Cycle for CPU:1
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 64
Start Cycle for CPU:2
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 24

=====================Simulation Loop #682=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001011011100011
Assembly Instruction: bne x1, x2, -20
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
///////Cpu Cycle Debug Statements///////
X1 value: 64
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001011011100011
Assembly Instruction: bne x1, x2, -20
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
///////Cpu Cycle Debug Statements///////
X1 value: 24

=====================Simulation Loop #683=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 56
Data in rs1: 64
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 56
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 544
Data To Store: 0
///////Cpu Cycle Debug Statements///////
X1 value: 64
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 16
Data in rs1: 24
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 16
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 800
Data To Store: 0
///////Cpu Cycle Debug Statements///////
X1 value: 24
Memory Bus Access:
CPU 1 writes to address 220: 00000000000000000000000000000000

=====================Simulation Loop #684=====================
Start Cycle for CPU:1
Fetch stage flushed:
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 56
Data in rs1: 64
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 56
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 64
Start Cycle for CPU:2
Fetch stage flushed:
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 16
Data in rs1: 24
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 16
//////////////Memory Stage//////////////
Memory Access still Pending
///////Cpu Cycle Debug Statements///////
X1 value: 24
Memory Bus Access:
CPU 2 writes to address 320: 00000000000000000000000000000000

=====================Simulation Loop #685=====================
Start Cycle for CPU:1
Fetch stage flushed:
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 64
Start Cycle for CPU:2
Fetch stage flushed:
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 24

=====================Simulation Loop #686=====================
Start Cycle for CPU:1
Fetch stage flushed:
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 56
Start Cycle for CPU:2
Fetch stage flushed:
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 16

=====================Simulation Loop #687=====================
Start Cycle for CPU:1
Fetch stage flushed:
Control Hazard detected in: Execute
/////////////Execute Stage/////////////
Branch check: True
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 20
Data in rs2: -20
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 56
Start Cycle for CPU:2
Fetch stage flushed:
Control Hazard detected in: Execute
/////////////Execute Stage/////////////
Branch check: True
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 20
Data in rs2: -20
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 16

=====================Simulation Loop #688=====================
Start Cycle for CPU:1
Control Hazard detected in: Memory
//////////////Memory Stage//////////////
Next Instruction: PC = ALU result
///////Cpu Cycle Debug Statements///////
X1 value: 56
Start Cycle for CPU:2
Control Hazard detected in: Memory
//////////////Memory Stage//////////////
Next Instruction: PC = ALU result
///////Cpu Cycle Debug Statements///////
X1 value: 16

=====================Simulation Loop #689=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 56
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 16

=====================Simulation Loop #690=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 56
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 16

=====================Simulation Loop #691=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 88
Data in rs1: 56
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 88
///////Cpu Cycle Debug Statements///////
X1 value: 56
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 48
Data in rs1: 16
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 48
///////Cpu Cycle Debug Statements///////
X1 value: 16

=====================Simulation Loop #692=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
FP Memory Read Operation
///////Cpu Cycle Debug Statements///////
X1 value: 56
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
FP Memory Read Operation
///////Cpu Cycle Debug Statements///////
X1 value: 16
Memory Bus Access:
CPU 1 reads from address: 0x200: 0b00000000000000000000000000000000

=====================Simulation Loop #693=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 56
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 16
Memory Bus Access:
CPU 2 reads from address: 0x300: 0b00000000000000000000000000000000

=====================Simulation Loop #694=====================
Start Cycle for CPU:1
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 56
Start Cycle for CPU:2
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 16

=====================Simulation Loop #695=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 56
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 16

=====================Simulation Loop #696=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 56
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 16

=====================Simulation Loop #697=====================
Start Cycle for CPU:1
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 56
Start Cycle for CPU:2
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 16

=====================Simulation Loop #698=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001011011100011
Assembly Instruction: bne x1, x2, -20
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
///////Cpu Cycle Debug Statements///////
X1 value: 56
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001011011100011
Assembly Instruction: bne x1, x2, -20
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
///////Cpu Cycle Debug Statements///////
X1 value: 16

=====================Simulation Loop #699=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 48
Data in rs1: 56
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 48
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 544
Data To Store: 0
///////Cpu Cycle Debug Statements///////
X1 value: 56
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 8
Data in rs1: 16
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 8
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 800
Data To Store: 0
///////Cpu Cycle Debug Statements///////
X1 value: 16
Memory Bus Access:
CPU 1 writes to address 220: 00000000000000000000000000000000

=====================Simulation Loop #700=====================
Start Cycle for CPU:1
Fetch stage flushed:
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 48
Data in rs1: 56
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 48
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 56
Start Cycle for CPU:2
Fetch stage flushed:
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 8
Data in rs1: 16
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 8
//////////////Memory Stage//////////////
Memory Access still Pending
///////Cpu Cycle Debug Statements///////
X1 value: 16
Memory Bus Access:
CPU 2 writes to address 320: 00000000000000000000000000000000

=====================Simulation Loop #701=====================
Start Cycle for CPU:1
Fetch stage flushed:
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 56
Start Cycle for CPU:2
Fetch stage flushed:
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 16

=====================Simulation Loop #702=====================
Start Cycle for CPU:1
Fetch stage flushed:
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 48
Start Cycle for CPU:2
Fetch stage flushed:
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 8

=====================Simulation Loop #703=====================
Start Cycle for CPU:1
Fetch stage flushed:
Control Hazard detected in: Execute
/////////////Execute Stage/////////////
Branch check: True
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 20
Data in rs2: -20
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 48
Start Cycle for CPU:2
Fetch stage flushed:
Control Hazard detected in: Execute
/////////////Execute Stage/////////////
Branch check: True
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 20
Data in rs2: -20
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 8

=====================Simulation Loop #704=====================
Start Cycle for CPU:1
Control Hazard detected in: Memory
//////////////Memory Stage//////////////
Next Instruction: PC = ALU result
///////Cpu Cycle Debug Statements///////
X1 value: 48
Start Cycle for CPU:2
Control Hazard detected in: Memory
//////////////Memory Stage//////////////
Next Instruction: PC = ALU result
///////Cpu Cycle Debug Statements///////
X1 value: 8

=====================Simulation Loop #705=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 48
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 8

=====================Simulation Loop #706=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 48
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 8

=====================Simulation Loop #707=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 80
Data in rs1: 48
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 80
///////Cpu Cycle Debug Statements///////
X1 value: 48
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 40
Data in rs1: 8
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 40
///////Cpu Cycle Debug Statements///////
X1 value: 8

=====================Simulation Loop #708=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
FP Memory Read Operation
///////Cpu Cycle Debug Statements///////
X1 value: 48
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
FP Memory Read Operation
///////Cpu Cycle Debug Statements///////
X1 value: 8
Memory Bus Access:
CPU 1 reads from address: 0x200: 0b00000000000000000000000000000000

=====================Simulation Loop #709=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 48
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 8
Memory Bus Access:
CPU 2 reads from address: 0x300: 0b00000000000000000000000000000000

=====================Simulation Loop #710=====================
Start Cycle for CPU:1
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 48
Start Cycle for CPU:2
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 8

=====================Simulation Loop #711=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 48
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 8

=====================Simulation Loop #712=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 48
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 8

=====================Simulation Loop #713=====================
Start Cycle for CPU:1
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 48
Start Cycle for CPU:2
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 8

=====================Simulation Loop #714=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001011011100011
Assembly Instruction: bne x1, x2, -20
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
///////Cpu Cycle Debug Statements///////
X1 value: 48
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001011011100011
Assembly Instruction: bne x1, x2, -20
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
///////Cpu Cycle Debug Statements///////
X1 value: 8

=====================Simulation Loop #715=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 40
Data in rs1: 48
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 40
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 544
Data To Store: 0
///////Cpu Cycle Debug Statements///////
X1 value: 48
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 8
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 800
Data To Store: 0
///////Cpu Cycle Debug Statements///////
X1 value: 8
Memory Bus Access:
CPU 1 writes to address 220: 00000000000000000000000000000000

=====================Simulation Loop #716=====================
Start Cycle for CPU:1
Fetch stage flushed:
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 40
Data in rs1: 48
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 40
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 48
Start Cycle for CPU:2
Fetch stage flushed:
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 8
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
//////////////Memory Stage//////////////
Memory Access still Pending
///////Cpu Cycle Debug Statements///////
X1 value: 8
Memory Bus Access:
CPU 2 writes to address 320: 00000000000000000000000000000000

=====================Simulation Loop #717=====================
Start Cycle for CPU:1
Fetch stage flushed:
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 48
Start Cycle for CPU:2
Fetch stage flushed:
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 8

=====================Simulation Loop #718=====================
Start Cycle for CPU:1
Fetch stage flushed:
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 40
Start Cycle for CPU:2
Fetch stage flushed:
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 0

=====================Simulation Loop #719=====================
Start Cycle for CPU:1
Fetch stage flushed:
Control Hazard detected in: Execute
/////////////Execute Stage/////////////
Branch check: True
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 20
Data in rs2: -20
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 40
Start Cycle for CPU:2
Fetch stage flushed:
Control Hazard detected in: Execute
/////////////Execute Stage/////////////
Branch check: False
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 20
Data in rs2: -20
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 0

=====================Simulation Loop #720=====================
Start Cycle for CPU:1
Control Hazard detected in: Memory
//////////////Memory Stage//////////////
Next Instruction: PC = ALU result
///////Cpu Cycle Debug Statements///////
X1 value: 40
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 0

=====================Simulation Loop #721=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 40
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 0

=====================Simulation Loop #722=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 40
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 0

=====================Simulation Loop #723=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 72
Data in rs1: 40
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 72
///////Cpu Cycle Debug Statements///////
X1 value: 40
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 0

=====================Simulation Loop #724=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
FP Memory Read Operation
///////Cpu Cycle Debug Statements///////
X1 value: 40
Start Cycle for CPU:2
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 0
Memory Bus Access:
CPU 1 reads from address: 0x200: 0b00000000000000000000000000000000

=====================Simulation Loop #725=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 40
Start Cycle for CPU:2
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 0

=====================Simulation Loop #726=====================
Start Cycle for CPU:1
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 40
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 0

=====================Simulation Loop #727=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 40
Start Cycle for CPU:2
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 0

=====================Simulation Loop #728=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 40
Start Cycle for CPU:2
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 0

=====================Simulation Loop #729=====================
Start Cycle for CPU:1
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 40
Start Cycle for CPU:2
Data Hazard detected in: Memory
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 0

=====================Simulation Loop #730=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001011011100011
Assembly Instruction: bne x1, x2, -20
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
///////Cpu Cycle Debug Statements///////
X1 value: 40
Start Cycle for CPU:2
Data Hazard detected in: Write Back
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 0

=====================Simulation Loop #731=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 40
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 544
Data To Store: 0
///////Cpu Cycle Debug Statements///////
X1 value: 40
Start Cycle for CPU:2
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 0
Memory Bus Access:
CPU 1 writes to address 220: 00000000000000000000000000000000

=====================Simulation Loop #732=====================
Start Cycle for CPU:1
Fetch stage flushed:
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 40
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 40
Start Cycle for CPU:2
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 0

=====================Simulation Loop #733=====================
Start Cycle for CPU:1
Fetch stage flushed:
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 40
Start Cycle for CPU:2
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 0

=====================Simulation Loop #734=====================
Start Cycle for CPU:1
Fetch stage flushed:
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 32
Start Cycle for CPU:2
All Stages of the data path are empty. Resetting CPU.

=====================Simulation Loop #735=====================
Start Cycle for CPU:1
Fetch stage flushed:
Control Hazard detected in: Execute
/////////////Execute Stage/////////////
Branch check: True
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 20
Data in rs2: -20
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 32

=====================Simulation Loop #736=====================
Start Cycle for CPU:1
Control Hazard detected in: Memory
//////////////Memory Stage//////////////
Next Instruction: PC = ALU result
///////Cpu Cycle Debug Statements///////
X1 value: 32

=====================Simulation Loop #737=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 32

=====================Simulation Loop #738=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 32

=====================Simulation Loop #739=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 64
Data in rs1: 32
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 64
///////Cpu Cycle Debug Statements///////
X1 value: 32

=====================Simulation Loop #740=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
FP Memory Read Operation
///////Cpu Cycle Debug Statements///////
X1 value: 32
Memory Bus Access:
CPU 1 reads from address: 0x200: 0b00000000000000000000000000000000

=====================Simulation Loop #741=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 32

=====================Simulation Loop #742=====================
Start Cycle for CPU:1
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 32

=====================Simulation Loop #743=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 32

=====================Simulation Loop #744=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 32

=====================Simulation Loop #745=====================
Start Cycle for CPU:1
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 32

=====================Simulation Loop #746=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001011011100011
Assembly Instruction: bne x1, x2, -20
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
///////Cpu Cycle Debug Statements///////
X1 value: 32

=====================Simulation Loop #747=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 24
Data in rs1: 32
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 24
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 544
Data To Store: 0
///////Cpu Cycle Debug Statements///////
X1 value: 32
Memory Bus Access:
CPU 1 writes to address 220: 00000000000000000000000000000000

=====================Simulation Loop #748=====================
Start Cycle for CPU:1
Fetch stage flushed:
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 24
Data in rs1: 32
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 24
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 32

=====================Simulation Loop #749=====================
Start Cycle for CPU:1
Fetch stage flushed:
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 32

=====================Simulation Loop #750=====================
Start Cycle for CPU:1
Fetch stage flushed:
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 24

=====================Simulation Loop #751=====================
Start Cycle for CPU:1
Fetch stage flushed:
Control Hazard detected in: Execute
/////////////Execute Stage/////////////
Branch check: True
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 20
Data in rs2: -20
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 24

=====================Simulation Loop #752=====================
Start Cycle for CPU:1
Control Hazard detected in: Memory
//////////////Memory Stage//////////////
Next Instruction: PC = ALU result
///////Cpu Cycle Debug Statements///////
X1 value: 24

=====================Simulation Loop #753=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 24

=====================Simulation Loop #754=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 24

=====================Simulation Loop #755=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 56
Data in rs1: 24
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 56
///////Cpu Cycle Debug Statements///////
X1 value: 24

=====================Simulation Loop #756=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
FP Memory Read Operation
///////Cpu Cycle Debug Statements///////
X1 value: 24
Memory Bus Access:
CPU 1 reads from address: 0x200: 0b00000000000000000000000000000000

=====================Simulation Loop #757=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 24

=====================Simulation Loop #758=====================
Start Cycle for CPU:1
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 24

=====================Simulation Loop #759=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 24

=====================Simulation Loop #760=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 24

=====================Simulation Loop #761=====================
Start Cycle for CPU:1
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 24

=====================Simulation Loop #762=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001011011100011
Assembly Instruction: bne x1, x2, -20
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
///////Cpu Cycle Debug Statements///////
X1 value: 24

=====================Simulation Loop #763=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 16
Data in rs1: 24
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 16
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 544
Data To Store: 0
///////Cpu Cycle Debug Statements///////
X1 value: 24
Memory Bus Access:
CPU 1 writes to address 220: 00000000000000000000000000000000

=====================Simulation Loop #764=====================
Start Cycle for CPU:1
Fetch stage flushed:
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 16
Data in rs1: 24
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 16
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 24

=====================Simulation Loop #765=====================
Start Cycle for CPU:1
Fetch stage flushed:
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 24

=====================Simulation Loop #766=====================
Start Cycle for CPU:1
Fetch stage flushed:
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 16

=====================Simulation Loop #767=====================
Start Cycle for CPU:1
Fetch stage flushed:
Control Hazard detected in: Execute
/////////////Execute Stage/////////////
Branch check: True
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 20
Data in rs2: -20
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 16

=====================Simulation Loop #768=====================
Start Cycle for CPU:1
Control Hazard detected in: Memory
//////////////Memory Stage//////////////
Next Instruction: PC = ALU result
///////Cpu Cycle Debug Statements///////
X1 value: 16

=====================Simulation Loop #769=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 16

=====================Simulation Loop #770=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 16

=====================Simulation Loop #771=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 48
Data in rs1: 16
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 48
///////Cpu Cycle Debug Statements///////
X1 value: 16

=====================Simulation Loop #772=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
FP Memory Read Operation
///////Cpu Cycle Debug Statements///////
X1 value: 16
Memory Bus Access:
CPU 1 reads from address: 0x200: 0b00000000000000000000000000000000

=====================Simulation Loop #773=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 16

=====================Simulation Loop #774=====================
Start Cycle for CPU:1
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 16

=====================Simulation Loop #775=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 16

=====================Simulation Loop #776=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 16

=====================Simulation Loop #777=====================
Start Cycle for CPU:1
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 16

=====================Simulation Loop #778=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001011011100011
Assembly Instruction: bne x1, x2, -20
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
///////Cpu Cycle Debug Statements///////
X1 value: 16

=====================Simulation Loop #779=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 8
Data in rs1: 16
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 8
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 544
Data To Store: 0
///////Cpu Cycle Debug Statements///////
X1 value: 16
Memory Bus Access:
CPU 1 writes to address 220: 00000000000000000000000000000000

=====================Simulation Loop #780=====================
Start Cycle for CPU:1
Fetch stage flushed:
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 8
Data in rs1: 16
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 8
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 16

=====================Simulation Loop #781=====================
Start Cycle for CPU:1
Fetch stage flushed:
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 16

=====================Simulation Loop #782=====================
Start Cycle for CPU:1
Fetch stage flushed:
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 8

=====================Simulation Loop #783=====================
Start Cycle for CPU:1
Fetch stage flushed:
Control Hazard detected in: Execute
/////////////Execute Stage/////////////
Branch check: True
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 20
Data in rs2: -20
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 8

=====================Simulation Loop #784=====================
Start Cycle for CPU:1
Control Hazard detected in: Memory
//////////////Memory Stage//////////////
Next Instruction: PC = ALU result
///////Cpu Cycle Debug Statements///////
X1 value: 8

=====================Simulation Loop #785=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000000001010000000000111
Assembly Instruction: flw f0, 32(x1)
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 8

=====================Simulation Loop #786=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000001000000000001001010011
Assembly Instruction: fadd.s f4, f0, f2
//////////////Decode Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 8

=====================Simulation Loop #787=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 40
Data in rs1: 8
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 40
///////Cpu Cycle Debug Statements///////
X1 value: 8

=====================Simulation Loop #788=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
FP Memory Read Operation
///////Cpu Cycle Debug Statements///////
X1 value: 8
Memory Bus Access:
CPU 1 reads from address: 0x200: 0b00000000000000000000000000000000

=====================Simulation Loop #789=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 8

=====================Simulation Loop #790=====================
Start Cycle for CPU:1
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b00000010000100100100000000100111
Assembly Instruction: fsw f4, 32(x1)
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 0
///////Cpu Cycle Debug Statements///////
X1 value: 8

=====================Simulation Loop #791=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU op: 18
ALU FP Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 8

=====================Simulation Loop #792=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 8

=====================Simulation Loop #793=====================
Start Cycle for CPU:1
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b11111111100000001000000010010011
Assembly Instruction: addi x1, x1, -8
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
FP Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 8

=====================Simulation Loop #794=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b11111110001000001001011011100011
Assembly Instruction: bne x1, x2, -20
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 32
Data in rs1: 0
Data in rs2: 32
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 32
///////Cpu Cycle Debug Statements///////
X1 value: 8

=====================Simulation Loop #795=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 8
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
//////////////Memory Stage//////////////
FP Memory Write Operation
Memory Address: 544
Data To Store: 0
///////Cpu Cycle Debug Statements///////
X1 value: 8
Memory Bus Access:
CPU 1 writes to address 220: 00000000000000000000000000000000

=====================Simulation Loop #796=====================
Start Cycle for CPU:1
Fetch stage flushed:
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 8
Data in rs2: -8
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 8

=====================Simulation Loop #797=====================
Start Cycle for CPU:1
Fetch stage flushed:
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 8

=====================Simulation Loop #798=====================
Start Cycle for CPU:1
Fetch stage flushed:
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 0

=====================Simulation Loop #799=====================
Start Cycle for CPU:1
Fetch stage flushed:
Control Hazard detected in: Execute
/////////////Execute Stage/////////////
Branch check: False
ALU source 1 switched 
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 20
Data in rs2: -20
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 0

=====================Simulation Loop #800=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 0

=====================Simulation Loop #801=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
///////Cpu Cycle Debug Statements///////
X1 value: 0

=====================Simulation Loop #802=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 0

=====================Simulation Loop #803=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 0

=====================Simulation Loop #804=====================
Start Cycle for CPU:1
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 0

=====================Simulation Loop #805=====================
Start Cycle for CPU:1
//////////////Fetch Stage///////////////
Next Instruction: PC += 4
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 0

=====================Simulation Loop #806=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Fetch Stage///////////////
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 0

=====================Simulation Loop #807=====================
Start Cycle for CPU:1
Data Hazard detected in: Write Back
//////////////Fetch Stage///////////////
Instruction: 0b00000000000000000000000000010011
Assembly Instruction: addi x0, x0, 0
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 0

=====================Simulation Loop #808=====================
Start Cycle for CPU:1
//////////////Decode Stage//////////////
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 0

=====================Simulation Loop #809=====================
Start Cycle for CPU:1
Data Hazard detected in: Memory
//////////////Decode Stage//////////////
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 0

=====================Simulation Loop #810=====================
Start Cycle for CPU:1
Data Hazard detected in: Write Back
//////////////Decode Stage//////////////
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 0

=====================Simulation Loop #811=====================
Start Cycle for CPU:1
/////////////Execute Stage/////////////
ALU source 2 switched 
ALU op: 0
ALU Result: 0
Data in rs1: 0
Data in rs2: 0
Data in rs1_fp: 0
Data in rs2_fp: 0
ALU result: 0
///////Cpu Cycle Debug Statements///////
X1 value: 0

=====================Simulation Loop #812=====================
Start Cycle for CPU:1
//////////////Memory Stage//////////////
///////Cpu Cycle Debug Statements///////
X1 value: 0

=====================Simulation Loop #813=====================
Start Cycle for CPU:1
/////////////WriteBack Stage////////////
Int Write Back Case 1
///////Cpu Cycle Debug Statements///////
X1 value: 0

=====================Simulation Loop #814=====================
Start Cycle for CPU:1
All Stages of the data path are empty. Resetting CPU.

=======================Simulation Ended=======================
***********CPU:1 Event Queue************
****************************************
Clock ticks: 10
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 20
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 30
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 40
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 50
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 60
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: flw f0, 32(x1)
****************************************
****************************************
Clock ticks: 70
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 80
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 90
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: fadd.s f4, f0, f2
****************************************
****************************************
Clock ticks: 100
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -20
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 110
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 120
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 130
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************
****************************************
Clock ticks: 140
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: addi x1, x1, -8
****************************************
****************************************
Clock ticks: 150
PC at start of cycle: 0x18
PC at end of cycle: 0x14
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: bne x1, x2, -20
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 160
PC at start of cycle: 0x14
PC at end of cycle: 0x0
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: bne x1, x2, -20
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 170
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: bne x1, x2, -20
****************************************
****************************************
Clock ticks: 180
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 190
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 200
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 210
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 220
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: flw f0, 32(x1)
****************************************
****************************************
Clock ticks: 230
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 240
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 250
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: fadd.s f4, f0, f2
****************************************
****************************************
Clock ticks: 260
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -20
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 270
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 280
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 290
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************
****************************************
Clock ticks: 300
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: addi x1, x1, -8
****************************************
****************************************
Clock ticks: 310
PC at start of cycle: 0x18
PC at end of cycle: 0x14
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: bne x1, x2, -20
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 320
PC at start of cycle: 0x14
PC at end of cycle: 0x0
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: bne x1, x2, -20
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 330
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: bne x1, x2, -20
****************************************
****************************************
Clock ticks: 340
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 350
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 360
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 370
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 380
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: flw f0, 32(x1)
****************************************
****************************************
Clock ticks: 390
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 400
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 410
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: fadd.s f4, f0, f2
****************************************
****************************************
Clock ticks: 420
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -20
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 430
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 440
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 450
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************
****************************************
Clock ticks: 460
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: addi x1, x1, -8
****************************************
****************************************
Clock ticks: 470
PC at start of cycle: 0x18
PC at end of cycle: 0x14
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: bne x1, x2, -20
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 480
PC at start of cycle: 0x14
PC at end of cycle: 0x0
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: bne x1, x2, -20
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 490
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: bne x1, x2, -20
****************************************
****************************************
Clock ticks: 500
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 510
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 520
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 530
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 540
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: flw f0, 32(x1)
****************************************
****************************************
Clock ticks: 550
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 560
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 570
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: fadd.s f4, f0, f2
****************************************
****************************************
Clock ticks: 580
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -20
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 590
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 600
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 610
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************
****************************************
Clock ticks: 620
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: addi x1, x1, -8
****************************************
****************************************
Clock ticks: 630
PC at start of cycle: 0x18
PC at end of cycle: 0x14
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: bne x1, x2, -20
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 640
PC at start of cycle: 0x14
PC at end of cycle: 0x0
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: bne x1, x2, -20
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 650
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: bne x1, x2, -20
****************************************
****************************************
Clock ticks: 660
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 670
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 680
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 690
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 700
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: flw f0, 32(x1)
****************************************
****************************************
Clock ticks: 710
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 720
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 730
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: fadd.s f4, f0, f2
****************************************
****************************************
Clock ticks: 740
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -20
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 750
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 760
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 770
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************
****************************************
Clock ticks: 780
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: addi x1, x1, -8
****************************************
****************************************
Clock ticks: 790
PC at start of cycle: 0x18
PC at end of cycle: 0x14
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: bne x1, x2, -20
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 800
PC at start of cycle: 0x14
PC at end of cycle: 0x0
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: bne x1, x2, -20
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 810
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: bne x1, x2, -20
****************************************
****************************************
Clock ticks: 820
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 830
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 840
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 850
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 860
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: flw f0, 32(x1)
****************************************
****************************************
Clock ticks: 870
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 880
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 890
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: fadd.s f4, f0, f2
****************************************
****************************************
Clock ticks: 900
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -20
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 910
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 920
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 930
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************
****************************************
Clock ticks: 940
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: addi x1, x1, -8
****************************************
****************************************
Clock ticks: 950
PC at start of cycle: 0x18
PC at end of cycle: 0x14
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: bne x1, x2, -20
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 960
PC at start of cycle: 0x14
PC at end of cycle: 0x0
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: bne x1, x2, -20
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 970
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: bne x1, x2, -20
****************************************
****************************************
Clock ticks: 980
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 990
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1000
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1010
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1020
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: flw f0, 32(x1)
****************************************
****************************************
Clock ticks: 1030
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1040
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1050
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: fadd.s f4, f0, f2
****************************************
****************************************
Clock ticks: 1060
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -20
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1070
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1080
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1090
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************
****************************************
Clock ticks: 1100
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: addi x1, x1, -8
****************************************
****************************************
Clock ticks: 1110
PC at start of cycle: 0x18
PC at end of cycle: 0x14
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: bne x1, x2, -20
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1120
PC at start of cycle: 0x14
PC at end of cycle: 0x0
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: bne x1, x2, -20
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1130
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: bne x1, x2, -20
****************************************
****************************************
Clock ticks: 1140
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1150
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1160
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1170
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1180
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: flw f0, 32(x1)
****************************************
****************************************
Clock ticks: 1190
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1200
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1210
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: fadd.s f4, f0, f2
****************************************
****************************************
Clock ticks: 1220
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -20
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1230
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1240
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1250
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************
****************************************
Clock ticks: 1260
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: addi x1, x1, -8
****************************************
****************************************
Clock ticks: 1270
PC at start of cycle: 0x18
PC at end of cycle: 0x14
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: bne x1, x2, -20
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1280
PC at start of cycle: 0x14
PC at end of cycle: 0x0
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: bne x1, x2, -20
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1290
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: bne x1, x2, -20
****************************************
****************************************
Clock ticks: 1300
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1310
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1320
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1330
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1340
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: flw f0, 32(x1)
****************************************
****************************************
Clock ticks: 1350
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1360
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1370
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: fadd.s f4, f0, f2
****************************************
****************************************
Clock ticks: 1380
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -20
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1390
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1400
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1410
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************
****************************************
Clock ticks: 1420
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: addi x1, x1, -8
****************************************
****************************************
Clock ticks: 1430
PC at start of cycle: 0x18
PC at end of cycle: 0x14
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: bne x1, x2, -20
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1440
PC at start of cycle: 0x14
PC at end of cycle: 0x0
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: bne x1, x2, -20
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1450
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: bne x1, x2, -20
****************************************
****************************************
Clock ticks: 1460
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1470
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1480
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1490
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1500
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: flw f0, 32(x1)
****************************************
****************************************
Clock ticks: 1510
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1520
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1530
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: fadd.s f4, f0, f2
****************************************
****************************************
Clock ticks: 1540
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -20
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1550
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1560
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1570
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************
****************************************
Clock ticks: 1580
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: addi x1, x1, -8
****************************************
****************************************
Clock ticks: 1590
PC at start of cycle: 0x18
PC at end of cycle: 0x14
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: bne x1, x2, -20
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1600
PC at start of cycle: 0x14
PC at end of cycle: 0x0
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: bne x1, x2, -20
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1610
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: bne x1, x2, -20
****************************************
****************************************
Clock ticks: 1620
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1630
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1640
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1650
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1660
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: flw f0, 32(x1)
****************************************
****************************************
Clock ticks: 1670
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1680
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1690
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: fadd.s f4, f0, f2
****************************************
****************************************
Clock ticks: 1700
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -20
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1710
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1720
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1730
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************
****************************************
Clock ticks: 1740
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: addi x1, x1, -8
****************************************
****************************************
Clock ticks: 1750
PC at start of cycle: 0x18
PC at end of cycle: 0x14
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: bne x1, x2, -20
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1760
PC at start of cycle: 0x14
PC at end of cycle: 0x0
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: bne x1, x2, -20
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1770
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: bne x1, x2, -20
****************************************
****************************************
Clock ticks: 1780
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1790
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1800
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1810
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1820
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: flw f0, 32(x1)
****************************************
****************************************
Clock ticks: 1830
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1840
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1850
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: fadd.s f4, f0, f2
****************************************
****************************************
Clock ticks: 1860
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -20
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1870
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1880
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1890
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************
****************************************
Clock ticks: 1900
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: addi x1, x1, -8
****************************************
****************************************
Clock ticks: 1910
PC at start of cycle: 0x18
PC at end of cycle: 0x14
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: bne x1, x2, -20
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1920
PC at start of cycle: 0x14
PC at end of cycle: 0x0
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: bne x1, x2, -20
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1930
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: bne x1, x2, -20
****************************************
****************************************
Clock ticks: 1940
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1950
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1960
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1970
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1980
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: flw f0, 32(x1)
****************************************
****************************************
Clock ticks: 1990
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2000
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2010
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: fadd.s f4, f0, f2
****************************************
****************************************
Clock ticks: 2020
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -20
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2030
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2040
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2050
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************
****************************************
Clock ticks: 2060
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: addi x1, x1, -8
****************************************
****************************************
Clock ticks: 2070
PC at start of cycle: 0x18
PC at end of cycle: 0x14
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: bne x1, x2, -20
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2080
PC at start of cycle: 0x14
PC at end of cycle: 0x0
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: bne x1, x2, -20
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2090
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: bne x1, x2, -20
****************************************
****************************************
Clock ticks: 2100
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2110
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2120
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2130
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2140
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: flw f0, 32(x1)
****************************************
****************************************
Clock ticks: 2150
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2160
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2170
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: fadd.s f4, f0, f2
****************************************
****************************************
Clock ticks: 2180
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -20
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2190
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2200
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2210
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************
****************************************
Clock ticks: 2220
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: addi x1, x1, -8
****************************************
****************************************
Clock ticks: 2230
PC at start of cycle: 0x18
PC at end of cycle: 0x14
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: bne x1, x2, -20
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2240
PC at start of cycle: 0x14
PC at end of cycle: 0x0
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: bne x1, x2, -20
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2250
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: bne x1, x2, -20
****************************************
****************************************
Clock ticks: 2260
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2270
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2280
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2290
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2300
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: flw f0, 32(x1)
****************************************
****************************************
Clock ticks: 2310
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2320
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2330
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: fadd.s f4, f0, f2
****************************************
****************************************
Clock ticks: 2340
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -20
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2350
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2360
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2370
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************
****************************************
Clock ticks: 2380
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: addi x1, x1, -8
****************************************
****************************************
Clock ticks: 2390
PC at start of cycle: 0x18
PC at end of cycle: 0x14
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: bne x1, x2, -20
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2400
PC at start of cycle: 0x14
PC at end of cycle: 0x0
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: bne x1, x2, -20
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2410
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: bne x1, x2, -20
****************************************
****************************************
Clock ticks: 2420
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2430
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2440
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2450
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2460
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: flw f0, 32(x1)
****************************************
****************************************
Clock ticks: 2470
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2480
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2490
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: fadd.s f4, f0, f2
****************************************
****************************************
Clock ticks: 2500
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -20
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2510
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2520
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2530
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************
****************************************
Clock ticks: 2540
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: addi x1, x1, -8
****************************************
****************************************
Clock ticks: 2550
PC at start of cycle: 0x18
PC at end of cycle: 0x14
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: bne x1, x2, -20
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2560
PC at start of cycle: 0x14
PC at end of cycle: 0x0
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: bne x1, x2, -20
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2570
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: bne x1, x2, -20
****************************************
****************************************
Clock ticks: 2580
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2590
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2600
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2610
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2620
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: flw f0, 32(x1)
****************************************
****************************************
Clock ticks: 2630
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2640
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2650
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: fadd.s f4, f0, f2
****************************************
****************************************
Clock ticks: 2660
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -20
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2670
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2680
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2690
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************
****************************************
Clock ticks: 2700
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: addi x1, x1, -8
****************************************
****************************************
Clock ticks: 2710
PC at start of cycle: 0x18
PC at end of cycle: 0x14
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: bne x1, x2, -20
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2720
PC at start of cycle: 0x14
PC at end of cycle: 0x0
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: bne x1, x2, -20
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2730
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: bne x1, x2, -20
****************************************
****************************************
Clock ticks: 2740
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2750
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2760
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2770
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2780
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: flw f0, 32(x1)
****************************************
****************************************
Clock ticks: 2790
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2800
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2810
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: fadd.s f4, f0, f2
****************************************
****************************************
Clock ticks: 2820
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -20
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2830
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2840
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2850
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************
****************************************
Clock ticks: 2860
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: addi x1, x1, -8
****************************************
****************************************
Clock ticks: 2870
PC at start of cycle: 0x18
PC at end of cycle: 0x14
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: bne x1, x2, -20
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2880
PC at start of cycle: 0x14
PC at end of cycle: 0x0
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: bne x1, x2, -20
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2890
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: bne x1, x2, -20
****************************************
****************************************
Clock ticks: 2900
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2910
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2920
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2930
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2940
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: flw f0, 32(x1)
****************************************
****************************************
Clock ticks: 2950
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2960
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2970
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: fadd.s f4, f0, f2
****************************************
****************************************
Clock ticks: 2980
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -20
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2990
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3000
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3010
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************
****************************************
Clock ticks: 3020
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: addi x1, x1, -8
****************************************
****************************************
Clock ticks: 3030
PC at start of cycle: 0x18
PC at end of cycle: 0x14
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: bne x1, x2, -20
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3040
PC at start of cycle: 0x14
PC at end of cycle: 0x0
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: bne x1, x2, -20
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3050
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: bne x1, x2, -20
****************************************
****************************************
Clock ticks: 3060
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3070
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3080
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3090
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3100
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: flw f0, 32(x1)
****************************************
****************************************
Clock ticks: 3110
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3120
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3130
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: fadd.s f4, f0, f2
****************************************
****************************************
Clock ticks: 3140
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -20
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3150
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3160
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3170
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************
****************************************
Clock ticks: 3180
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: addi x1, x1, -8
****************************************
****************************************
Clock ticks: 3190
PC at start of cycle: 0x18
PC at end of cycle: 0x14
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: bne x1, x2, -20
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3200
PC at start of cycle: 0x14
PC at end of cycle: 0x0
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: bne x1, x2, -20
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3210
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: bne x1, x2, -20
****************************************
****************************************
Clock ticks: 3220
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3230
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3240
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3250
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3260
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: flw f0, 32(x1)
****************************************
****************************************
Clock ticks: 3270
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3280
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3290
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: fadd.s f4, f0, f2
****************************************
****************************************
Clock ticks: 3300
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -20
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3310
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3320
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3330
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************
****************************************
Clock ticks: 3340
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: addi x1, x1, -8
****************************************
****************************************
Clock ticks: 3350
PC at start of cycle: 0x18
PC at end of cycle: 0x14
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: bne x1, x2, -20
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3360
PC at start of cycle: 0x14
PC at end of cycle: 0x0
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: bne x1, x2, -20
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3370
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: bne x1, x2, -20
****************************************
****************************************
Clock ticks: 3380
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3390
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3400
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3410
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3420
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: flw f0, 32(x1)
****************************************
****************************************
Clock ticks: 3430
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3440
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3450
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: fadd.s f4, f0, f2
****************************************
****************************************
Clock ticks: 3460
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -20
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3470
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3480
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3490
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************
****************************************
Clock ticks: 3500
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: addi x1, x1, -8
****************************************
****************************************
Clock ticks: 3510
PC at start of cycle: 0x18
PC at end of cycle: 0x14
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: bne x1, x2, -20
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3520
PC at start of cycle: 0x14
PC at end of cycle: 0x0
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: bne x1, x2, -20
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3530
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: bne x1, x2, -20
****************************************
****************************************
Clock ticks: 3540
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3550
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3560
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3570
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3580
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: flw f0, 32(x1)
****************************************
****************************************
Clock ticks: 3590
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3600
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3610
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: fadd.s f4, f0, f2
****************************************
****************************************
Clock ticks: 3620
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -20
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3630
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3640
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3650
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************
****************************************
Clock ticks: 3660
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: addi x1, x1, -8
****************************************
****************************************
Clock ticks: 3670
PC at start of cycle: 0x18
PC at end of cycle: 0x14
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: bne x1, x2, -20
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3680
PC at start of cycle: 0x14
PC at end of cycle: 0x0
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: bne x1, x2, -20
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3690
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: bne x1, x2, -20
****************************************
****************************************
Clock ticks: 3700
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3710
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3720
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3730
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3740
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: flw f0, 32(x1)
****************************************
****************************************
Clock ticks: 3750
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3760
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3770
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: fadd.s f4, f0, f2
****************************************
****************************************
Clock ticks: 3780
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -20
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3790
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3800
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3810
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************
****************************************
Clock ticks: 3820
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: addi x1, x1, -8
****************************************
****************************************
Clock ticks: 3830
PC at start of cycle: 0x18
PC at end of cycle: 0x14
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: bne x1, x2, -20
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3840
PC at start of cycle: 0x14
PC at end of cycle: 0x0
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: bne x1, x2, -20
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3850
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: bne x1, x2, -20
****************************************
****************************************
Clock ticks: 3860
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3870
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3880
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3890
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3900
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: flw f0, 32(x1)
****************************************
****************************************
Clock ticks: 3910
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3920
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3930
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: fadd.s f4, f0, f2
****************************************
****************************************
Clock ticks: 3940
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -20
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3950
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3960
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3970
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************
****************************************
Clock ticks: 3980
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: addi x1, x1, -8
****************************************
****************************************
Clock ticks: 3990
PC at start of cycle: 0x18
PC at end of cycle: 0x14
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: bne x1, x2, -20
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4000
PC at start of cycle: 0x14
PC at end of cycle: 0x0
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: bne x1, x2, -20
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4010
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: bne x1, x2, -20
****************************************
****************************************
Clock ticks: 4020
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4030
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4040
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4050
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4060
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: flw f0, 32(x1)
****************************************
****************************************
Clock ticks: 4070
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4080
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4090
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: fadd.s f4, f0, f2
****************************************
****************************************
Clock ticks: 4100
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -20
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4110
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4120
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4130
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************
****************************************
Clock ticks: 4140
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: addi x1, x1, -8
****************************************
****************************************
Clock ticks: 4150
PC at start of cycle: 0x18
PC at end of cycle: 0x14
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: bne x1, x2, -20
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4160
PC at start of cycle: 0x14
PC at end of cycle: 0x0
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: bne x1, x2, -20
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4170
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: bne x1, x2, -20
****************************************
****************************************
Clock ticks: 4180
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4190
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4200
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4210
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4220
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: flw f0, 32(x1)
****************************************
****************************************
Clock ticks: 4230
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4240
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4250
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: fadd.s f4, f0, f2
****************************************
****************************************
Clock ticks: 4260
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -20
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4270
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4280
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4290
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************
****************************************
Clock ticks: 4300
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: addi x1, x1, -8
****************************************
****************************************
Clock ticks: 4310
PC at start of cycle: 0x18
PC at end of cycle: 0x14
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: bne x1, x2, -20
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4320
PC at start of cycle: 0x14
PC at end of cycle: 0x0
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: bne x1, x2, -20
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4330
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: bne x1, x2, -20
****************************************
****************************************
Clock ticks: 4340
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4350
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4360
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4370
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4380
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: flw f0, 32(x1)
****************************************
****************************************
Clock ticks: 4390
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4400
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4410
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: fadd.s f4, f0, f2
****************************************
****************************************
Clock ticks: 4420
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -20
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4430
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4440
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4450
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************
****************************************
Clock ticks: 4460
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: addi x1, x1, -8
****************************************
****************************************
Clock ticks: 4470
PC at start of cycle: 0x18
PC at end of cycle: 0x14
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: bne x1, x2, -20
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4480
PC at start of cycle: 0x14
PC at end of cycle: 0x0
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: bne x1, x2, -20
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4490
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: bne x1, x2, -20
****************************************
****************************************
Clock ticks: 4500
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4510
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4520
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4530
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4540
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: flw f0, 32(x1)
****************************************
****************************************
Clock ticks: 4550
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4560
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4570
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: fadd.s f4, f0, f2
****************************************
****************************************
Clock ticks: 4580
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -20
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4590
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4600
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4610
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************
****************************************
Clock ticks: 4620
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: addi x1, x1, -8
****************************************
****************************************
Clock ticks: 4630
PC at start of cycle: 0x18
PC at end of cycle: 0x14
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: bne x1, x2, -20
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4640
PC at start of cycle: 0x14
PC at end of cycle: 0x0
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: bne x1, x2, -20
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4650
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: bne x1, x2, -20
****************************************
****************************************
Clock ticks: 4660
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4670
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4680
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4690
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4700
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: flw f0, 32(x1)
****************************************
****************************************
Clock ticks: 4710
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4720
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4730
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: fadd.s f4, f0, f2
****************************************
****************************************
Clock ticks: 4740
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -20
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4750
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4760
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4770
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************
****************************************
Clock ticks: 4780
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: addi x1, x1, -8
****************************************
****************************************
Clock ticks: 4790
PC at start of cycle: 0x18
PC at end of cycle: 0x14
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: bne x1, x2, -20
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4800
PC at start of cycle: 0x14
PC at end of cycle: 0x0
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: bne x1, x2, -20
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4810
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: bne x1, x2, -20
****************************************
****************************************
Clock ticks: 4820
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4830
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4840
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4850
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4860
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: flw f0, 32(x1)
****************************************
****************************************
Clock ticks: 4870
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4880
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4890
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: fadd.s f4, f0, f2
****************************************
****************************************
Clock ticks: 4900
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -20
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4910
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4920
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4930
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************
****************************************
Clock ticks: 4940
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: addi x1, x1, -8
****************************************
****************************************
Clock ticks: 4950
PC at start of cycle: 0x18
PC at end of cycle: 0x14
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: bne x1, x2, -20
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4960
PC at start of cycle: 0x14
PC at end of cycle: 0x0
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: bne x1, x2, -20
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4970
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: bne x1, x2, -20
****************************************
****************************************
Clock ticks: 4980
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4990
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5000
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5010
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5020
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: flw f0, 32(x1)
****************************************
****************************************
Clock ticks: 5030
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5040
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5050
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: fadd.s f4, f0, f2
****************************************
****************************************
Clock ticks: 5060
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -20
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5070
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5080
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5090
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************
****************************************
Clock ticks: 5100
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: addi x1, x1, -8
****************************************
****************************************
Clock ticks: 5110
PC at start of cycle: 0x18
PC at end of cycle: 0x14
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: bne x1, x2, -20
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5120
PC at start of cycle: 0x14
PC at end of cycle: 0x0
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: bne x1, x2, -20
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5130
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: bne x1, x2, -20
****************************************
****************************************
Clock ticks: 5140
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5150
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5160
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5170
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5180
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: flw f0, 32(x1)
****************************************
****************************************
Clock ticks: 5190
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5200
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5210
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: fadd.s f4, f0, f2
****************************************
****************************************
Clock ticks: 5220
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -20
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5230
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5240
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5250
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************
****************************************
Clock ticks: 5260
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: addi x1, x1, -8
****************************************
****************************************
Clock ticks: 5270
PC at start of cycle: 0x18
PC at end of cycle: 0x14
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: bne x1, x2, -20
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5280
PC at start of cycle: 0x14
PC at end of cycle: 0x0
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: bne x1, x2, -20
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5290
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: bne x1, x2, -20
****************************************
****************************************
Clock ticks: 5300
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5310
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5320
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5330
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5340
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: flw f0, 32(x1)
****************************************
****************************************
Clock ticks: 5350
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5360
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5370
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: fadd.s f4, f0, f2
****************************************
****************************************
Clock ticks: 5380
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -20
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5390
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5400
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5410
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************
****************************************
Clock ticks: 5420
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: addi x1, x1, -8
****************************************
****************************************
Clock ticks: 5430
PC at start of cycle: 0x18
PC at end of cycle: 0x14
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: bne x1, x2, -20
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5440
PC at start of cycle: 0x14
PC at end of cycle: 0x0
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: bne x1, x2, -20
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5450
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: bne x1, x2, -20
****************************************
****************************************
Clock ticks: 5460
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5470
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5480
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5490
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5500
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: flw f0, 32(x1)
****************************************
****************************************
Clock ticks: 5510
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5520
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5530
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: fadd.s f4, f0, f2
****************************************
****************************************
Clock ticks: 5540
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -20
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5550
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5560
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5570
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************
****************************************
Clock ticks: 5580
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: addi x1, x1, -8
****************************************
****************************************
Clock ticks: 5590
PC at start of cycle: 0x18
PC at end of cycle: 0x14
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: bne x1, x2, -20
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5600
PC at start of cycle: 0x14
PC at end of cycle: 0x0
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: bne x1, x2, -20
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5610
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: bne x1, x2, -20
****************************************
****************************************
Clock ticks: 5620
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5630
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5640
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5650
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5660
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: flw f0, 32(x1)
****************************************
****************************************
Clock ticks: 5670
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5680
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5690
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: fadd.s f4, f0, f2
****************************************
****************************************
Clock ticks: 5700
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -20
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5710
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5720
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5730
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************
****************************************
Clock ticks: 5740
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: addi x1, x1, -8
****************************************
****************************************
Clock ticks: 5750
PC at start of cycle: 0x18
PC at end of cycle: 0x14
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: bne x1, x2, -20
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5760
PC at start of cycle: 0x14
PC at end of cycle: 0x0
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: bne x1, x2, -20
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5770
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: bne x1, x2, -20
****************************************
****************************************
Clock ticks: 5780
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5790
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5800
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5810
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5820
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: flw f0, 32(x1)
****************************************
****************************************
Clock ticks: 5830
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5840
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5850
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: fadd.s f4, f0, f2
****************************************
****************************************
Clock ticks: 5860
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -20
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5870
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5880
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5890
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************
****************************************
Clock ticks: 5900
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: addi x1, x1, -8
****************************************
****************************************
Clock ticks: 5910
PC at start of cycle: 0x18
PC at end of cycle: 0x14
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: bne x1, x2, -20
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5920
PC at start of cycle: 0x14
PC at end of cycle: 0x0
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: bne x1, x2, -20
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5930
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: bne x1, x2, -20
****************************************
****************************************
Clock ticks: 5940
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5950
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5960
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5970
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5980
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: flw f0, 32(x1)
****************************************
****************************************
Clock ticks: 5990
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6000
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6010
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: fadd.s f4, f0, f2
****************************************
****************************************
Clock ticks: 6020
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -20
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6030
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6040
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6050
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************
****************************************
Clock ticks: 6060
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: addi x1, x1, -8
****************************************
****************************************
Clock ticks: 6070
PC at start of cycle: 0x18
PC at end of cycle: 0x14
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: bne x1, x2, -20
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6080
PC at start of cycle: 0x14
PC at end of cycle: 0x0
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: bne x1, x2, -20
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6090
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: bne x1, x2, -20
****************************************
****************************************
Clock ticks: 6100
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6110
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6120
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6130
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6140
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: flw f0, 32(x1)
****************************************
****************************************
Clock ticks: 6150
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6160
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6170
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: fadd.s f4, f0, f2
****************************************
****************************************
Clock ticks: 6180
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -20
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6190
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6200
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6210
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************
****************************************
Clock ticks: 6220
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: addi x1, x1, -8
****************************************
****************************************
Clock ticks: 6230
PC at start of cycle: 0x18
PC at end of cycle: 0x14
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: bne x1, x2, -20
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6240
PC at start of cycle: 0x14
PC at end of cycle: 0x0
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: bne x1, x2, -20
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6250
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: bne x1, x2, -20
****************************************
****************************************
Clock ticks: 6260
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6270
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6280
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6290
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6300
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: flw f0, 32(x1)
****************************************
****************************************
Clock ticks: 6310
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6320
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6330
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: fadd.s f4, f0, f2
****************************************
****************************************
Clock ticks: 6340
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -20
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6350
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6360
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6370
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************
****************************************
Clock ticks: 6380
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: addi x1, x1, -8
****************************************
****************************************
Clock ticks: 6390
PC at start of cycle: 0x18
PC at end of cycle: 0x14
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: bne x1, x2, -20
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6400
PC at start of cycle: 0x14
PC at end of cycle: 0x0
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: bne x1, x2, -20
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6410
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: bne x1, x2, -20
****************************************
****************************************
Clock ticks: 6420
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6430
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6440
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6450
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6460
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: flw f0, 32(x1)
****************************************
****************************************
Clock ticks: 6470
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6480
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6490
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: fadd.s f4, f0, f2
****************************************
****************************************
Clock ticks: 6500
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -20
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6510
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6520
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6530
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************
****************************************
Clock ticks: 6540
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: addi x1, x1, -8
****************************************
****************************************
Clock ticks: 6550
PC at start of cycle: 0x18
PC at end of cycle: 0x14
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: bne x1, x2, -20
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6560
PC at start of cycle: 0x14
PC at end of cycle: 0x0
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: bne x1, x2, -20
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6570
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: bne x1, x2, -20
****************************************
****************************************
Clock ticks: 6580
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6590
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6600
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6610
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6620
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: flw f0, 32(x1)
****************************************
****************************************
Clock ticks: 6630
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6640
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6650
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: fadd.s f4, f0, f2
****************************************
****************************************
Clock ticks: 6660
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -20
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6670
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6680
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6690
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************
****************************************
Clock ticks: 6700
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: addi x1, x1, -8
****************************************
****************************************
Clock ticks: 6710
PC at start of cycle: 0x18
PC at end of cycle: 0x14
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: bne x1, x2, -20
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6720
PC at start of cycle: 0x14
PC at end of cycle: 0x0
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: bne x1, x2, -20
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6730
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: bne x1, x2, -20
****************************************
****************************************
Clock ticks: 6740
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6750
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6760
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6770
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6780
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: flw f0, 32(x1)
****************************************
****************************************
Clock ticks: 6790
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6800
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6810
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: fadd.s f4, f0, f2
****************************************
****************************************
Clock ticks: 6820
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -20
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6830
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6840
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6850
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************
****************************************
Clock ticks: 6860
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: addi x1, x1, -8
****************************************
****************************************
Clock ticks: 6870
PC at start of cycle: 0x18
PC at end of cycle: 0x14
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: bne x1, x2, -20
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6880
PC at start of cycle: 0x14
PC at end of cycle: 0x0
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: bne x1, x2, -20
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6890
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: bne x1, x2, -20
****************************************
****************************************
Clock ticks: 6900
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6910
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6920
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6930
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6940
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: flw f0, 32(x1)
****************************************
****************************************
Clock ticks: 6950
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6960
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6970
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: fadd.s f4, f0, f2
****************************************
****************************************
Clock ticks: 6980
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -20
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6990
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 7000
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 7010
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************
****************************************
Clock ticks: 7020
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: addi x1, x1, -8
****************************************
****************************************
Clock ticks: 7030
PC at start of cycle: 0x18
PC at end of cycle: 0x14
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: bne x1, x2, -20
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 7040
PC at start of cycle: 0x14
PC at end of cycle: 0x0
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: bne x1, x2, -20
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 7050
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: bne x1, x2, -20
****************************************
****************************************
Clock ticks: 7060
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 7070
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 7080
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 7090
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 7100
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: flw f0, 32(x1)
****************************************
****************************************
Clock ticks: 7110
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 7120
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 7130
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: fadd.s f4, f0, f2
****************************************
****************************************
Clock ticks: 7140
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -20
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 7150
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 7160
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 7170
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************
****************************************
Clock ticks: 7180
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: addi x1, x1, -8
****************************************
****************************************
Clock ticks: 7190
PC at start of cycle: 0x18
PC at end of cycle: 0x14
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: bne x1, x2, -20
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 7200
PC at start of cycle: 0x14
PC at end of cycle: 0x0
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: bne x1, x2, -20
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 7210
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: bne x1, x2, -20
****************************************
****************************************
Clock ticks: 7220
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 7230
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 7240
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 7250
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 7260
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: flw f0, 32(x1)
****************************************
****************************************
Clock ticks: 7270
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 7280
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 7290
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: fadd.s f4, f0, f2
****************************************
****************************************
Clock ticks: 7300
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -20
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 7310
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 7320
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 7330
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************
****************************************
Clock ticks: 7340
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: addi x1, x1, -8
****************************************
****************************************
Clock ticks: 7350
PC at start of cycle: 0x18
PC at end of cycle: 0x14
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: bne x1, x2, -20
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 7360
PC at start of cycle: 0x14
PC at end of cycle: 0x0
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: bne x1, x2, -20
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 7370
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: bne x1, x2, -20
****************************************
****************************************
Clock ticks: 7380
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 7390
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 7400
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 7410
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 7420
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: flw f0, 32(x1)
****************************************
****************************************
Clock ticks: 7430
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 7440
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 7450
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: fadd.s f4, f0, f2
****************************************
****************************************
Clock ticks: 7460
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -20
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 7470
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 7480
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 7490
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************
****************************************
Clock ticks: 7500
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: addi x1, x1, -8
****************************************
****************************************
Clock ticks: 7510
PC at start of cycle: 0x18
PC at end of cycle: 0x14
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: bne x1, x2, -20
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 7520
PC at start of cycle: 0x14
PC at end of cycle: 0x0
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: bne x1, x2, -20
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 7530
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: bne x1, x2, -20
****************************************
****************************************
Clock ticks: 7540
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 7550
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 7560
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 7570
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 7580
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: flw f0, 32(x1)
****************************************
****************************************
Clock ticks: 7590
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 7600
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 7610
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: fadd.s f4, f0, f2
****************************************
****************************************
Clock ticks: 7620
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -20
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 7630
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 7640
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 7650
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************
****************************************
Clock ticks: 7660
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: addi x1, x1, -8
****************************************
****************************************
Clock ticks: 7670
PC at start of cycle: 0x18
PC at end of cycle: 0x14
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: bne x1, x2, -20
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 7680
PC at start of cycle: 0x14
PC at end of cycle: 0x0
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: bne x1, x2, -20
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 7690
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: bne x1, x2, -20
****************************************
****************************************
Clock ticks: 7700
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 7710
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 7720
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 7730
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 7740
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: flw f0, 32(x1)
****************************************
****************************************
Clock ticks: 7750
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 7760
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 7770
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: fadd.s f4, f0, f2
****************************************
****************************************
Clock ticks: 7780
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -20
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 7790
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 7800
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 7810
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************
****************************************
Clock ticks: 7820
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: addi x1, x1, -8
****************************************
****************************************
Clock ticks: 7830
PC at start of cycle: 0x18
PC at end of cycle: 0x14
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: bne x1, x2, -20
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 7840
PC at start of cycle: 0x14
PC at end of cycle: 0x0
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: bne x1, x2, -20
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 7850
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: bne x1, x2, -20
****************************************
****************************************
Clock ticks: 7860
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 7870
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 7880
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 7890
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 7900
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: flw f0, 32(x1)
****************************************
****************************************
Clock ticks: 7910
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 7920
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 7930
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: fadd.s f4, f0, f2
****************************************
****************************************
Clock ticks: 7940
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -20
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 7950
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 7960
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 7970
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************
****************************************
Clock ticks: 7980
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: addi x1, x1, -8
****************************************
****************************************
Clock ticks: 7990
PC at start of cycle: 0x18
PC at end of cycle: 0x14
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: bne x1, x2, -20
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 8000
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: bne x1, x2, -20
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 8010
PC at start of cycle: 0x18
PC at end of cycle: 0x1c
Fetch Stage: addi x0, x0, 0
Decode Stage: addi x0, x0, 0
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: bne x1, x2, -20
****************************************
****************************************
Clock ticks: 8020
PC at start of cycle: 0x1c
PC at end of cycle: 0x20
Fetch Stage: addi x0, x0, 0
Decode Stage: addi x0, x0, 0
Execute Stage: addi x0, x0, 0
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 8030
PC at start of cycle: 0x20
PC at end of cycle: 0x20
Fetch Stage: addi x0, x0, 0
Decode Stage: addi x0, x0, 0
Execute Stage: No_Op
Memory Stage: addi x0, x0, 0
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 8040
PC at start of cycle: 0x20
PC at end of cycle: 0x20
Fetch Stage: addi x0, x0, 0
Decode Stage: addi x0, x0, 0
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: addi x0, x0, 0
****************************************
****************************************
Clock ticks: 8050
PC at start of cycle: 0x20
PC at end of cycle: 0x24
Fetch Stage: addi x0, x0, 0
Decode Stage: addi x0, x0, 0
Execute Stage: addi x0, x0, 0
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 8060
PC at start of cycle: 0x24
PC at end of cycle: 0x24
Fetch Stage: addi x0, x0, 0
Decode Stage: addi x0, x0, 0
Execute Stage: No_Op
Memory Stage: addi x0, x0, 0
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 8070
PC at start of cycle: 0x24
PC at end of cycle: 0x24
Fetch Stage: addi x0, x0, 0
Decode Stage: addi x0, x0, 0
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: addi x0, x0, 0
****************************************
****************************************
Clock ticks: 8080
PC at start of cycle: 0x24
PC at end of cycle: 0x24
Fetch Stage: No_Op
Decode Stage: addi x0, x0, 0
Execute Stage: addi x0, x0, 0
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 8090
PC at start of cycle: 0x24
PC at end of cycle: 0x24
Fetch Stage: No_Op
Decode Stage: addi x0, x0, 0
Execute Stage: No_Op
Memory Stage: addi x0, x0, 0
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 8100
PC at start of cycle: 0x24
PC at end of cycle: 0x24
Fetch Stage: No_Op
Decode Stage: addi x0, x0, 0
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: addi x0, x0, 0
****************************************
****************************************
Clock ticks: 8110
PC at start of cycle: 0x24
PC at end of cycle: 0x24
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: addi x0, x0, 0
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 8120
PC at start of cycle: 0x24
PC at end of cycle: 0x24
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: addi x0, x0, 0
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 8130
PC at start of cycle: 0x24
PC at end of cycle: 0x24
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: addi x0, x0, 0
****************************************
****************************************
Clock ticks: 8140
PC at start of cycle: 0x24
PC at end of cycle: 0x24
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
***********CPU:2 Event Queue************
****************************************
Clock ticks: 10
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 20
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 30
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 40
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 50
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 60
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: flw f0, 32(x1)
****************************************
****************************************
Clock ticks: 70
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 80
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 90
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: fadd.s f4, f0, f2
****************************************
****************************************
Clock ticks: 100
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -20
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 110
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 120
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 130
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************
****************************************
Clock ticks: 140
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: addi x1, x1, -8
****************************************
****************************************
Clock ticks: 150
PC at start of cycle: 0x18
PC at end of cycle: 0x14
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: bne x1, x2, -20
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 160
PC at start of cycle: 0x14
PC at end of cycle: 0x0
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: bne x1, x2, -20
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 170
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: bne x1, x2, -20
****************************************
****************************************
Clock ticks: 180
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 190
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 200
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 210
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 220
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: flw f0, 32(x1)
****************************************
****************************************
Clock ticks: 230
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 240
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 250
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: fadd.s f4, f0, f2
****************************************
****************************************
Clock ticks: 260
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -20
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 270
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 280
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 290
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************
****************************************
Clock ticks: 300
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: addi x1, x1, -8
****************************************
****************************************
Clock ticks: 310
PC at start of cycle: 0x18
PC at end of cycle: 0x14
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: bne x1, x2, -20
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 320
PC at start of cycle: 0x14
PC at end of cycle: 0x0
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: bne x1, x2, -20
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 330
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: bne x1, x2, -20
****************************************
****************************************
Clock ticks: 340
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 350
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 360
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 370
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 380
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: flw f0, 32(x1)
****************************************
****************************************
Clock ticks: 390
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 400
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 410
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: fadd.s f4, f0, f2
****************************************
****************************************
Clock ticks: 420
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -20
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 430
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 440
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 450
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************
****************************************
Clock ticks: 460
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: addi x1, x1, -8
****************************************
****************************************
Clock ticks: 470
PC at start of cycle: 0x18
PC at end of cycle: 0x14
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: bne x1, x2, -20
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 480
PC at start of cycle: 0x14
PC at end of cycle: 0x0
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: bne x1, x2, -20
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 490
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: bne x1, x2, -20
****************************************
****************************************
Clock ticks: 500
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 510
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 520
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 530
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 540
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: flw f0, 32(x1)
****************************************
****************************************
Clock ticks: 550
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 560
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 570
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: fadd.s f4, f0, f2
****************************************
****************************************
Clock ticks: 580
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -20
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 590
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 600
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 610
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************
****************************************
Clock ticks: 620
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: addi x1, x1, -8
****************************************
****************************************
Clock ticks: 630
PC at start of cycle: 0x18
PC at end of cycle: 0x14
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: bne x1, x2, -20
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 640
PC at start of cycle: 0x14
PC at end of cycle: 0x0
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: bne x1, x2, -20
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 650
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: bne x1, x2, -20
****************************************
****************************************
Clock ticks: 660
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 670
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 680
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 690
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 700
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: flw f0, 32(x1)
****************************************
****************************************
Clock ticks: 710
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 720
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 730
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: fadd.s f4, f0, f2
****************************************
****************************************
Clock ticks: 740
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -20
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 750
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 760
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 770
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************
****************************************
Clock ticks: 780
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: addi x1, x1, -8
****************************************
****************************************
Clock ticks: 790
PC at start of cycle: 0x18
PC at end of cycle: 0x14
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: bne x1, x2, -20
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 800
PC at start of cycle: 0x14
PC at end of cycle: 0x0
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: bne x1, x2, -20
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 810
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: bne x1, x2, -20
****************************************
****************************************
Clock ticks: 820
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 830
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 840
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 850
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 860
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: flw f0, 32(x1)
****************************************
****************************************
Clock ticks: 870
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 880
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 890
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: fadd.s f4, f0, f2
****************************************
****************************************
Clock ticks: 900
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -20
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 910
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 920
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 930
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************
****************************************
Clock ticks: 940
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: addi x1, x1, -8
****************************************
****************************************
Clock ticks: 950
PC at start of cycle: 0x18
PC at end of cycle: 0x14
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: bne x1, x2, -20
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 960
PC at start of cycle: 0x14
PC at end of cycle: 0x0
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: bne x1, x2, -20
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 970
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: bne x1, x2, -20
****************************************
****************************************
Clock ticks: 980
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 990
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1000
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1010
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1020
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: flw f0, 32(x1)
****************************************
****************************************
Clock ticks: 1030
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1040
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1050
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: fadd.s f4, f0, f2
****************************************
****************************************
Clock ticks: 1060
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -20
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1070
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1080
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1090
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************
****************************************
Clock ticks: 1100
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: addi x1, x1, -8
****************************************
****************************************
Clock ticks: 1110
PC at start of cycle: 0x18
PC at end of cycle: 0x14
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: bne x1, x2, -20
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1120
PC at start of cycle: 0x14
PC at end of cycle: 0x0
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: bne x1, x2, -20
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1130
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: bne x1, x2, -20
****************************************
****************************************
Clock ticks: 1140
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1150
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1160
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1170
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1180
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: flw f0, 32(x1)
****************************************
****************************************
Clock ticks: 1190
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1200
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1210
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: fadd.s f4, f0, f2
****************************************
****************************************
Clock ticks: 1220
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -20
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1230
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1240
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1250
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************
****************************************
Clock ticks: 1260
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: addi x1, x1, -8
****************************************
****************************************
Clock ticks: 1270
PC at start of cycle: 0x18
PC at end of cycle: 0x14
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: bne x1, x2, -20
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1280
PC at start of cycle: 0x14
PC at end of cycle: 0x0
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: bne x1, x2, -20
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1290
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: bne x1, x2, -20
****************************************
****************************************
Clock ticks: 1300
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1310
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1320
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1330
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1340
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: flw f0, 32(x1)
****************************************
****************************************
Clock ticks: 1350
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1360
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1370
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: fadd.s f4, f0, f2
****************************************
****************************************
Clock ticks: 1380
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -20
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1390
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1400
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1410
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************
****************************************
Clock ticks: 1420
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: addi x1, x1, -8
****************************************
****************************************
Clock ticks: 1430
PC at start of cycle: 0x18
PC at end of cycle: 0x14
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: bne x1, x2, -20
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1440
PC at start of cycle: 0x14
PC at end of cycle: 0x0
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: bne x1, x2, -20
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1450
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: bne x1, x2, -20
****************************************
****************************************
Clock ticks: 1460
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1470
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1480
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1490
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1500
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: flw f0, 32(x1)
****************************************
****************************************
Clock ticks: 1510
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1520
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1530
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: fadd.s f4, f0, f2
****************************************
****************************************
Clock ticks: 1540
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -20
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1550
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1560
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1570
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************
****************************************
Clock ticks: 1580
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: addi x1, x1, -8
****************************************
****************************************
Clock ticks: 1590
PC at start of cycle: 0x18
PC at end of cycle: 0x14
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: bne x1, x2, -20
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1600
PC at start of cycle: 0x14
PC at end of cycle: 0x0
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: bne x1, x2, -20
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1610
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: bne x1, x2, -20
****************************************
****************************************
Clock ticks: 1620
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1630
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1640
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1650
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1660
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: flw f0, 32(x1)
****************************************
****************************************
Clock ticks: 1670
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1680
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1690
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: fadd.s f4, f0, f2
****************************************
****************************************
Clock ticks: 1700
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -20
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1710
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1720
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1730
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************
****************************************
Clock ticks: 1740
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: addi x1, x1, -8
****************************************
****************************************
Clock ticks: 1750
PC at start of cycle: 0x18
PC at end of cycle: 0x14
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: bne x1, x2, -20
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1760
PC at start of cycle: 0x14
PC at end of cycle: 0x0
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: bne x1, x2, -20
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1770
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: bne x1, x2, -20
****************************************
****************************************
Clock ticks: 1780
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1790
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1800
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1810
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1820
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: flw f0, 32(x1)
****************************************
****************************************
Clock ticks: 1830
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1840
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1850
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: fadd.s f4, f0, f2
****************************************
****************************************
Clock ticks: 1860
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -20
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1870
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1880
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1890
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************
****************************************
Clock ticks: 1900
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: addi x1, x1, -8
****************************************
****************************************
Clock ticks: 1910
PC at start of cycle: 0x18
PC at end of cycle: 0x14
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: bne x1, x2, -20
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1920
PC at start of cycle: 0x14
PC at end of cycle: 0x0
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: bne x1, x2, -20
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1930
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: bne x1, x2, -20
****************************************
****************************************
Clock ticks: 1940
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1950
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1960
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1970
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 1980
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: flw f0, 32(x1)
****************************************
****************************************
Clock ticks: 1990
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2000
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2010
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: fadd.s f4, f0, f2
****************************************
****************************************
Clock ticks: 2020
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -20
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2030
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2040
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2050
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************
****************************************
Clock ticks: 2060
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: addi x1, x1, -8
****************************************
****************************************
Clock ticks: 2070
PC at start of cycle: 0x18
PC at end of cycle: 0x14
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: bne x1, x2, -20
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2080
PC at start of cycle: 0x14
PC at end of cycle: 0x0
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: bne x1, x2, -20
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2090
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: bne x1, x2, -20
****************************************
****************************************
Clock ticks: 2100
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2110
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2120
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2130
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2140
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: flw f0, 32(x1)
****************************************
****************************************
Clock ticks: 2150
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2160
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2170
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: fadd.s f4, f0, f2
****************************************
****************************************
Clock ticks: 2180
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -20
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2190
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2200
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2210
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************
****************************************
Clock ticks: 2220
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: addi x1, x1, -8
****************************************
****************************************
Clock ticks: 2230
PC at start of cycle: 0x18
PC at end of cycle: 0x14
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: bne x1, x2, -20
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2240
PC at start of cycle: 0x14
PC at end of cycle: 0x0
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: bne x1, x2, -20
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2250
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: bne x1, x2, -20
****************************************
****************************************
Clock ticks: 2260
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2270
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2280
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2290
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2300
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: flw f0, 32(x1)
****************************************
****************************************
Clock ticks: 2310
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2320
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2330
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: fadd.s f4, f0, f2
****************************************
****************************************
Clock ticks: 2340
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -20
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2350
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2360
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2370
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************
****************************************
Clock ticks: 2380
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: addi x1, x1, -8
****************************************
****************************************
Clock ticks: 2390
PC at start of cycle: 0x18
PC at end of cycle: 0x14
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: bne x1, x2, -20
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2400
PC at start of cycle: 0x14
PC at end of cycle: 0x0
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: bne x1, x2, -20
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2410
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: bne x1, x2, -20
****************************************
****************************************
Clock ticks: 2420
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2430
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2440
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2450
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2460
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: flw f0, 32(x1)
****************************************
****************************************
Clock ticks: 2470
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2480
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2490
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: fadd.s f4, f0, f2
****************************************
****************************************
Clock ticks: 2500
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -20
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2510
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2520
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2530
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************
****************************************
Clock ticks: 2540
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: addi x1, x1, -8
****************************************
****************************************
Clock ticks: 2550
PC at start of cycle: 0x18
PC at end of cycle: 0x14
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: bne x1, x2, -20
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2560
PC at start of cycle: 0x14
PC at end of cycle: 0x0
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: bne x1, x2, -20
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2570
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: bne x1, x2, -20
****************************************
****************************************
Clock ticks: 2580
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2590
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2600
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2610
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2620
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: flw f0, 32(x1)
****************************************
****************************************
Clock ticks: 2630
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2640
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2650
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: fadd.s f4, f0, f2
****************************************
****************************************
Clock ticks: 2660
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -20
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2670
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2680
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2690
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************
****************************************
Clock ticks: 2700
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: addi x1, x1, -8
****************************************
****************************************
Clock ticks: 2710
PC at start of cycle: 0x18
PC at end of cycle: 0x14
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: bne x1, x2, -20
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2720
PC at start of cycle: 0x14
PC at end of cycle: 0x0
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: bne x1, x2, -20
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2730
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: bne x1, x2, -20
****************************************
****************************************
Clock ticks: 2740
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2750
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2760
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2770
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2780
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: flw f0, 32(x1)
****************************************
****************************************
Clock ticks: 2790
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2800
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2810
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: fadd.s f4, f0, f2
****************************************
****************************************
Clock ticks: 2820
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -20
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2830
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2840
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2850
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************
****************************************
Clock ticks: 2860
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: addi x1, x1, -8
****************************************
****************************************
Clock ticks: 2870
PC at start of cycle: 0x18
PC at end of cycle: 0x14
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: bne x1, x2, -20
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2880
PC at start of cycle: 0x14
PC at end of cycle: 0x0
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: bne x1, x2, -20
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2890
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: bne x1, x2, -20
****************************************
****************************************
Clock ticks: 2900
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2910
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2920
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2930
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2940
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: flw f0, 32(x1)
****************************************
****************************************
Clock ticks: 2950
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2960
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2970
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: fadd.s f4, f0, f2
****************************************
****************************************
Clock ticks: 2980
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -20
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 2990
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3000
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3010
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************
****************************************
Clock ticks: 3020
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: addi x1, x1, -8
****************************************
****************************************
Clock ticks: 3030
PC at start of cycle: 0x18
PC at end of cycle: 0x14
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: bne x1, x2, -20
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3040
PC at start of cycle: 0x14
PC at end of cycle: 0x0
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: bne x1, x2, -20
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3050
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: bne x1, x2, -20
****************************************
****************************************
Clock ticks: 3060
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3070
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3080
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3090
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3100
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: flw f0, 32(x1)
****************************************
****************************************
Clock ticks: 3110
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3120
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3130
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: fadd.s f4, f0, f2
****************************************
****************************************
Clock ticks: 3140
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -20
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3150
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3160
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3170
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************
****************************************
Clock ticks: 3180
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: addi x1, x1, -8
****************************************
****************************************
Clock ticks: 3190
PC at start of cycle: 0x18
PC at end of cycle: 0x14
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: bne x1, x2, -20
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3200
PC at start of cycle: 0x14
PC at end of cycle: 0x0
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: bne x1, x2, -20
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3210
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: bne x1, x2, -20
****************************************
****************************************
Clock ticks: 3220
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3230
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3240
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3250
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3260
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: flw f0, 32(x1)
****************************************
****************************************
Clock ticks: 3270
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3280
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3290
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: fadd.s f4, f0, f2
****************************************
****************************************
Clock ticks: 3300
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -20
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3310
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3320
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3330
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************
****************************************
Clock ticks: 3340
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: addi x1, x1, -8
****************************************
****************************************
Clock ticks: 3350
PC at start of cycle: 0x18
PC at end of cycle: 0x14
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: bne x1, x2, -20
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3360
PC at start of cycle: 0x14
PC at end of cycle: 0x0
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: bne x1, x2, -20
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3370
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: bne x1, x2, -20
****************************************
****************************************
Clock ticks: 3380
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3390
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3400
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3410
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3420
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: flw f0, 32(x1)
****************************************
****************************************
Clock ticks: 3430
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3440
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3450
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: fadd.s f4, f0, f2
****************************************
****************************************
Clock ticks: 3460
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -20
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3470
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3480
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3490
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************
****************************************
Clock ticks: 3500
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: addi x1, x1, -8
****************************************
****************************************
Clock ticks: 3510
PC at start of cycle: 0x18
PC at end of cycle: 0x14
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: bne x1, x2, -20
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3520
PC at start of cycle: 0x14
PC at end of cycle: 0x0
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: bne x1, x2, -20
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3530
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: bne x1, x2, -20
****************************************
****************************************
Clock ticks: 3540
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3550
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3560
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3570
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3580
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: flw f0, 32(x1)
****************************************
****************************************
Clock ticks: 3590
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3600
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3610
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: fadd.s f4, f0, f2
****************************************
****************************************
Clock ticks: 3620
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -20
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3630
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3640
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3650
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************
****************************************
Clock ticks: 3660
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: addi x1, x1, -8
****************************************
****************************************
Clock ticks: 3670
PC at start of cycle: 0x18
PC at end of cycle: 0x14
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: bne x1, x2, -20
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3680
PC at start of cycle: 0x14
PC at end of cycle: 0x0
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: bne x1, x2, -20
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3690
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: bne x1, x2, -20
****************************************
****************************************
Clock ticks: 3700
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3710
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3720
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3730
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3740
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: flw f0, 32(x1)
****************************************
****************************************
Clock ticks: 3750
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3760
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3770
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: fadd.s f4, f0, f2
****************************************
****************************************
Clock ticks: 3780
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -20
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3790
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3800
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3810
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************
****************************************
Clock ticks: 3820
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: addi x1, x1, -8
****************************************
****************************************
Clock ticks: 3830
PC at start of cycle: 0x18
PC at end of cycle: 0x14
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: bne x1, x2, -20
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3840
PC at start of cycle: 0x14
PC at end of cycle: 0x0
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: bne x1, x2, -20
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3850
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: bne x1, x2, -20
****************************************
****************************************
Clock ticks: 3860
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3870
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3880
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3890
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3900
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: flw f0, 32(x1)
****************************************
****************************************
Clock ticks: 3910
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3920
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3930
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: fadd.s f4, f0, f2
****************************************
****************************************
Clock ticks: 3940
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -20
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3950
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3960
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 3970
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************
****************************************
Clock ticks: 3980
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: addi x1, x1, -8
****************************************
****************************************
Clock ticks: 3990
PC at start of cycle: 0x18
PC at end of cycle: 0x14
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: bne x1, x2, -20
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4000
PC at start of cycle: 0x14
PC at end of cycle: 0x0
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: bne x1, x2, -20
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4010
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: bne x1, x2, -20
****************************************
****************************************
Clock ticks: 4020
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4030
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4040
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4050
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4060
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: flw f0, 32(x1)
****************************************
****************************************
Clock ticks: 4070
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4080
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4090
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: fadd.s f4, f0, f2
****************************************
****************************************
Clock ticks: 4100
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -20
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4110
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4120
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4130
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************
****************************************
Clock ticks: 4140
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: addi x1, x1, -8
****************************************
****************************************
Clock ticks: 4150
PC at start of cycle: 0x18
PC at end of cycle: 0x14
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: bne x1, x2, -20
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4160
PC at start of cycle: 0x14
PC at end of cycle: 0x0
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: bne x1, x2, -20
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4170
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: bne x1, x2, -20
****************************************
****************************************
Clock ticks: 4180
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4190
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4200
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4210
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4220
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: flw f0, 32(x1)
****************************************
****************************************
Clock ticks: 4230
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4240
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4250
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: fadd.s f4, f0, f2
****************************************
****************************************
Clock ticks: 4260
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -20
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4270
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4280
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4290
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************
****************************************
Clock ticks: 4300
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: addi x1, x1, -8
****************************************
****************************************
Clock ticks: 4310
PC at start of cycle: 0x18
PC at end of cycle: 0x14
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: bne x1, x2, -20
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4320
PC at start of cycle: 0x14
PC at end of cycle: 0x0
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: bne x1, x2, -20
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4330
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: bne x1, x2, -20
****************************************
****************************************
Clock ticks: 4340
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4350
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4360
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4370
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4380
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: flw f0, 32(x1)
****************************************
****************************************
Clock ticks: 4390
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4400
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4410
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: fadd.s f4, f0, f2
****************************************
****************************************
Clock ticks: 4420
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -20
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4430
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4440
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4450
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************
****************************************
Clock ticks: 4460
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: addi x1, x1, -8
****************************************
****************************************
Clock ticks: 4470
PC at start of cycle: 0x18
PC at end of cycle: 0x14
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: bne x1, x2, -20
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4480
PC at start of cycle: 0x14
PC at end of cycle: 0x0
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: bne x1, x2, -20
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4490
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: bne x1, x2, -20
****************************************
****************************************
Clock ticks: 4500
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4510
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4520
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4530
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4540
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: flw f0, 32(x1)
****************************************
****************************************
Clock ticks: 4550
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4560
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4570
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: fadd.s f4, f0, f2
****************************************
****************************************
Clock ticks: 4580
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -20
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4590
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4600
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4610
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************
****************************************
Clock ticks: 4620
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: addi x1, x1, -8
****************************************
****************************************
Clock ticks: 4630
PC at start of cycle: 0x18
PC at end of cycle: 0x14
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: bne x1, x2, -20
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4640
PC at start of cycle: 0x14
PC at end of cycle: 0x0
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: bne x1, x2, -20
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4650
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: bne x1, x2, -20
****************************************
****************************************
Clock ticks: 4660
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4670
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4680
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4690
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4700
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: flw f0, 32(x1)
****************************************
****************************************
Clock ticks: 4710
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4720
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4730
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: fadd.s f4, f0, f2
****************************************
****************************************
Clock ticks: 4740
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -20
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4750
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4760
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4770
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************
****************************************
Clock ticks: 4780
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: addi x1, x1, -8
****************************************
****************************************
Clock ticks: 4790
PC at start of cycle: 0x18
PC at end of cycle: 0x14
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: bne x1, x2, -20
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4800
PC at start of cycle: 0x14
PC at end of cycle: 0x0
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: bne x1, x2, -20
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4810
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: bne x1, x2, -20
****************************************
****************************************
Clock ticks: 4820
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4830
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4840
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4850
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4860
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: flw f0, 32(x1)
****************************************
****************************************
Clock ticks: 4870
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4880
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4890
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: fadd.s f4, f0, f2
****************************************
****************************************
Clock ticks: 4900
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -20
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4910
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4920
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4930
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************
****************************************
Clock ticks: 4940
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: addi x1, x1, -8
****************************************
****************************************
Clock ticks: 4950
PC at start of cycle: 0x18
PC at end of cycle: 0x14
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: bne x1, x2, -20
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4960
PC at start of cycle: 0x14
PC at end of cycle: 0x0
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: bne x1, x2, -20
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4970
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: bne x1, x2, -20
****************************************
****************************************
Clock ticks: 4980
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 4990
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5000
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5010
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5020
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: flw f0, 32(x1)
****************************************
****************************************
Clock ticks: 5030
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5040
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5050
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: fadd.s f4, f0, f2
****************************************
****************************************
Clock ticks: 5060
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -20
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5070
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5080
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5090
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************
****************************************
Clock ticks: 5100
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: addi x1, x1, -8
****************************************
****************************************
Clock ticks: 5110
PC at start of cycle: 0x18
PC at end of cycle: 0x14
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: bne x1, x2, -20
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5120
PC at start of cycle: 0x14
PC at end of cycle: 0x0
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: bne x1, x2, -20
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5130
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: bne x1, x2, -20
****************************************
****************************************
Clock ticks: 5140
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5150
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5160
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5170
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5180
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: flw f0, 32(x1)
****************************************
****************************************
Clock ticks: 5190
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5200
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5210
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: fadd.s f4, f0, f2
****************************************
****************************************
Clock ticks: 5220
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -20
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5230
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5240
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5250
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************
****************************************
Clock ticks: 5260
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: addi x1, x1, -8
****************************************
****************************************
Clock ticks: 5270
PC at start of cycle: 0x18
PC at end of cycle: 0x14
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: bne x1, x2, -20
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5280
PC at start of cycle: 0x14
PC at end of cycle: 0x0
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: bne x1, x2, -20
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5290
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: bne x1, x2, -20
****************************************
****************************************
Clock ticks: 5300
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5310
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5320
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5330
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5340
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: flw f0, 32(x1)
****************************************
****************************************
Clock ticks: 5350
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5360
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5370
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: fadd.s f4, f0, f2
****************************************
****************************************
Clock ticks: 5380
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -20
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5390
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5400
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5410
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************
****************************************
Clock ticks: 5420
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: addi x1, x1, -8
****************************************
****************************************
Clock ticks: 5430
PC at start of cycle: 0x18
PC at end of cycle: 0x14
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: bne x1, x2, -20
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5440
PC at start of cycle: 0x14
PC at end of cycle: 0x0
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: bne x1, x2, -20
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5450
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: bne x1, x2, -20
****************************************
****************************************
Clock ticks: 5460
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5470
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5480
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5490
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5500
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: flw f0, 32(x1)
****************************************
****************************************
Clock ticks: 5510
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5520
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5530
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: fadd.s f4, f0, f2
****************************************
****************************************
Clock ticks: 5540
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -20
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5550
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5560
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5570
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************
****************************************
Clock ticks: 5580
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: addi x1, x1, -8
****************************************
****************************************
Clock ticks: 5590
PC at start of cycle: 0x18
PC at end of cycle: 0x14
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: bne x1, x2, -20
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5600
PC at start of cycle: 0x14
PC at end of cycle: 0x0
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: bne x1, x2, -20
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5610
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: bne x1, x2, -20
****************************************
****************************************
Clock ticks: 5620
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5630
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5640
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5650
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5660
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: flw f0, 32(x1)
****************************************
****************************************
Clock ticks: 5670
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5680
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5690
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: fadd.s f4, f0, f2
****************************************
****************************************
Clock ticks: 5700
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -20
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5710
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5720
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5730
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************
****************************************
Clock ticks: 5740
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: addi x1, x1, -8
****************************************
****************************************
Clock ticks: 5750
PC at start of cycle: 0x18
PC at end of cycle: 0x14
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: bne x1, x2, -20
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5760
PC at start of cycle: 0x14
PC at end of cycle: 0x0
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: bne x1, x2, -20
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5770
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: bne x1, x2, -20
****************************************
****************************************
Clock ticks: 5780
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5790
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5800
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5810
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5820
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: flw f0, 32(x1)
****************************************
****************************************
Clock ticks: 5830
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5840
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5850
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: fadd.s f4, f0, f2
****************************************
****************************************
Clock ticks: 5860
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -20
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5870
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5880
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5890
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************
****************************************
Clock ticks: 5900
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: addi x1, x1, -8
****************************************
****************************************
Clock ticks: 5910
PC at start of cycle: 0x18
PC at end of cycle: 0x14
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: bne x1, x2, -20
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5920
PC at start of cycle: 0x14
PC at end of cycle: 0x0
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: bne x1, x2, -20
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5930
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: bne x1, x2, -20
****************************************
****************************************
Clock ticks: 5940
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5950
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5960
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5970
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 5980
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: flw f0, 32(x1)
****************************************
****************************************
Clock ticks: 5990
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6000
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6010
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: fadd.s f4, f0, f2
****************************************
****************************************
Clock ticks: 6020
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -20
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6030
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6040
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6050
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************
****************************************
Clock ticks: 6060
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: addi x1, x1, -8
****************************************
****************************************
Clock ticks: 6070
PC at start of cycle: 0x18
PC at end of cycle: 0x14
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: bne x1, x2, -20
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6080
PC at start of cycle: 0x14
PC at end of cycle: 0x0
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: bne x1, x2, -20
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6090
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: bne x1, x2, -20
****************************************
****************************************
Clock ticks: 6100
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6110
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6120
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6130
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6140
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: flw f0, 32(x1)
****************************************
****************************************
Clock ticks: 6150
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6160
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6170
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: fadd.s f4, f0, f2
****************************************
****************************************
Clock ticks: 6180
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -20
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6190
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6200
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6210
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************
****************************************
Clock ticks: 6220
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: addi x1, x1, -8
****************************************
****************************************
Clock ticks: 6230
PC at start of cycle: 0x18
PC at end of cycle: 0x14
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: bne x1, x2, -20
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6240
PC at start of cycle: 0x14
PC at end of cycle: 0x0
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: bne x1, x2, -20
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6250
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: bne x1, x2, -20
****************************************
****************************************
Clock ticks: 6260
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6270
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6280
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6290
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6300
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: flw f0, 32(x1)
****************************************
****************************************
Clock ticks: 6310
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6320
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6330
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: fadd.s f4, f0, f2
****************************************
****************************************
Clock ticks: 6340
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -20
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6350
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6360
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6370
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************
****************************************
Clock ticks: 6380
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: addi x1, x1, -8
****************************************
****************************************
Clock ticks: 6390
PC at start of cycle: 0x18
PC at end of cycle: 0x14
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: bne x1, x2, -20
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6400
PC at start of cycle: 0x14
PC at end of cycle: 0x0
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: bne x1, x2, -20
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6410
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: bne x1, x2, -20
****************************************
****************************************
Clock ticks: 6420
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6430
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6440
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6450
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6460
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: flw f0, 32(x1)
****************************************
****************************************
Clock ticks: 6470
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6480
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6490
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: fadd.s f4, f0, f2
****************************************
****************************************
Clock ticks: 6500
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -20
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6510
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6520
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6530
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************
****************************************
Clock ticks: 6540
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: addi x1, x1, -8
****************************************
****************************************
Clock ticks: 6550
PC at start of cycle: 0x18
PC at end of cycle: 0x14
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: bne x1, x2, -20
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6560
PC at start of cycle: 0x14
PC at end of cycle: 0x0
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: bne x1, x2, -20
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6570
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: bne x1, x2, -20
****************************************
****************************************
Clock ticks: 6580
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6590
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6600
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6610
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6620
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: flw f0, 32(x1)
****************************************
****************************************
Clock ticks: 6630
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6640
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6650
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: fadd.s f4, f0, f2
****************************************
****************************************
Clock ticks: 6660
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -20
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6670
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6680
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6690
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************
****************************************
Clock ticks: 6700
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: addi x1, x1, -8
****************************************
****************************************
Clock ticks: 6710
PC at start of cycle: 0x18
PC at end of cycle: 0x14
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: bne x1, x2, -20
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6720
PC at start of cycle: 0x14
PC at end of cycle: 0x0
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: bne x1, x2, -20
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6730
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: bne x1, x2, -20
****************************************
****************************************
Clock ticks: 6740
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6750
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6760
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6770
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6780
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: flw f0, 32(x1)
****************************************
****************************************
Clock ticks: 6790
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6800
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6810
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: fadd.s f4, f0, f2
****************************************
****************************************
Clock ticks: 6820
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -20
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6830
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6840
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6850
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************
****************************************
Clock ticks: 6860
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: addi x1, x1, -8
****************************************
****************************************
Clock ticks: 6870
PC at start of cycle: 0x18
PC at end of cycle: 0x14
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: bne x1, x2, -20
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6880
PC at start of cycle: 0x14
PC at end of cycle: 0x0
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: bne x1, x2, -20
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6890
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: bne x1, x2, -20
****************************************
****************************************
Clock ticks: 6900
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6910
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6920
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6930
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6940
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: flw f0, 32(x1)
****************************************
****************************************
Clock ticks: 6950
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6960
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6970
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: fadd.s f4, f0, f2
****************************************
****************************************
Clock ticks: 6980
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -20
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 6990
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 7000
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 7010
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************
****************************************
Clock ticks: 7020
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: addi x1, x1, -8
****************************************
****************************************
Clock ticks: 7030
PC at start of cycle: 0x18
PC at end of cycle: 0x14
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: bne x1, x2, -20
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 7040
PC at start of cycle: 0x14
PC at end of cycle: 0x0
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: bne x1, x2, -20
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 7050
PC at start of cycle: 0x0
PC at end of cycle: 0x4
Fetch Stage: flw f0, 32(x1)
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: bne x1, x2, -20
****************************************
****************************************
Clock ticks: 7060
PC at start of cycle: 0x4
PC at end of cycle: 0x8
Fetch Stage: fadd.s f4, f0, f2
Decode Stage: flw f0, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 7070
PC at start of cycle: 0x8
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: flw f0, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 7080
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 7090
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: flw f0, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 7100
PC at start of cycle: 0xc
PC at end of cycle: 0xc
Fetch Stage: fsw f4, 32(x1)
Decode Stage: fadd.s f4, f0, f2
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: flw f0, 32(x1)
****************************************
****************************************
Clock ticks: 7110
PC at start of cycle: 0xc
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: fadd.s f4, f0, f2
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 7120
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: fadd.s f4, f0, f2
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 7130
PC at start of cycle: 0x10
PC at end of cycle: 0x10
Fetch Stage: addi x1, x1, -8
Decode Stage: fsw f4, 32(x1)
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: fadd.s f4, f0, f2
****************************************
****************************************
Clock ticks: 7140
PC at start of cycle: 0x10
PC at end of cycle: 0x14
Fetch Stage: bne x1, x2, -20
Decode Stage: addi x1, x1, -8
Execute Stage: fsw f4, 32(x1)
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 7150
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 7160
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: addi x1, x1, -8
Memory Stage: fsw f4, 32(x1)
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 7170
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: addi x1, x1, -8
Write Back Stage: fsw f4, 32(x1)
****************************************
****************************************
Clock ticks: 7180
PC at start of cycle: 0x18
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: bne x1, x2, -20
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: addi x1, x1, -8
****************************************
****************************************
Clock ticks: 7190
PC at start of cycle: 0x18
PC at end of cycle: 0x14
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: bne x1, x2, -20
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 7200
PC at start of cycle: 0x14
PC at end of cycle: 0x18
Fetch Stage: addi x0, x0, 0
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: bne x1, x2, -20
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 7210
PC at start of cycle: 0x18
PC at end of cycle: 0x1c
Fetch Stage: addi x0, x0, 0
Decode Stage: addi x0, x0, 0
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: bne x1, x2, -20
****************************************
****************************************
Clock ticks: 7220
PC at start of cycle: 0x1c
PC at end of cycle: 0x20
Fetch Stage: addi x0, x0, 0
Decode Stage: addi x0, x0, 0
Execute Stage: addi x0, x0, 0
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 7230
PC at start of cycle: 0x20
PC at end of cycle: 0x20
Fetch Stage: addi x0, x0, 0
Decode Stage: addi x0, x0, 0
Execute Stage: No_Op
Memory Stage: addi x0, x0, 0
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 7240
PC at start of cycle: 0x20
PC at end of cycle: 0x20
Fetch Stage: addi x0, x0, 0
Decode Stage: addi x0, x0, 0
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: addi x0, x0, 0
****************************************
****************************************
Clock ticks: 7250
PC at start of cycle: 0x20
PC at end of cycle: 0x24
Fetch Stage: addi x0, x0, 0
Decode Stage: addi x0, x0, 0
Execute Stage: addi x0, x0, 0
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 7260
PC at start of cycle: 0x24
PC at end of cycle: 0x24
Fetch Stage: addi x0, x0, 0
Decode Stage: addi x0, x0, 0
Execute Stage: No_Op
Memory Stage: addi x0, x0, 0
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 7270
PC at start of cycle: 0x24
PC at end of cycle: 0x24
Fetch Stage: addi x0, x0, 0
Decode Stage: addi x0, x0, 0
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: addi x0, x0, 0
****************************************
****************************************
Clock ticks: 7280
PC at start of cycle: 0x24
PC at end of cycle: 0x24
Fetch Stage: No_Op
Decode Stage: addi x0, x0, 0
Execute Stage: addi x0, x0, 0
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 7290
PC at start of cycle: 0x24
PC at end of cycle: 0x24
Fetch Stage: No_Op
Decode Stage: addi x0, x0, 0
Execute Stage: No_Op
Memory Stage: addi x0, x0, 0
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 7300
PC at start of cycle: 0x24
PC at end of cycle: 0x24
Fetch Stage: No_Op
Decode Stage: addi x0, x0, 0
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: addi x0, x0, 0
****************************************
****************************************
Clock ticks: 7310
PC at start of cycle: 0x24
PC at end of cycle: 0x24
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: addi x0, x0, 0
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 7320
PC at start of cycle: 0x24
PC at end of cycle: 0x24
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: addi x0, x0, 0
Write Back Stage: No_Op
****************************************
****************************************
Clock ticks: 7330
PC at start of cycle: 0x24
PC at end of cycle: 0x24
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: addi x0, x0, 0
****************************************
****************************************
Clock ticks: 7340
PC at start of cycle: 0x24
PC at end of cycle: 0x24
Fetch Stage: No_Op
Decode Stage: No_Op
Execute Stage: No_Op
Memory Stage: No_Op
Write Back Stage: No_Op
****************************************
*********Executed Instructions**********
Total Number of Cycles: 814
Total Number of Executed Instructions: 254
Cycles per Instruction (CPI): 3.20472
Instruction #0:	flw f0, 32(x1)
Instruction #1:	fadd.s f4, f0, f2
Instruction #2:	fsw f4, 32(x1)
Instruction #3:	addi x1, x1, -8
Instruction #4:	bne x1, x2, -20
Instruction #5:	flw f0, 32(x1)
Instruction #6:	fadd.s f4, f0, f2
Instruction #7:	fsw f4, 32(x1)
Instruction #8:	addi x1, x1, -8
Instruction #9:	bne x1, x2, -20
Instruction #10:	flw f0, 32(x1)
Instruction #11:	fadd.s f4, f0, f2
Instruction #12:	fsw f4, 32(x1)
Instruction #13:	addi x1, x1, -8
Instruction #14:	bne x1, x2, -20
Instruction #15:	flw f0, 32(x1)
Instruction #16:	fadd.s f4, f0, f2
Instruction #17:	fsw f4, 32(x1)
Instruction #18:	addi x1, x1, -8
Instruction #19:	bne x1, x2, -20
Instruction #20:	flw f0, 32(x1)
Instruction #21:	fadd.s f4, f0, f2
Instruction #22:	fsw f4, 32(x1)
Instruction #23:	addi x1, x1, -8
Instruction #24:	bne x1, x2, -20
Instruction #25:	flw f0, 32(x1)
Instruction #26:	fadd.s f4, f0, f2
Instruction #27:	fsw f4, 32(x1)
Instruction #28:	addi x1, x1, -8
Instruction #29:	bne x1, x2, -20
Instruction #30:	flw f0, 32(x1)
Instruction #31:	fadd.s f4, f0, f2
Instruction #32:	fsw f4, 32(x1)
Instruction #33:	addi x1, x1, -8
Instruction #34:	bne x1, x2, -20
Instruction #35:	flw f0, 32(x1)
Instruction #36:	fadd.s f4, f0, f2
Instruction #37:	fsw f4, 32(x1)
Instruction #38:	addi x1, x1, -8
Instruction #39:	bne x1, x2, -20
Instruction #40:	flw f0, 32(x1)
Instruction #41:	fadd.s f4, f0, f2
Instruction #42:	fsw f4, 32(x1)
Instruction #43:	addi x1, x1, -8
Instruction #44:	bne x1, x2, -20
Instruction #45:	flw f0, 32(x1)
Instruction #46:	fadd.s f4, f0, f2
Instruction #47:	fsw f4, 32(x1)
Instruction #48:	addi x1, x1, -8
Instruction #49:	bne x1, x2, -20
Instruction #50:	flw f0, 32(x1)
Instruction #51:	fadd.s f4, f0, f2
Instruction #52:	fsw f4, 32(x1)
Instruction #53:	addi x1, x1, -8
Instruction #54:	bne x1, x2, -20
Instruction #55:	flw f0, 32(x1)
Instruction #56:	fadd.s f4, f0, f2
Instruction #57:	fsw f4, 32(x1)
Instruction #58:	addi x1, x1, -8
Instruction #59:	bne x1, x2, -20
Instruction #60:	flw f0, 32(x1)
Instruction #61:	fadd.s f4, f0, f2
Instruction #62:	fsw f4, 32(x1)
Instruction #63:	addi x1, x1, -8
Instruction #64:	bne x1, x2, -20
Instruction #65:	flw f0, 32(x1)
Instruction #66:	fadd.s f4, f0, f2
Instruction #67:	fsw f4, 32(x1)
Instruction #68:	addi x1, x1, -8
Instruction #69:	bne x1, x2, -20
Instruction #70:	flw f0, 32(x1)
Instruction #71:	fadd.s f4, f0, f2
Instruction #72:	fsw f4, 32(x1)
Instruction #73:	addi x1, x1, -8
Instruction #74:	bne x1, x2, -20
Instruction #75:	flw f0, 32(x1)
Instruction #76:	fadd.s f4, f0, f2
Instruction #77:	fsw f4, 32(x1)
Instruction #78:	addi x1, x1, -8
Instruction #79:	bne x1, x2, -20
Instruction #80:	flw f0, 32(x1)
Instruction #81:	fadd.s f4, f0, f2
Instruction #82:	fsw f4, 32(x1)
Instruction #83:	addi x1, x1, -8
Instruction #84:	bne x1, x2, -20
Instruction #85:	flw f0, 32(x1)
Instruction #86:	fadd.s f4, f0, f2
Instruction #87:	fsw f4, 32(x1)
Instruction #88:	addi x1, x1, -8
Instruction #89:	bne x1, x2, -20
Instruction #90:	flw f0, 32(x1)
Instruction #91:	fadd.s f4, f0, f2
Instruction #92:	fsw f4, 32(x1)
Instruction #93:	addi x1, x1, -8
Instruction #94:	bne x1, x2, -20
Instruction #95:	flw f0, 32(x1)
Instruction #96:	fadd.s f4, f0, f2
Instruction #97:	fsw f4, 32(x1)
Instruction #98:	addi x1, x1, -8
Instruction #99:	bne x1, x2, -20
Instruction #100:	flw f0, 32(x1)
Instruction #101:	fadd.s f4, f0, f2
Instruction #102:	fsw f4, 32(x1)
Instruction #103:	addi x1, x1, -8
Instruction #104:	bne x1, x2, -20
Instruction #105:	flw f0, 32(x1)
Instruction #106:	fadd.s f4, f0, f2
Instruction #107:	fsw f4, 32(x1)
Instruction #108:	addi x1, x1, -8
Instruction #109:	bne x1, x2, -20
Instruction #110:	flw f0, 32(x1)
Instruction #111:	fadd.s f4, f0, f2
Instruction #112:	fsw f4, 32(x1)
Instruction #113:	addi x1, x1, -8
Instruction #114:	bne x1, x2, -20
Instruction #115:	flw f0, 32(x1)
Instruction #116:	fadd.s f4, f0, f2
Instruction #117:	fsw f4, 32(x1)
Instruction #118:	addi x1, x1, -8
Instruction #119:	bne x1, x2, -20
Instruction #120:	flw f0, 32(x1)
Instruction #121:	fadd.s f4, f0, f2
Instruction #122:	fsw f4, 32(x1)
Instruction #123:	addi x1, x1, -8
Instruction #124:	bne x1, x2, -20
Instruction #125:	flw f0, 32(x1)
Instruction #126:	fadd.s f4, f0, f2
Instruction #127:	fsw f4, 32(x1)
Instruction #128:	addi x1, x1, -8
Instruction #129:	bne x1, x2, -20
Instruction #130:	flw f0, 32(x1)
Instruction #131:	fadd.s f4, f0, f2
Instruction #132:	fsw f4, 32(x1)
Instruction #133:	addi x1, x1, -8
Instruction #134:	bne x1, x2, -20
Instruction #135:	flw f0, 32(x1)
Instruction #136:	fadd.s f4, f0, f2
Instruction #137:	fsw f4, 32(x1)
Instruction #138:	addi x1, x1, -8
Instruction #139:	bne x1, x2, -20
Instruction #140:	flw f0, 32(x1)
Instruction #141:	fadd.s f4, f0, f2
Instruction #142:	fsw f4, 32(x1)
Instruction #143:	addi x1, x1, -8
Instruction #144:	bne x1, x2, -20
Instruction #145:	flw f0, 32(x1)
Instruction #146:	fadd.s f4, f0, f2
Instruction #147:	fsw f4, 32(x1)
Instruction #148:	addi x1, x1, -8
Instruction #149:	bne x1, x2, -20
Instruction #150:	flw f0, 32(x1)
Instruction #151:	fadd.s f4, f0, f2
Instruction #152:	fsw f4, 32(x1)
Instruction #153:	addi x1, x1, -8
Instruction #154:	bne x1, x2, -20
Instruction #155:	flw f0, 32(x1)
Instruction #156:	fadd.s f4, f0, f2
Instruction #157:	fsw f4, 32(x1)
Instruction #158:	addi x1, x1, -8
Instruction #159:	bne x1, x2, -20
Instruction #160:	flw f0, 32(x1)
Instruction #161:	fadd.s f4, f0, f2
Instruction #162:	fsw f4, 32(x1)
Instruction #163:	addi x1, x1, -8
Instruction #164:	bne x1, x2, -20
Instruction #165:	flw f0, 32(x1)
Instruction #166:	fadd.s f4, f0, f2
Instruction #167:	fsw f4, 32(x1)
Instruction #168:	addi x1, x1, -8
Instruction #169:	bne x1, x2, -20
Instruction #170:	flw f0, 32(x1)
Instruction #171:	fadd.s f4, f0, f2
Instruction #172:	fsw f4, 32(x1)
Instruction #173:	addi x1, x1, -8
Instruction #174:	bne x1, x2, -20
Instruction #175:	flw f0, 32(x1)
Instruction #176:	fadd.s f4, f0, f2
Instruction #177:	fsw f4, 32(x1)
Instruction #178:	addi x1, x1, -8
Instruction #179:	bne x1, x2, -20
Instruction #180:	flw f0, 32(x1)
Instruction #181:	fadd.s f4, f0, f2
Instruction #182:	fsw f4, 32(x1)
Instruction #183:	addi x1, x1, -8
Instruction #184:	bne x1, x2, -20
Instruction #185:	flw f0, 32(x1)
Instruction #186:	fadd.s f4, f0, f2
Instruction #187:	fsw f4, 32(x1)
Instruction #188:	addi x1, x1, -8
Instruction #189:	bne x1, x2, -20
Instruction #190:	flw f0, 32(x1)
Instruction #191:	fadd.s f4, f0, f2
Instruction #192:	fsw f4, 32(x1)
Instruction #193:	addi x1, x1, -8
Instruction #194:	bne x1, x2, -20
Instruction #195:	flw f0, 32(x1)
Instruction #196:	fadd.s f4, f0, f2
Instruction #197:	fsw f4, 32(x1)
Instruction #198:	addi x1, x1, -8
Instruction #199:	bne x1, x2, -20
Instruction #200:	flw f0, 32(x1)
Instruction #201:	fadd.s f4, f0, f2
Instruction #202:	fsw f4, 32(x1)
Instruction #203:	addi x1, x1, -8
Instruction #204:	bne x1, x2, -20
Instruction #205:	flw f0, 32(x1)
Instruction #206:	fadd.s f4, f0, f2
Instruction #207:	fsw f4, 32(x1)
Instruction #208:	addi x1, x1, -8
Instruction #209:	bne x1, x2, -20
Instruction #210:	flw f0, 32(x1)
Instruction #211:	fadd.s f4, f0, f2
Instruction #212:	fsw f4, 32(x1)
Instruction #213:	addi x1, x1, -8
Instruction #214:	bne x1, x2, -20
Instruction #215:	flw f0, 32(x1)
Instruction #216:	fadd.s f4, f0, f2
Instruction #217:	fsw f4, 32(x1)
Instruction #218:	addi x1, x1, -8
Instruction #219:	bne x1, x2, -20
Instruction #220:	flw f0, 32(x1)
Instruction #221:	fadd.s f4, f0, f2
Instruction #222:	fsw f4, 32(x1)
Instruction #223:	addi x1, x1, -8
Instruction #224:	bne x1, x2, -20
Instruction #225:	flw f0, 32(x1)
Instruction #226:	fadd.s f4, f0, f2
Instruction #227:	fsw f4, 32(x1)
Instruction #228:	addi x1, x1, -8
Instruction #229:	bne x1, x2, -20
Instruction #230:	flw f0, 32(x1)
Instruction #231:	fadd.s f4, f0, f2
Instruction #232:	fsw f4, 32(x1)
Instruction #233:	addi x1, x1, -8
Instruction #234:	bne x1, x2, -20
Instruction #235:	flw f0, 32(x1)
Instruction #236:	fadd.s f4, f0, f2
Instruction #237:	fsw f4, 32(x1)
Instruction #238:	addi x1, x1, -8
Instruction #239:	bne x1, x2, -20
Instruction #240:	flw f0, 32(x1)
Instruction #241:	fadd.s f4, f0, f2
Instruction #242:	fsw f4, 32(x1)
Instruction #243:	addi x1, x1, -8
Instruction #244:	bne x1, x2, -20
Instruction #245:	flw f0, 32(x1)
Instruction #246:	fadd.s f4, f0, f2
Instruction #247:	fsw f4, 32(x1)
Instruction #248:	addi x1, x1, -8
Instruction #249:	bne x1, x2, -20
Instruction #250:	addi x0, x0, 0
Instruction #251:	addi x0, x0, 0
Instruction #252:	addi x0, x0, 0
Instruction #253:	addi x0, x0, 0
*********Executed Instructions**********
Total Number of Cycles: 734
Total Number of Executed Instructions: 229
Cycles per Instruction (CPI): 3.20524
Instruction #0:	flw f0, 32(x1)
Instruction #1:	fadd.s f4, f0, f2
Instruction #2:	fsw f4, 32(x1)
Instruction #3:	addi x1, x1, -8
Instruction #4:	bne x1, x2, -20
Instruction #5:	flw f0, 32(x1)
Instruction #6:	fadd.s f4, f0, f2
Instruction #7:	fsw f4, 32(x1)
Instruction #8:	addi x1, x1, -8
Instruction #9:	bne x1, x2, -20
Instruction #10:	flw f0, 32(x1)
Instruction #11:	fadd.s f4, f0, f2
Instruction #12:	fsw f4, 32(x1)
Instruction #13:	addi x1, x1, -8
Instruction #14:	bne x1, x2, -20
Instruction #15:	flw f0, 32(x1)
Instruction #16:	fadd.s f4, f0, f2
Instruction #17:	fsw f4, 32(x1)
Instruction #18:	addi x1, x1, -8
Instruction #19:	bne x1, x2, -20
Instruction #20:	flw f0, 32(x1)
Instruction #21:	fadd.s f4, f0, f2
Instruction #22:	fsw f4, 32(x1)
Instruction #23:	addi x1, x1, -8
Instruction #24:	bne x1, x2, -20
Instruction #25:	flw f0, 32(x1)
Instruction #26:	fadd.s f4, f0, f2
Instruction #27:	fsw f4, 32(x1)
Instruction #28:	addi x1, x1, -8
Instruction #29:	bne x1, x2, -20
Instruction #30:	flw f0, 32(x1)
Instruction #31:	fadd.s f4, f0, f2
Instruction #32:	fsw f4, 32(x1)
Instruction #33:	addi x1, x1, -8
Instruction #34:	bne x1, x2, -20
Instruction #35:	flw f0, 32(x1)
Instruction #36:	fadd.s f4, f0, f2
Instruction #37:	fsw f4, 32(x1)
Instruction #38:	addi x1, x1, -8
Instruction #39:	bne x1, x2, -20
Instruction #40:	flw f0, 32(x1)
Instruction #41:	fadd.s f4, f0, f2
Instruction #42:	fsw f4, 32(x1)
Instruction #43:	addi x1, x1, -8
Instruction #44:	bne x1, x2, -20
Instruction #45:	flw f0, 32(x1)
Instruction #46:	fadd.s f4, f0, f2
Instruction #47:	fsw f4, 32(x1)
Instruction #48:	addi x1, x1, -8
Instruction #49:	bne x1, x2, -20
Instruction #50:	flw f0, 32(x1)
Instruction #51:	fadd.s f4, f0, f2
Instruction #52:	fsw f4, 32(x1)
Instruction #53:	addi x1, x1, -8
Instruction #54:	bne x1, x2, -20
Instruction #55:	flw f0, 32(x1)
Instruction #56:	fadd.s f4, f0, f2
Instruction #57:	fsw f4, 32(x1)
Instruction #58:	addi x1, x1, -8
Instruction #59:	bne x1, x2, -20
Instruction #60:	flw f0, 32(x1)
Instruction #61:	fadd.s f4, f0, f2
Instruction #62:	fsw f4, 32(x1)
Instruction #63:	addi x1, x1, -8
Instruction #64:	bne x1, x2, -20
Instruction #65:	flw f0, 32(x1)
Instruction #66:	fadd.s f4, f0, f2
Instruction #67:	fsw f4, 32(x1)
Instruction #68:	addi x1, x1, -8
Instruction #69:	bne x1, x2, -20
Instruction #70:	flw f0, 32(x1)
Instruction #71:	fadd.s f4, f0, f2
Instruction #72:	fsw f4, 32(x1)
Instruction #73:	addi x1, x1, -8
Instruction #74:	bne x1, x2, -20
Instruction #75:	flw f0, 32(x1)
Instruction #76:	fadd.s f4, f0, f2
Instruction #77:	fsw f4, 32(x1)
Instruction #78:	addi x1, x1, -8
Instruction #79:	bne x1, x2, -20
Instruction #80:	flw f0, 32(x1)
Instruction #81:	fadd.s f4, f0, f2
Instruction #82:	fsw f4, 32(x1)
Instruction #83:	addi x1, x1, -8
Instruction #84:	bne x1, x2, -20
Instruction #85:	flw f0, 32(x1)
Instruction #86:	fadd.s f4, f0, f2
Instruction #87:	fsw f4, 32(x1)
Instruction #88:	addi x1, x1, -8
Instruction #89:	bne x1, x2, -20
Instruction #90:	flw f0, 32(x1)
Instruction #91:	fadd.s f4, f0, f2
Instruction #92:	fsw f4, 32(x1)
Instruction #93:	addi x1, x1, -8
Instruction #94:	bne x1, x2, -20
Instruction #95:	flw f0, 32(x1)
Instruction #96:	fadd.s f4, f0, f2
Instruction #97:	fsw f4, 32(x1)
Instruction #98:	addi x1, x1, -8
Instruction #99:	bne x1, x2, -20
Instruction #100:	flw f0, 32(x1)
Instruction #101:	fadd.s f4, f0, f2
Instruction #102:	fsw f4, 32(x1)
Instruction #103:	addi x1, x1, -8
Instruction #104:	bne x1, x2, -20
Instruction #105:	flw f0, 32(x1)
Instruction #106:	fadd.s f4, f0, f2
Instruction #107:	fsw f4, 32(x1)
Instruction #108:	addi x1, x1, -8
Instruction #109:	bne x1, x2, -20
Instruction #110:	flw f0, 32(x1)
Instruction #111:	fadd.s f4, f0, f2
Instruction #112:	fsw f4, 32(x1)
Instruction #113:	addi x1, x1, -8
Instruction #114:	bne x1, x2, -20
Instruction #115:	flw f0, 32(x1)
Instruction #116:	fadd.s f4, f0, f2
Instruction #117:	fsw f4, 32(x1)
Instruction #118:	addi x1, x1, -8
Instruction #119:	bne x1, x2, -20
Instruction #120:	flw f0, 32(x1)
Instruction #121:	fadd.s f4, f0, f2
Instruction #122:	fsw f4, 32(x1)
Instruction #123:	addi x1, x1, -8
Instruction #124:	bne x1, x2, -20
Instruction #125:	flw f0, 32(x1)
Instruction #126:	fadd.s f4, f0, f2
Instruction #127:	fsw f4, 32(x1)
Instruction #128:	addi x1, x1, -8
Instruction #129:	bne x1, x2, -20
Instruction #130:	flw f0, 32(x1)
Instruction #131:	fadd.s f4, f0, f2
Instruction #132:	fsw f4, 32(x1)
Instruction #133:	addi x1, x1, -8
Instruction #134:	bne x1, x2, -20
Instruction #135:	flw f0, 32(x1)
Instruction #136:	fadd.s f4, f0, f2
Instruction #137:	fsw f4, 32(x1)
Instruction #138:	addi x1, x1, -8
Instruction #139:	bne x1, x2, -20
Instruction #140:	flw f0, 32(x1)
Instruction #141:	fadd.s f4, f0, f2
Instruction #142:	fsw f4, 32(x1)
Instruction #143:	addi x1, x1, -8
Instruction #144:	bne x1, x2, -20
Instruction #145:	flw f0, 32(x1)
Instruction #146:	fadd.s f4, f0, f2
Instruction #147:	fsw f4, 32(x1)
Instruction #148:	addi x1, x1, -8
Instruction #149:	bne x1, x2, -20
Instruction #150:	flw f0, 32(x1)
Instruction #151:	fadd.s f4, f0, f2
Instruction #152:	fsw f4, 32(x1)
Instruction #153:	addi x1, x1, -8
Instruction #154:	bne x1, x2, -20
Instruction #155:	flw f0, 32(x1)
Instruction #156:	fadd.s f4, f0, f2
Instruction #157:	fsw f4, 32(x1)
Instruction #158:	addi x1, x1, -8
Instruction #159:	bne x1, x2, -20
Instruction #160:	flw f0, 32(x1)
Instruction #161:	fadd.s f4, f0, f2
Instruction #162:	fsw f4, 32(x1)
Instruction #163:	addi x1, x1, -8
Instruction #164:	bne x1, x2, -20
Instruction #165:	flw f0, 32(x1)
Instruction #166:	fadd.s f4, f0, f2
Instruction #167:	fsw f4, 32(x1)
Instruction #168:	addi x1, x1, -8
Instruction #169:	bne x1, x2, -20
Instruction #170:	flw f0, 32(x1)
Instruction #171:	fadd.s f4, f0, f2
Instruction #172:	fsw f4, 32(x1)
Instruction #173:	addi x1, x1, -8
Instruction #174:	bne x1, x2, -20
Instruction #175:	flw f0, 32(x1)
Instruction #176:	fadd.s f4, f0, f2
Instruction #177:	fsw f4, 32(x1)
Instruction #178:	addi x1, x1, -8
Instruction #179:	bne x1, x2, -20
Instruction #180:	flw f0, 32(x1)
Instruction #181:	fadd.s f4, f0, f2
Instruction #182:	fsw f4, 32(x1)
Instruction #183:	addi x1, x1, -8
Instruction #184:	bne x1, x2, -20
Instruction #185:	flw f0, 32(x1)
Instruction #186:	fadd.s f4, f0, f2
Instruction #187:	fsw f4, 32(x1)
Instruction #188:	addi x1, x1, -8
Instruction #189:	bne x1, x2, -20
Instruction #190:	flw f0, 32(x1)
Instruction #191:	fadd.s f4, f0, f2
Instruction #192:	fsw f4, 32(x1)
Instruction #193:	addi x1, x1, -8
Instruction #194:	bne x1, x2, -20
Instruction #195:	flw f0, 32(x1)
Instruction #196:	fadd.s f4, f0, f2
Instruction #197:	fsw f4, 32(x1)
Instruction #198:	addi x1, x1, -8
Instruction #199:	bne x1, x2, -20
Instruction #200:	flw f0, 32(x1)
Instruction #201:	fadd.s f4, f0, f2
Instruction #202:	fsw f4, 32(x1)
Instruction #203:	addi x1, x1, -8
Instruction #204:	bne x1, x2, -20
Instruction #205:	flw f0, 32(x1)
Instruction #206:	fadd.s f4, f0, f2
Instruction #207:	fsw f4, 32(x1)
Instruction #208:	addi x1, x1, -8
Instruction #209:	bne x1, x2, -20
Instruction #210:	flw f0, 32(x1)
Instruction #211:	fadd.s f4, f0, f2
Instruction #212:	fsw f4, 32(x1)
Instruction #213:	addi x1, x1, -8
Instruction #214:	bne x1, x2, -20
Instruction #215:	flw f0, 32(x1)
Instruction #216:	fadd.s f4, f0, f2
Instruction #217:	fsw f4, 32(x1)
Instruction #218:	addi x1, x1, -8
Instruction #219:	bne x1, x2, -20
Instruction #220:	flw f0, 32(x1)
Instruction #221:	fadd.s f4, f0, f2
Instruction #222:	fsw f4, 32(x1)
Instruction #223:	addi x1, x1, -8
Instruction #224:	bne x1, x2, -20
Instruction #225:	addi x0, x0, 0
Instruction #226:	addi x0, x0, 0
Instruction #227:	addi x0, x0, 0
Instruction #228:	addi x0, x0, 0
